{
	"id": "5ca4b11957cf877bd9ef6a21947b155c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Registry.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"./interfaces/IRegistry.sol\";\nimport \"./Ownable.sol\";\n\n/// @title Registry\n/// @notice This contract is used to manage the whitelist of addresses that can be used across the Chibarihill program.\n/// @author thev\ncontract Registry is IRegistry, AccessControl {\n  mapping(address => bool) public whitelist;\n\n  event Whitelisted(address indexed member);\n  event Removed(address indexed member);\n\n  constructor() {\n    _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n  }\n\n  /// @notice This function is used to bulk add addresses to the whitelist.\n  /// @param members Array of addresses of the members of cohort to add.\n  function bulkAddToWhitelist(address[] calldata members) external onlyRole(DEFAULT_ADMIN_ROLE) {\n    for (uint256 i = 0; i < members.length; i++) {\n      _whitelist(members[i]);\n    }\n  }\n\n  /// @notice This function is used to add addresses to the whitelist.\n  /// @param member Address of the member to add.\n  function addToWhitelist(address member) external onlyRole(DEFAULT_ADMIN_ROLE) {\n    _whitelist(member);\n  }\n\n  function _whitelist(address member) internal {\n    whitelist[member] = true;\n    emit Whitelisted(member);\n  }\n\n  /// @notice This function is used to bulk remove addresses from the whitelist.\n  /// @param members Array of addresses of the members of cohort to remove.\n  function bulkRemoveFromWhitelist(\n    address[] calldata members\n  ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n    for (uint256 i = 0; i < members.length; i++) {\n      _removeWhitelist(members[i]);\n    }\n  }\n\n  /// @notice This function is used to remove addresses from the whitelist.\n  /// @param member Address of the member to remove.\n  function removeFromWhitelist(address member) external onlyRole(DEFAULT_ADMIN_ROLE) {\n    _removeWhitelist(member);\n  }\n\n  function _removeWhitelist(address member) internal {\n    whitelist[member] = false;\n    emit Removed(member);\n  }\n\n  /// @notice This function is used to check if an address is whitelisted.\n  /// @dev this call assumes that you are interested in the current cohort\n  /// @param member Address of the member to check.\n  /// @return True if the address is whitelisted, false otherwise.\n  function isWhitelisted(address member) public view returns (bool) {\n    return whitelist[member];\n  }\n\n  /// @notice This function is used to check if an array of addresses are whitelisted.\n  /// @param members Array of addresses of the members to check.\n  /// @return True if all addresses are whitelisted, false otherwise.\n  function areWhitelisted(address[] calldata members) external view returns (bool) {\n    for (uint256 i = 0; i < members.length; ++i) {\n      if (!isWhitelisted(members[i])) return false;\n    }\n    return true;\n  }\n\n  /// @notice This function is used to grant Default admin role\n  /// @dev Add the address of the relayer contract when relaying and operating a registry\n  function grantRoleAdmin(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {\n    _grantRole(DEFAULT_ADMIN_ROLE, account);\n  }\n}"
			},
			"contracts/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\nerror OnlyOwner();\nerror InvalidNewOwner();\n\nabstract contract Ownable {\n  address public owner;\n  address public newOwner;\n\n  event OwnershipChangeInitiated(address indexed previousOwner, address indexed newOwner);\n  event OwnershipChangeAccepted(address indexed previousOwner, address indexed newOwner);\n\n  modifier onlyOwner() {\n    _checkOwner();\n    _;\n  }\n\n  /// @notice The constructor sets the owner of the contract.\n  constructor() {\n    _setOwner(msg.sender);\n  }\n\n  /// @notice This function is used to transfer ownership of the contract.\n  /// @param _newOwner Address of the new owner.\n  function transferOwnership(address _newOwner) external onlyOwner {\n    newOwner = _newOwner;\n    emit OwnershipChangeInitiated(owner, newOwner);\n  }\n\n  /// @notice This function is used to accept ownership of the contract.\n  function acceptOwnership() external {\n    if (msg.sender != newOwner) revert InvalidNewOwner();\n    emit OwnershipChangeAccepted(owner, newOwner);\n    newOwner = address(0);\n    _setOwner(newOwner);\n  }\n\n  function _checkOwner() internal view {\n    if (msg.sender != owner) revert OnlyOwner();\n  }\n\n  function _setOwner(address _newOwner) internal {\n    owner = _newOwner;\n  }\n}"
			},
			"contracts/interfaces/IRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\nerror MemberNotWhitelisted(address member);\nerror NotWhitelisted();\n\n/// @title IRegistry\n/// @notice This is the interface for a registry contract\n/// @author thev\ninterface IRegistry {\n  function isWhitelisted(address member) external view returns (bool);\n\n  function areWhitelisted(address[] calldata member) external view returns (bool);\n\n  function bulkAddToWhitelist(address[] calldata members) external;\n\n  function addToWhitelist(address member) external;\n\n  function bulkRemoveFromWhitelist(address[] calldata members) external;\n\n  function removeFromWhitelist(address member) external;\n\n  function grantRoleAdmin(address account) external;\n}"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":188:2253  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202be3788305d51dccf412882e015ded65d6890e38d360ee4450d98f27031c296564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202be3788305d51dccf412882e015ded65d6890e38d360ee4450d98f27031c296564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xE3 PUSH25 0x8305D51DCCF412882E015DED65D6890E38D360EE4450D98F27 SUB SHR 0x29 PUSH6 0x64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "188:2065:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202be3788305d51dccf412882e015ded65d6890e38d360ee4450d98f27031c296564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B 0xE3 PUSH25 0x8305D51DCCF412882E015DED65D6890E38D360EE4450D98F27 SUB SHR 0x29 PUSH6 0x64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "188:2065:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 188,
									"end": 2253,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202be3788305d51dccf412882e015ded65d6890e38d360ee4450d98f27031c296564736f6c63430008120033",
									".code": [
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 188,
											"end": 2253,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/Ownable.sol",
								"contracts/Registry.sol",
								"contracts/interfaces/IRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12504  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH4 0xFFDAAE21 0xFC MUL PUSH14 0xEE9DAAD1BFFB318E7C5B3A3259E4 DUP7 0xC6 POP SIGNEXTEND 0x22 DUP16 ISZERO POP DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:12302:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 PUSH4 0xFFDAAE21 0xFC MUL PUSH14 0xEE9DAAD1BFFB318E7C5B3A3259E4 DUP7 0xC6 POP SIGNEXTEND 0x22 DUP16 ISZERO POP DUP16 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "202:12302:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 202,
									"end": 12504,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208f63ffdaae21fc026dee9daad1bffb318e7c5b3a3259e486c6500b228f15508f64736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 202,
											"end": 12504,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/Ownable.sol",
								"contracts/Registry.sol",
								"contracts/interfaces/IRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidNewOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OnlyOwner",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipChangeAccepted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipChangeInitiated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "newOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"transferOwnership(address)": {
								"params": {
									"_newOwner": "Address of the new owner."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"newOwner()": "d4ee1d90",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidNewOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipChangeAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipChangeInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"transferOwnership(address)\":{\"params\":{\"_newOwner\":\"Address of the new owner.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"This function is used to accept ownership of the contract.\"},\"constructor\":{\"notice\":\"The constructor sets the owner of the contract.\"},\"transferOwnership(address)\":{\"notice\":\"This function is used to transfer ownership of the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Ownable.sol\":{\"keccak256\":\"0x3f4305479d6f502bcc43fb10cd8991b6acbe5858cc59a34d1ed6d8fd075a6dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cb36f1abe2b6470d2e985e817167ad459fc9fe59cc37e423d12bcf5255ba18f\",\"dweb:/ipfs/QmU5nA456h88cQJZmrgo4cxihxgW5AmxrUNafhJ9BLAFgC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1494,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1496,
								"contract": "contracts/Ownable.sol:Ownable",
								"label": "newOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "This function is used to accept ownership of the contract."
							},
							"constructor": {
								"notice": "The constructor sets the owner of the contract."
							},
							"transferOwnership(address)": {
								"notice": "This function is used to transfer ownership of the contract."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/Registry.sol": {
				"Registry": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "Removed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "Whitelisted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "members",
									"type": "address[]"
								}
							],
							"name": "areWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "members",
									"type": "address[]"
								}
							],
							"name": "bulkAddToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "members",
									"type": "address[]"
								}
							],
							"name": "bulkRemoveFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRoleAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whitelist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "thev",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"addToWhitelist(address)": {
								"params": {
									"member": "Address of the member to add."
								}
							},
							"areWhitelisted(address[])": {
								"params": {
									"members": "Array of addresses of the members to check."
								},
								"returns": {
									"_0": "True if all addresses are whitelisted, false otherwise."
								}
							},
							"bulkAddToWhitelist(address[])": {
								"params": {
									"members": "Array of addresses of the members of cohort to add."
								}
							},
							"bulkRemoveFromWhitelist(address[])": {
								"params": {
									"members": "Array of addresses of the members of cohort to remove."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"grantRoleAdmin(address)": {
								"details": "Add the address of the relayer contract when relaying and operating a registry"
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isWhitelisted(address)": {
								"details": "this call assumes that you are interested in the current cohort",
								"params": {
									"member": "Address of the member to check."
								},
								"returns": {
									"_0": "True if the address is whitelisted, false otherwise."
								}
							},
							"removeFromWhitelist(address)": {
								"params": {
									"member": "Address of the member to remove."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"title": "Registry",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Registry.sol\":336:3106  contract Registry is IRegistry, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Registry.sol\":519:586  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Registry.sol\":539:581  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n  0x00\n    /* \"contracts/Registry.sol\":550:568  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/Registry.sol\":570:580  msg.sender */\n  caller\n    /* \"contracts/Registry.sol\":539:549  _grantRole */\n  shl(0x20, tag_5)\n    /* \"contracts/Registry.sol\":539:581  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/Registry.sol\":336:3106  contract Registry is IRegistry, AccessControl {... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7556  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7558:7565  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7614:7618  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7588  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7589:7593  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7603:7610  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  tag_11\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7655:7662  account */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7649:7653  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/Registry.sol\":336:3106  contract Registry is IRegistry, AccessControl {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Registry.sol\":336:3106  contract Registry is IRegistry, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6c79af10\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xab4bca64\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x6c79af10\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8ab1d681\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9b19251a\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x248a9ca3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3af32abf\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0a84246d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1c84bfc2\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Registry.sol\":2975:3104  function grantRoleAdmin(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/Registry.sol\":2605:2817  function areWhitelisted(address[] calldata members) external view returns (bool) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/Registry.sol\":2278:2379  function isWhitelisted(address member) public view returns (bool) {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Registry.sol\":739:925  function bulkAddToWhitelist(address[] calldata members) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/Registry.sol\":1770:1888  function removeFromWhitelist(address member) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_12:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Registry.sol\":386:427  mapping(address => bool) public whitelist */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Registry.sol\":1432:1637  function bulkRemoveFromWhitelist(... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/Registry.sol\":1050:1157  function addToWhitelist(address member) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2691:2695  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2729:2761  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2725  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2761  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_80\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      tag_81\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2789:2800  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2788  super.supportsInterface */\n      tag_82\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2765:2801  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2714:2801  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2707:2801  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2606:2808  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Registry.sol\":2975:3104  function grantRoleAdmin(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/Registry.sol\":3034:3052  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_84\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_85\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/Registry.sol\":3060:3099  _grantRole(DEFAULT_ADMIN_ROLE, account) */\n      tag_87\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/Registry.sol\":3071:3089  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/Registry.sol\":3091:3098  account */\n      dup4\n        /* \"contracts/Registry.sol\":3060:3070  _grantRole */\n      tag_88\n        /* \"contracts/Registry.sol\":3060:3099  _grantRole(DEFAULT_ADMIN_ROLE, account) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/Registry.sol\":2975:3104  function grantRoleAdmin(address account) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Registry.sol\":2605:2817  function areWhitelisted(address[] calldata members) external view returns (bool) {... */\n    tag_34:\n        /* \"contracts/Registry.sol\":2680:2684  bool */\n      0x00\n        /* \"contracts/Registry.sol\":2697:2706  uint256 i */\n      dup1\n        /* \"contracts/Registry.sol\":2709:2710  0 */\n      0x00\n        /* \"contracts/Registry.sol\":2697:2710  uint256 i = 0 */\n      swap1\n      pop\n        /* \"contracts/Registry.sol\":2692:2796  for (uint256 i = 0; i < members.length; ++i) {... */\n    tag_90:\n        /* \"contracts/Registry.sol\":2716:2723  members */\n      dup4\n      dup4\n        /* \"contracts/Registry.sol\":2716:2730  members.length */\n      swap1\n      pop\n        /* \"contracts/Registry.sol\":2712:2713  i */\n      dup2\n        /* \"contracts/Registry.sol\":2712:2730  i < members.length */\n      lt\n        /* \"contracts/Registry.sol\":2692:2796  for (uint256 i = 0; i < members.length; ++i) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/Registry.sol\":2750:2775  isWhitelisted(members[i]) */\n      tag_93\n        /* \"contracts/Registry.sol\":2764:2771  members */\n      dup5\n      dup5\n        /* \"contracts/Registry.sol\":2772:2773  i */\n      dup4\n        /* \"contracts/Registry.sol\":2764:2774  members[i] */\n      dup2\n      dup2\n      lt\n      tag_94\n      jumpi\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n    tag_94:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_97:\n        /* \"contracts/Registry.sol\":2750:2763  isWhitelisted */\n      tag_51\n        /* \"contracts/Registry.sol\":2750:2775  isWhitelisted(members[i]) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/Registry.sol\":2745:2789  if (!isWhitelisted(members[i])) return false */\n      tag_98\n      jumpi\n        /* \"contracts/Registry.sol\":2784:2789  false */\n      0x00\n        /* \"contracts/Registry.sol\":2777:2789  return false */\n      swap2\n      pop\n      pop\n      jump(tag_89)\n        /* \"contracts/Registry.sol\":2745:2789  if (!isWhitelisted(members[i])) return false */\n    tag_98:\n        /* \"contracts/Registry.sol\":2732:2735  ++i */\n      dup1\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"contracts/Registry.sol\":2692:2796  for (uint256 i = 0; i < members.length; ++i) {... */\n      jump(tag_90)\n    tag_91:\n      pop\n        /* \"contracts/Registry.sol\":2808:2812  true */\n      0x01\n        /* \"contracts/Registry.sol\":2801:2812  return true */\n      swap1\n      pop\n        /* \"contracts/Registry.sol\":2605:2817  function areWhitelisted(address[] calldata members) external view returns (bool) {... */\n    tag_89:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4452:4459  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4484  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4485:4489  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4490  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4478:4500  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4471:4500  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4378:4507  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      tag_102\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4899:4903  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4898  getRoleAdmin */\n      tag_39\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4886:4904  getRoleAdmin(role) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_85\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      tag_106\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4927:4931  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4933:4940  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4926  _grantRole */\n      tag_88\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4916:4941  _grantRole(role, account) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4803:4948  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6028  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6018:6030  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6014  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6007:6030  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5999:6082  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6105:6109  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6111:6118  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6104  _revokeRole */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6093:6119  _revokeRole(role, account) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5912:6126  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Registry.sol\":2278:2379  function isWhitelisted(address member) public view returns (bool) {... */\n    tag_51:\n        /* \"contracts/Registry.sol\":2338:2342  bool */\n      0x00\n        /* \"contracts/Registry.sol\":2357:2366  whitelist */\n      0x01\n        /* \"contracts/Registry.sol\":2357:2374  whitelist[member] */\n      0x00\n        /* \"contracts/Registry.sol\":2367:2373  member */\n      dup4\n        /* \"contracts/Registry.sol\":2357:2374  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Registry.sol\":2350:2374  return whitelist[member] */\n      swap1\n      pop\n        /* \"contracts/Registry.sol\":2278:2379  function isWhitelisted(address member) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Registry.sol\":739:925  function bulkAddToWhitelist(address[] calldata members) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/Registry.sol\":813:831  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_117\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_85\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/Registry.sol\":844:853  uint256 i */\n      0x00\n        /* \"contracts/Registry.sol\":839:921  for (uint256 i = 0; i < members.length; i++) {... */\n    tag_119:\n        /* \"contracts/Registry.sol\":863:870  members */\n      dup4\n      dup4\n        /* \"contracts/Registry.sol\":863:877  members.length */\n      swap1\n      pop\n        /* \"contracts/Registry.sol\":859:860  i */\n      dup2\n        /* \"contracts/Registry.sol\":859:877  i < members.length */\n      lt\n        /* \"contracts/Registry.sol\":839:921  for (uint256 i = 0; i < members.length; i++) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"contracts/Registry.sol\":892:914  _whitelist(members[i]) */\n      tag_122\n        /* \"contracts/Registry.sol\":903:910  members */\n      dup5\n      dup5\n        /* \"contracts/Registry.sol\":911:912  i */\n      dup4\n        /* \"contracts/Registry.sol\":903:913  members[i] */\n      dup2\n      dup2\n      lt\n      tag_123\n      jumpi\n      tag_124\n      tag_96\n      jump\t// in\n    tag_124:\n    tag_123:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_125:\n        /* \"contracts/Registry.sol\":892:902  _whitelist */\n      tag_126\n        /* \"contracts/Registry.sol\":892:914  _whitelist(members[i]) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/Registry.sol\":879:882  i++ */\n      dup1\n      dup1\n      tag_127\n      swap1\n      tag_100\n      jump\t// in\n    tag_127:\n      swap2\n      pop\n      pop\n        /* \"contracts/Registry.sol\":839:921  for (uint256 i = 0; i < members.length; i++) {... */\n      jump(tag_119)\n    tag_120:\n      pop\n        /* \"contracts/Registry.sol\":739:925  function bulkAddToWhitelist(address[] calldata members) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Registry.sol\":1770:1888  function removeFromWhitelist(address member) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/Registry.sol\":1833:1851  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_129\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_85\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/Registry.sol\":1859:1883  _removeWhitelist(member) */\n      tag_131\n        /* \"contracts/Registry.sol\":1876:1882  member */\n      dup3\n        /* \"contracts/Registry.sol\":1859:1875  _removeWhitelist */\n      tag_132\n        /* \"contracts/Registry.sol\":1859:1883  _removeWhitelist(member) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/Registry.sol\":1770:1888  function removeFromWhitelist(address member) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2981:2985  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3010  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3011:3015  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3016  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3024  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3025:3032  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3004:3033  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2997:3033  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2895:3040  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Registry.sol\":386:427  mapping(address => bool) public whitelist */\n    tag_65:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2027:2076  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/Registry.sol\":1432:1637  function bulkRemoveFromWhitelist(... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/Registry.sol\":1519:1537  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_85\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/Registry.sol\":1550:1559  uint256 i */\n      0x00\n        /* \"contracts/Registry.sol\":1545:1633  for (uint256 i = 0; i < members.length; i++) {... */\n    tag_137:\n        /* \"contracts/Registry.sol\":1569:1576  members */\n      dup4\n      dup4\n        /* \"contracts/Registry.sol\":1569:1583  members.length */\n      swap1\n      pop\n        /* \"contracts/Registry.sol\":1565:1566  i */\n      dup2\n        /* \"contracts/Registry.sol\":1565:1583  i < members.length */\n      lt\n        /* \"contracts/Registry.sol\":1545:1633  for (uint256 i = 0; i < members.length; i++) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"contracts/Registry.sol\":1598:1626  _removeWhitelist(members[i]) */\n      tag_140\n        /* \"contracts/Registry.sol\":1615:1622  members */\n      dup5\n      dup5\n        /* \"contracts/Registry.sol\":1623:1624  i */\n      dup4\n        /* \"contracts/Registry.sol\":1615:1625  members[i] */\n      dup2\n      dup2\n      lt\n      tag_141\n      jumpi\n      tag_142\n      tag_96\n      jump\t// in\n    tag_142:\n    tag_141:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_143:\n        /* \"contracts/Registry.sol\":1598:1614  _removeWhitelist */\n      tag_132\n        /* \"contracts/Registry.sol\":1598:1626  _removeWhitelist(members[i]) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/Registry.sol\":1585:1588  i++ */\n      dup1\n      dup1\n      tag_144\n      swap1\n      tag_100\n      jump\t// in\n    tag_144:\n      swap2\n      pop\n      pop\n        /* \"contracts/Registry.sol\":1545:1633  for (uint256 i = 0; i < members.length; i++) {... */\n      jump(tag_137)\n    tag_138:\n      pop\n        /* \"contracts/Registry.sol\":1432:1637  function bulkRemoveFromWhitelist(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5325:5329  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5324  getRoleAdmin */\n      tag_39\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5312:5330  getRoleAdmin(role) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_147\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_85\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      tag_149\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5358  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5360:5367  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5353  _revokeRole */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5342:5368  _revokeRole(role, account) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5228:5375  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Registry.sol\":1050:1157  function addToWhitelist(address member) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2072:2076  0x00 */\n      0x00\n        /* \"contracts/Registry.sol\":1108:1126  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2516:2520  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2515  _checkRole */\n      tag_85\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2505:2521  _checkRole(role) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/Registry.sol\":1134:1152  _whitelist(member) */\n      tag_153\n        /* \"contracts/Registry.sol\":1145:1151  member */\n      dup3\n        /* \"contracts/Registry.sol\":1134:1144  _whitelist */\n      tag_126\n        /* \"contracts/Registry.sol\":1134:1152  _whitelist(member) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/Registry.sol\":1050:1157  function addToWhitelist(address member) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      tag_156\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3411:3415  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3427  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3417:3429  _msgSender() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3410  _checkRole */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3400:3430  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_156:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3334:3437  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7552:7556  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7558:7565  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7551  hasRole */\n      tag_61\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7544:7566  hasRole(role, account) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7614:7618  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7588  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7589:7593  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7594  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7602  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7603:7610  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7611  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7582:7618  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7674  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7664:7676  _msgSender() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7655:7662  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7649:7653  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7637:7677  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7539:7688  if (!hasRole(role, account)) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7461:7694  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      tag_165\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7956:7960  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7962:7969  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7955  hasRole */\n      tag_61\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7948:7970  hasRole(role, account) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8018:8023  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7992  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7993:7997  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:7998  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8006  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8007:8014  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8015  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7986:8023  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8079  _msgSender */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8069:8081  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8060:8067  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8054:8058  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8042:8082  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7944:8093  if (hasRole(role, account)) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7865:8099  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Registry.sol\":1161:1271  function _whitelist(address member) internal {... */\n    tag_126:\n        /* \"contracts/Registry.sol\":1232:1236  true */\n      0x01\n        /* \"contracts/Registry.sol\":1212:1221  whitelist */\n      dup1\n        /* \"contracts/Registry.sol\":1212:1229  whitelist[member] */\n      0x00\n        /* \"contracts/Registry.sol\":1222:1228  member */\n      dup4\n        /* \"contracts/Registry.sol\":1212:1229  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Registry.sol\":1212:1236  whitelist[member] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Registry.sol\":1259:1265  member */\n      dup1\n        /* \"contracts/Registry.sol\":1247:1266  Whitelisted(member) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xaab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Registry.sol\":1161:1271  function _whitelist(address member) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/Registry.sol\":1892:2005  function _removeWhitelist(address member) internal {... */\n    tag_132:\n        /* \"contracts/Registry.sol\":1969:1974  false */\n      0x00\n        /* \"contracts/Registry.sol\":1949:1958  whitelist */\n      0x01\n        /* \"contracts/Registry.sol\":1949:1966  whitelist[member] */\n      0x00\n        /* \"contracts/Registry.sol\":1959:1965  member */\n      dup4\n        /* \"contracts/Registry.sol\":1949:1966  whitelist[member] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Registry.sol\":1949:1974  whitelist[member] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Registry.sol\":1993:1999  member */\n      dup1\n        /* \"contracts/Registry.sol\":1985:2000  Removed(member) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x066a905b79c0121afe61e3a44e0b14b6bc1ec16d854cdba09efdfc9b6aa9af81\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Registry.sol\":1892:2005  function _removeWhitelist(address member) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      tag_171\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3814:3818  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3820:3827  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3813  hasRole */\n      tag_61\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3806:3828  hasRole(role, account) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n      tag_172\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4009:4016  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4008  Strings.toHexString */\n      tag_174\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3989:4017  Strings.toHexString(account) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      tag_175\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4116:4120  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4108:4121  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4123:4125  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4107  Strings.toHexString */\n      tag_176\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4088:4126  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3896:4148  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_177\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4180  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3801:4191  if (!hasRole(role, account)) {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3718:4197  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2160:2173  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_182\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2220:2224  addr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2204:2226  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":311:313  20 */\n      0x14\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2203  toHexString */\n      tag_176\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2192:2244  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2185:2244  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2102:2251  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1588:1601  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1613:1632  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1658:1659  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1649:1655  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1646  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1655  2 * length */\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1645:1659  2 * length + 2 */\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1635:1660  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_188\n      jumpi\n      tag_189\n      tag_190\n      jump\t// in\n    tag_189:\n    tag_188:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_191\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_191:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1613:1660  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1676  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1677:1678  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1679  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_192\n      jumpi\n      tag_193\n      tag_96\n      jump\t// in\n    tag_193:\n    tag_192:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1670:1685  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1701  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1702:1703  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1704  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_194\n      jumpi\n      tag_195\n      tag_96\n      jump\t// in\n    tag_195:\n    tag_194:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1695:1710  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1725:1734  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1750:1751  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1741:1747  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1738  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1747  2 * length */\n      tag_199\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1737:1751  2 * length + 1 */\n      tag_200\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1725:1751  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1757:1758  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1753:1754  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1753:1758  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1791:1799  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1808:1811  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1805  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1800:1811  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1791:1812  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_201\n      jumpi\n      tag_202\n      tag_96\n      jump\t// in\n    tag_202:\n    tag_201:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1785  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1786:1787  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1788  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_203\n      jumpi\n      tag_204\n      tag_96\n      jump\t// in\n    tag_204:\n    tag_203:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1779:1812  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1836:1837  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1826:1837  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1760:1763  --i */\n      dup1\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1720:1848  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_196)\n    tag_197:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1874:1875  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1865:1870  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1865:1875  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1857:1912  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1936:1942  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1922:1943  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1513:1950  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_211:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_212:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_213:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_214:\n        /* \"#utility.yul\":561:584   */\n      tag_253\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_213\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_254:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_215:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_256\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_214\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_259\n      tag_211\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":833:952   */\n    tag_258:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_260\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_215\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_216:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_217:\n        /* \"#utility.yul\":1268:1289   */\n      tag_263\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_216\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_265\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_217\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_218:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_219:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_268\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_218\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_220:\n        /* \"#utility.yul\":1825:1849   */\n      tag_270\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_219\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_271\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_271:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_221:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_273\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_220\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2354   */\n    tag_29:\n        /* \"#utility.yul\":2084:2090   */\n      0x00\n        /* \"#utility.yul\":2133:2135   */\n      0x20\n        /* \"#utility.yul\":2121:2130   */\n      dup3\n        /* \"#utility.yul\":2112:2119   */\n      dup5\n        /* \"#utility.yul\":2108:2131   */\n      sub\n        /* \"#utility.yul\":2104:2136   */\n      slt\n        /* \"#utility.yul\":2101:2220   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":2139:2218   */\n      tag_276\n      tag_211\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2101:2220   */\n    tag_275:\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2284:2337   */\n      tag_277\n        /* \"#utility.yul\":2329:2336   */\n      dup5\n        /* \"#utility.yul\":2320:2326   */\n      dup3\n        /* \"#utility.yul\":2309:2318   */\n      dup6\n        /* \"#utility.yul\":2305:2327   */\n      add\n        /* \"#utility.yul\":2284:2337   */\n      tag_221\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":2274:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2230:2347   */\n      pop\n        /* \"#utility.yul\":2025:2354   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2477   */\n    tag_222:\n        /* \"#utility.yul\":2469:2470   */\n      0x00\n        /* \"#utility.yul\":2466:2467   */\n      dup1\n        /* \"#utility.yul\":2459:2471   */\n      revert\n        /* \"#utility.yul\":2483:2600   */\n    tag_223:\n        /* \"#utility.yul\":2592:2593   */\n      0x00\n        /* \"#utility.yul\":2589:2590   */\n      dup1\n        /* \"#utility.yul\":2582:2594   */\n      revert\n        /* \"#utility.yul\":2606:2723   */\n    tag_224:\n        /* \"#utility.yul\":2715:2716   */\n      0x00\n        /* \"#utility.yul\":2712:2713   */\n      dup1\n        /* \"#utility.yul\":2705:2717   */\n      revert\n        /* \"#utility.yul\":2746:3314   */\n    tag_225:\n        /* \"#utility.yul\":2819:2827   */\n      0x00\n        /* \"#utility.yul\":2829:2835   */\n      dup1\n        /* \"#utility.yul\":2879:2882   */\n      dup4\n        /* \"#utility.yul\":2872:2876   */\n      0x1f\n        /* \"#utility.yul\":2864:2870   */\n      dup5\n        /* \"#utility.yul\":2860:2877   */\n      add\n        /* \"#utility.yul\":2856:2883   */\n      slt\n        /* \"#utility.yul\":2846:2968   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2887:2966   */\n      tag_283\n      tag_222\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2846:2968   */\n    tag_282:\n        /* \"#utility.yul\":3000:3006   */\n      dup3\n        /* \"#utility.yul\":2987:3007   */\n      calldataload\n        /* \"#utility.yul\":2977:3007   */\n      swap1\n      pop\n        /* \"#utility.yul\":3030:3048   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3022:3028   */\n      dup2\n        /* \"#utility.yul\":3019:3049   */\n      gt\n        /* \"#utility.yul\":3016:3133   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":3052:3131   */\n      tag_285\n      tag_223\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3016:3133   */\n    tag_284:\n        /* \"#utility.yul\":3166:3170   */\n      0x20\n        /* \"#utility.yul\":3158:3164   */\n      dup4\n        /* \"#utility.yul\":3154:3171   */\n      add\n        /* \"#utility.yul\":3142:3171   */\n      swap2\n      pop\n        /* \"#utility.yul\":3220:3223   */\n      dup4\n        /* \"#utility.yul\":3212:3216   */\n      0x20\n        /* \"#utility.yul\":3204:3210   */\n      dup3\n        /* \"#utility.yul\":3200:3217   */\n      mul\n        /* \"#utility.yul\":3190:3198   */\n      dup4\n        /* \"#utility.yul\":3186:3218   */\n      add\n        /* \"#utility.yul\":3183:3224   */\n      gt\n        /* \"#utility.yul\":3180:3308   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":3227:3306   */\n      tag_287\n      tag_224\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3180:3308   */\n    tag_286:\n        /* \"#utility.yul\":2746:3314   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3320:3879   */\n    tag_33:\n        /* \"#utility.yul\":3406:3412   */\n      0x00\n        /* \"#utility.yul\":3414:3420   */\n      dup1\n        /* \"#utility.yul\":3463:3465   */\n      0x20\n        /* \"#utility.yul\":3451:3460   */\n      dup4\n        /* \"#utility.yul\":3442:3449   */\n      dup6\n        /* \"#utility.yul\":3438:3461   */\n      sub\n        /* \"#utility.yul\":3434:3466   */\n      slt\n        /* \"#utility.yul\":3431:3550   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":3469:3548   */\n      tag_290\n      tag_211\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3431:3550   */\n    tag_289:\n        /* \"#utility.yul\":3617:3618   */\n      0x00\n        /* \"#utility.yul\":3606:3615   */\n      dup4\n        /* \"#utility.yul\":3602:3619   */\n      add\n        /* \"#utility.yul\":3589:3620   */\n      calldataload\n        /* \"#utility.yul\":3647:3665   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3639:3645   */\n      dup2\n        /* \"#utility.yul\":3636:3666   */\n      gt\n        /* \"#utility.yul\":3633:3750   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3669:3748   */\n      tag_292\n      tag_212\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3633:3750   */\n    tag_291:\n        /* \"#utility.yul\":3782:3862   */\n      tag_293\n        /* \"#utility.yul\":3854:3861   */\n      dup6\n        /* \"#utility.yul\":3845:3851   */\n      dup3\n        /* \"#utility.yul\":3834:3843   */\n      dup7\n        /* \"#utility.yul\":3830:3852   */\n      add\n        /* \"#utility.yul\":3782:3862   */\n      tag_225\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3764:3862   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3560:3872   */\n      pop\n        /* \"#utility.yul\":3320:3879   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3885:3962   */\n    tag_226:\n        /* \"#utility.yul\":3922:3929   */\n      0x00\n        /* \"#utility.yul\":3951:3956   */\n      dup2\n        /* \"#utility.yul\":3940:3956   */\n      swap1\n      pop\n        /* \"#utility.yul\":3885:3962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3968:4090   */\n    tag_227:\n        /* \"#utility.yul\":4041:4065   */\n      tag_296\n        /* \"#utility.yul\":4059:4064   */\n      dup2\n        /* \"#utility.yul\":4041:4065   */\n      tag_226\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":4034:4039   */\n      dup2\n        /* \"#utility.yul\":4031:4066   */\n      eq\n        /* \"#utility.yul\":4021:4084   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":4080:4081   */\n      0x00\n        /* \"#utility.yul\":4077:4078   */\n      dup1\n        /* \"#utility.yul\":4070:4082   */\n      revert\n        /* \"#utility.yul\":4021:4084   */\n    tag_297:\n        /* \"#utility.yul\":3968:4090   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4235   */\n    tag_228:\n        /* \"#utility.yul\":4142:4147   */\n      0x00\n        /* \"#utility.yul\":4180:4186   */\n      dup2\n        /* \"#utility.yul\":4167:4187   */\n      calldataload\n        /* \"#utility.yul\":4158:4187   */\n      swap1\n      pop\n        /* \"#utility.yul\":4196:4229   */\n      tag_299\n        /* \"#utility.yul\":4223:4228   */\n      dup2\n        /* \"#utility.yul\":4196:4229   */\n      tag_227\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4096:4235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4241:4570   */\n    tag_38:\n        /* \"#utility.yul\":4300:4306   */\n      0x00\n        /* \"#utility.yul\":4349:4351   */\n      0x20\n        /* \"#utility.yul\":4337:4346   */\n      dup3\n        /* \"#utility.yul\":4328:4335   */\n      dup5\n        /* \"#utility.yul\":4324:4347   */\n      sub\n        /* \"#utility.yul\":4320:4352   */\n      slt\n        /* \"#utility.yul\":4317:4436   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":4355:4434   */\n      tag_302\n      tag_211\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4317:4436   */\n    tag_301:\n        /* \"#utility.yul\":4475:4476   */\n      0x00\n        /* \"#utility.yul\":4500:4553   */\n      tag_303\n        /* \"#utility.yul\":4545:4552   */\n      dup5\n        /* \"#utility.yul\":4536:4542   */\n      dup3\n        /* \"#utility.yul\":4525:4534   */\n      dup6\n        /* \"#utility.yul\":4521:4543   */\n      add\n        /* \"#utility.yul\":4500:4553   */\n      tag_228\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4490:4553   */\n      swap2\n      pop\n        /* \"#utility.yul\":4446:4563   */\n      pop\n        /* \"#utility.yul\":4241:4570   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4576:4694   */\n    tag_229:\n        /* \"#utility.yul\":4663:4687   */\n      tag_305\n        /* \"#utility.yul\":4681:4686   */\n      dup2\n        /* \"#utility.yul\":4663:4687   */\n      tag_226\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4658:4661   */\n      dup3\n        /* \"#utility.yul\":4651:4688   */\n      mstore\n        /* \"#utility.yul\":4576:4694   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4700:4922   */\n    tag_41:\n        /* \"#utility.yul\":4793:4797   */\n      0x00\n        /* \"#utility.yul\":4831:4833   */\n      0x20\n        /* \"#utility.yul\":4820:4829   */\n      dup3\n        /* \"#utility.yul\":4816:4834   */\n      add\n        /* \"#utility.yul\":4808:4834   */\n      swap1\n      pop\n        /* \"#utility.yul\":4844:4915   */\n      tag_307\n        /* \"#utility.yul\":4912:4913   */\n      0x00\n        /* \"#utility.yul\":4901:4910   */\n      dup4\n        /* \"#utility.yul\":4897:4914   */\n      add\n        /* \"#utility.yul\":4888:4894   */\n      dup5\n        /* \"#utility.yul\":4844:4915   */\n      tag_229\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4700:4922   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4928:5402   */\n    tag_44:\n        /* \"#utility.yul\":4996:5002   */\n      0x00\n        /* \"#utility.yul\":5004:5010   */\n      dup1\n        /* \"#utility.yul\":5053:5055   */\n      0x40\n        /* \"#utility.yul\":5041:5050   */\n      dup4\n        /* \"#utility.yul\":5032:5039   */\n      dup6\n        /* \"#utility.yul\":5028:5051   */\n      sub\n        /* \"#utility.yul\":5024:5056   */\n      slt\n        /* \"#utility.yul\":5021:5140   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":5059:5138   */\n      tag_310\n      tag_211\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5021:5140   */\n    tag_309:\n        /* \"#utility.yul\":5179:5180   */\n      0x00\n        /* \"#utility.yul\":5204:5257   */\n      tag_311\n        /* \"#utility.yul\":5249:5256   */\n      dup6\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup7\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_228\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5150:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x20\n        /* \"#utility.yul\":5332:5385   */\n      tag_312\n        /* \"#utility.yul\":5377:5384   */\n      dup6\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup7\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_221\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4928:5402   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5408:5588   */\n    tag_96:\n        /* \"#utility.yul\":5456:5533   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5453:5454   */\n      0x00\n        /* \"#utility.yul\":5446:5534   */\n      mstore\n        /* \"#utility.yul\":5553:5557   */\n      0x32\n        /* \"#utility.yul\":5550:5551   */\n      0x04\n        /* \"#utility.yul\":5543:5558   */\n      mstore\n        /* \"#utility.yul\":5577:5581   */\n      0x24\n        /* \"#utility.yul\":5574:5575   */\n      0x00\n        /* \"#utility.yul\":5567:5582   */\n      revert\n        /* \"#utility.yul\":5594:5774   */\n    tag_230:\n        /* \"#utility.yul\":5642:5719   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5639:5640   */\n      0x00\n        /* \"#utility.yul\":5632:5720   */\n      mstore\n        /* \"#utility.yul\":5739:5743   */\n      0x11\n        /* \"#utility.yul\":5736:5737   */\n      0x04\n        /* \"#utility.yul\":5729:5744   */\n      mstore\n        /* \"#utility.yul\":5763:5767   */\n      0x24\n        /* \"#utility.yul\":5760:5761   */\n      0x00\n        /* \"#utility.yul\":5753:5768   */\n      revert\n        /* \"#utility.yul\":5780:5857   */\n    tag_231:\n        /* \"#utility.yul\":5817:5824   */\n      0x00\n        /* \"#utility.yul\":5846:5851   */\n      dup2\n        /* \"#utility.yul\":5835:5851   */\n      swap1\n      pop\n        /* \"#utility.yul\":5780:5857   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5863:6096   */\n    tag_100:\n        /* \"#utility.yul\":5902:5905   */\n      0x00\n        /* \"#utility.yul\":5925:5949   */\n      tag_317\n        /* \"#utility.yul\":5943:5948   */\n      dup3\n        /* \"#utility.yul\":5925:5949   */\n      tag_231\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5916:5949   */\n      swap2\n      pop\n        /* \"#utility.yul\":5971:6037   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5964:5969   */\n      dup3\n        /* \"#utility.yul\":5961:6038   */\n      sub\n        /* \"#utility.yul\":5958:6061   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":6041:6059   */\n      tag_319\n      tag_230\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5958:6061   */\n    tag_318:\n        /* \"#utility.yul\":6088:6089   */\n      0x01\n        /* \"#utility.yul\":6081:6086   */\n      dup3\n        /* \"#utility.yul\":6077:6090   */\n      add\n        /* \"#utility.yul\":6070:6090   */\n      swap1\n      pop\n        /* \"#utility.yul\":5863:6096   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6102:6271   */\n    tag_232:\n        /* \"#utility.yul\":6186:6197   */\n      0x00\n        /* \"#utility.yul\":6220:6226   */\n      dup3\n        /* \"#utility.yul\":6215:6218   */\n      dup3\n        /* \"#utility.yul\":6208:6227   */\n      mstore\n        /* \"#utility.yul\":6260:6264   */\n      0x20\n        /* \"#utility.yul\":6255:6258   */\n      dup3\n        /* \"#utility.yul\":6251:6265   */\n      add\n        /* \"#utility.yul\":6236:6265   */\n      swap1\n      pop\n        /* \"#utility.yul\":6102:6271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6277:6511   */\n    tag_233:\n        /* \"#utility.yul\":6417:6451   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":6413:6414   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup3\n        /* \"#utility.yul\":6401:6415   */\n      add\n        /* \"#utility.yul\":6394:6452   */\n      mstore\n        /* \"#utility.yul\":6486:6503   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":6481:6483   */\n      0x20\n        /* \"#utility.yul\":6473:6479   */\n      dup3\n        /* \"#utility.yul\":6469:6484   */\n      add\n        /* \"#utility.yul\":6462:6504   */\n      mstore\n        /* \"#utility.yul\":6277:6511   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6517:6883   */\n    tag_234:\n        /* \"#utility.yul\":6659:6662   */\n      0x00\n        /* \"#utility.yul\":6680:6747   */\n      tag_323\n        /* \"#utility.yul\":6744:6746   */\n      0x2f\n        /* \"#utility.yul\":6739:6742   */\n      dup4\n        /* \"#utility.yul\":6680:6747   */\n      tag_232\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":6673:6747   */\n      swap2\n      pop\n        /* \"#utility.yul\":6756:6849   */\n      tag_324\n        /* \"#utility.yul\":6845:6848   */\n      dup3\n        /* \"#utility.yul\":6756:6849   */\n      tag_233\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6874:6876   */\n      0x40\n        /* \"#utility.yul\":6869:6872   */\n      dup3\n        /* \"#utility.yul\":6865:6877   */\n      add\n        /* \"#utility.yul\":6858:6877   */\n      swap1\n      pop\n        /* \"#utility.yul\":6517:6883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6889:7308   */\n    tag_112:\n        /* \"#utility.yul\":7055:7059   */\n      0x00\n        /* \"#utility.yul\":7093:7095   */\n      0x20\n        /* \"#utility.yul\":7082:7091   */\n      dup3\n        /* \"#utility.yul\":7078:7096   */\n      add\n        /* \"#utility.yul\":7070:7096   */\n      swap1\n      pop\n        /* \"#utility.yul\":7142:7151   */\n      dup2\n        /* \"#utility.yul\":7136:7140   */\n      dup2\n        /* \"#utility.yul\":7132:7152   */\n      sub\n        /* \"#utility.yul\":7128:7129   */\n      0x00\n        /* \"#utility.yul\":7117:7126   */\n      dup4\n        /* \"#utility.yul\":7113:7130   */\n      add\n        /* \"#utility.yul\":7106:7153   */\n      mstore\n        /* \"#utility.yul\":7170:7301   */\n      tag_326\n        /* \"#utility.yul\":7296:7300   */\n      dup2\n        /* \"#utility.yul\":7170:7301   */\n      tag_234\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":7162:7301   */\n      swap1\n      pop\n        /* \"#utility.yul\":6889:7308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7314:7462   */\n    tag_235:\n        /* \"#utility.yul\":7416:7427   */\n      0x00\n        /* \"#utility.yul\":7453:7456   */\n      dup2\n        /* \"#utility.yul\":7438:7456   */\n      swap1\n      pop\n        /* \"#utility.yul\":7314:7462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7468:7641   */\n    tag_236:\n        /* \"#utility.yul\":7608:7633   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":7604:7605   */\n      0x00\n        /* \"#utility.yul\":7596:7602   */\n      dup3\n        /* \"#utility.yul\":7592:7606   */\n      add\n        /* \"#utility.yul\":7585:7634   */\n      mstore\n        /* \"#utility.yul\":7468:7641   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7647:8049   */\n    tag_237:\n        /* \"#utility.yul\":7807:7810   */\n      0x00\n        /* \"#utility.yul\":7828:7913   */\n      tag_330\n        /* \"#utility.yul\":7910:7912   */\n      0x17\n        /* \"#utility.yul\":7905:7908   */\n      dup4\n        /* \"#utility.yul\":7828:7913   */\n      tag_235\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7821:7913   */\n      swap2\n      pop\n        /* \"#utility.yul\":7922:8015   */\n      tag_331\n        /* \"#utility.yul\":8011:8014   */\n      dup3\n        /* \"#utility.yul\":7922:8015   */\n      tag_236\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8040:8042   */\n      0x17\n        /* \"#utility.yul\":8035:8038   */\n      dup3\n        /* \"#utility.yul\":8031:8043   */\n      add\n        /* \"#utility.yul\":8024:8043   */\n      swap1\n      pop\n        /* \"#utility.yul\":7647:8049   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8055:8154   */\n    tag_238:\n        /* \"#utility.yul\":8107:8113   */\n      0x00\n        /* \"#utility.yul\":8141:8146   */\n      dup2\n        /* \"#utility.yul\":8135:8147   */\n      mload\n        /* \"#utility.yul\":8125:8147   */\n      swap1\n      pop\n        /* \"#utility.yul\":8055:8154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8160:8406   */\n    tag_239:\n        /* \"#utility.yul\":8241:8242   */\n      0x00\n        /* \"#utility.yul\":8251:8364   */\n    tag_334:\n        /* \"#utility.yul\":8265:8271   */\n      dup4\n        /* \"#utility.yul\":8262:8263   */\n      dup2\n        /* \"#utility.yul\":8259:8272   */\n      lt\n        /* \"#utility.yul\":8251:8364   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":8350:8351   */\n      dup1\n        /* \"#utility.yul\":8345:8348   */\n      dup3\n        /* \"#utility.yul\":8341:8352   */\n      add\n        /* \"#utility.yul\":8335:8353   */\n      mload\n        /* \"#utility.yul\":8331:8332   */\n      dup2\n        /* \"#utility.yul\":8326:8329   */\n      dup5\n        /* \"#utility.yul\":8322:8333   */\n      add\n        /* \"#utility.yul\":8315:8354   */\n      mstore\n        /* \"#utility.yul\":8287:8289   */\n      0x20\n        /* \"#utility.yul\":8284:8285   */\n      dup2\n        /* \"#utility.yul\":8280:8290   */\n      add\n        /* \"#utility.yul\":8275:8290   */\n      swap1\n      pop\n        /* \"#utility.yul\":8251:8364   */\n      jump(tag_334)\n    tag_336:\n        /* \"#utility.yul\":8398:8399   */\n      0x00\n        /* \"#utility.yul\":8389:8395   */\n      dup5\n        /* \"#utility.yul\":8384:8387   */\n      dup5\n        /* \"#utility.yul\":8380:8396   */\n      add\n        /* \"#utility.yul\":8373:8400   */\n      mstore\n        /* \"#utility.yul\":8222:8406   */\n      pop\n        /* \"#utility.yul\":8160:8406   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8412:8802   */\n    tag_240:\n        /* \"#utility.yul\":8518:8521   */\n      0x00\n        /* \"#utility.yul\":8546:8585   */\n      tag_338\n        /* \"#utility.yul\":8579:8584   */\n      dup3\n        /* \"#utility.yul\":8546:8585   */\n      tag_238\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8601:8690   */\n      tag_339\n        /* \"#utility.yul\":8683:8689   */\n      dup2\n        /* \"#utility.yul\":8678:8681   */\n      dup6\n        /* \"#utility.yul\":8601:8690   */\n      tag_235\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":8594:8690   */\n      swap4\n      pop\n        /* \"#utility.yul\":8699:8764   */\n      tag_340\n        /* \"#utility.yul\":8757:8763   */\n      dup2\n        /* \"#utility.yul\":8752:8755   */\n      dup6\n        /* \"#utility.yul\":8745:8749   */\n      0x20\n        /* \"#utility.yul\":8738:8743   */\n      dup7\n        /* \"#utility.yul\":8734:8750   */\n      add\n        /* \"#utility.yul\":8699:8764   */\n      tag_239\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":8789:8795   */\n      dup1\n        /* \"#utility.yul\":8784:8787   */\n      dup5\n        /* \"#utility.yul\":8780:8796   */\n      add\n        /* \"#utility.yul\":8773:8796   */\n      swap2\n      pop\n        /* \"#utility.yul\":8522:8802   */\n      pop\n        /* \"#utility.yul\":8412:8802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8808:8975   */\n    tag_241:\n        /* \"#utility.yul\":8948:8967   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":8944:8945   */\n      0x00\n        /* \"#utility.yul\":8936:8942   */\n      dup3\n        /* \"#utility.yul\":8932:8946   */\n      add\n        /* \"#utility.yul\":8925:8968   */\n      mstore\n        /* \"#utility.yul\":8808:8975   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8981:9383   */\n    tag_242:\n        /* \"#utility.yul\":9141:9144   */\n      0x00\n        /* \"#utility.yul\":9162:9247   */\n      tag_343\n        /* \"#utility.yul\":9244:9246   */\n      0x11\n        /* \"#utility.yul\":9239:9242   */\n      dup4\n        /* \"#utility.yul\":9162:9247   */\n      tag_235\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":9155:9247   */\n      swap2\n      pop\n        /* \"#utility.yul\":9256:9349   */\n      tag_344\n        /* \"#utility.yul\":9345:9348   */\n      dup3\n        /* \"#utility.yul\":9256:9349   */\n      tag_241\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":9374:9376   */\n      0x11\n        /* \"#utility.yul\":9369:9372   */\n      dup3\n        /* \"#utility.yul\":9365:9377   */\n      add\n        /* \"#utility.yul\":9358:9377   */\n      swap1\n      pop\n        /* \"#utility.yul\":8981:9383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9389:10356   */\n    tag_178:\n        /* \"#utility.yul\":9771:9774   */\n      0x00\n        /* \"#utility.yul\":9793:9941   */\n      tag_346\n        /* \"#utility.yul\":9937:9940   */\n      dup3\n        /* \"#utility.yul\":9793:9941   */\n      tag_237\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":9786:9941   */\n      swap2\n      pop\n        /* \"#utility.yul\":9958:10053   */\n      tag_347\n        /* \"#utility.yul\":10049:10052   */\n      dup3\n        /* \"#utility.yul\":10040:10046   */\n      dup6\n        /* \"#utility.yul\":9958:10053   */\n      tag_240\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":9951:10053   */\n      swap2\n      pop\n        /* \"#utility.yul\":10070:10218   */\n      tag_348\n        /* \"#utility.yul\":10214:10217   */\n      dup3\n        /* \"#utility.yul\":10070:10218   */\n      tag_242\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":10063:10218   */\n      swap2\n      pop\n        /* \"#utility.yul\":10235:10330   */\n      tag_349\n        /* \"#utility.yul\":10326:10329   */\n      dup3\n        /* \"#utility.yul\":10317:10323   */\n      dup5\n        /* \"#utility.yul\":10235:10330   */\n      tag_240\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":10228:10330   */\n      swap2\n      pop\n        /* \"#utility.yul\":10347:10350   */\n      dup2\n        /* \"#utility.yul\":10340:10350   */\n      swap1\n      pop\n        /* \"#utility.yul\":9389:10356   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10362:10464   */\n    tag_243:\n        /* \"#utility.yul\":10403:10409   */\n      0x00\n        /* \"#utility.yul\":10454:10456   */\n      0x1f\n        /* \"#utility.yul\":10450:10457   */\n      not\n        /* \"#utility.yul\":10445:10447   */\n      0x1f\n        /* \"#utility.yul\":10438:10443   */\n      dup4\n        /* \"#utility.yul\":10434:10448   */\n      add\n        /* \"#utility.yul\":10430:10458   */\n      and\n        /* \"#utility.yul\":10420:10458   */\n      swap1\n      pop\n        /* \"#utility.yul\":10362:10464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10470:10847   */\n    tag_244:\n        /* \"#utility.yul\":10558:10561   */\n      0x00\n        /* \"#utility.yul\":10586:10625   */\n      tag_352\n        /* \"#utility.yul\":10619:10624   */\n      dup3\n        /* \"#utility.yul\":10586:10625   */\n      tag_238\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":10641:10712   */\n      tag_353\n        /* \"#utility.yul\":10705:10711   */\n      dup2\n        /* \"#utility.yul\":10700:10703   */\n      dup6\n        /* \"#utility.yul\":10641:10712   */\n      tag_232\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":10634:10712   */\n      swap4\n      pop\n        /* \"#utility.yul\":10721:10786   */\n      tag_354\n        /* \"#utility.yul\":10779:10785   */\n      dup2\n        /* \"#utility.yul\":10774:10777   */\n      dup6\n        /* \"#utility.yul\":10767:10771   */\n      0x20\n        /* \"#utility.yul\":10760:10765   */\n      dup7\n        /* \"#utility.yul\":10756:10772   */\n      add\n        /* \"#utility.yul\":10721:10786   */\n      tag_239\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":10811:10840   */\n      tag_355\n        /* \"#utility.yul\":10833:10839   */\n      dup2\n        /* \"#utility.yul\":10811:10840   */\n      tag_243\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":10806:10809   */\n      dup5\n        /* \"#utility.yul\":10802:10841   */\n      add\n        /* \"#utility.yul\":10795:10841   */\n      swap2\n      pop\n        /* \"#utility.yul\":10562:10847   */\n      pop\n        /* \"#utility.yul\":10470:10847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10853:11166   */\n    tag_180:\n        /* \"#utility.yul\":10966:10970   */\n      0x00\n        /* \"#utility.yul\":11004:11006   */\n      0x20\n        /* \"#utility.yul\":10993:11002   */\n      dup3\n        /* \"#utility.yul\":10989:11007   */\n      add\n        /* \"#utility.yul\":10981:11007   */\n      swap1\n      pop\n        /* \"#utility.yul\":11053:11062   */\n      dup2\n        /* \"#utility.yul\":11047:11051   */\n      dup2\n        /* \"#utility.yul\":11043:11063   */\n      sub\n        /* \"#utility.yul\":11039:11040   */\n      0x00\n        /* \"#utility.yul\":11028:11037   */\n      dup4\n        /* \"#utility.yul\":11024:11041   */\n      add\n        /* \"#utility.yul\":11017:11064   */\n      mstore\n        /* \"#utility.yul\":11081:11159   */\n      tag_357\n        /* \"#utility.yul\":11154:11158   */\n      dup2\n        /* \"#utility.yul\":11145:11151   */\n      dup5\n        /* \"#utility.yul\":11081:11159   */\n      tag_244\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":11073:11159   */\n      swap1\n      pop\n        /* \"#utility.yul\":10853:11166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11172:11582   */\n    tag_185:\n        /* \"#utility.yul\":11212:11219   */\n      0x00\n        /* \"#utility.yul\":11235:11255   */\n      tag_359\n        /* \"#utility.yul\":11253:11254   */\n      dup3\n        /* \"#utility.yul\":11235:11255   */\n      tag_231\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":11230:11255   */\n      swap2\n      pop\n        /* \"#utility.yul\":11269:11289   */\n      tag_360\n        /* \"#utility.yul\":11287:11288   */\n      dup4\n        /* \"#utility.yul\":11269:11289   */\n      tag_231\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":11264:11289   */\n      swap3\n      pop\n        /* \"#utility.yul\":11324:11325   */\n      dup3\n        /* \"#utility.yul\":11321:11322   */\n      dup3\n        /* \"#utility.yul\":11317:11326   */\n      mul\n        /* \"#utility.yul\":11346:11376   */\n      tag_361\n        /* \"#utility.yul\":11364:11375   */\n      dup2\n        /* \"#utility.yul\":11346:11376   */\n      tag_231\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":11335:11376   */\n      swap2\n      pop\n        /* \"#utility.yul\":11525:11526   */\n      dup3\n        /* \"#utility.yul\":11516:11523   */\n      dup3\n        /* \"#utility.yul\":11512:11527   */\n      div\n        /* \"#utility.yul\":11509:11510   */\n      dup5\n        /* \"#utility.yul\":11506:11528   */\n      eq\n        /* \"#utility.yul\":11486:11487   */\n      dup4\n        /* \"#utility.yul\":11479:11488   */\n      iszero\n        /* \"#utility.yul\":11459:11542   */\n      or\n        /* \"#utility.yul\":11436:11575   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":11555:11573   */\n      tag_363\n      tag_230\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":11436:11575   */\n    tag_362:\n        /* \"#utility.yul\":11220:11582   */\n      pop\n        /* \"#utility.yul\":11172:11582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11588:11779   */\n    tag_187:\n        /* \"#utility.yul\":11628:11631   */\n      0x00\n        /* \"#utility.yul\":11647:11667   */\n      tag_365\n        /* \"#utility.yul\":11665:11666   */\n      dup3\n        /* \"#utility.yul\":11647:11667   */\n      tag_231\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":11642:11667   */\n      swap2\n      pop\n        /* \"#utility.yul\":11681:11701   */\n      tag_366\n        /* \"#utility.yul\":11699:11700   */\n      dup4\n        /* \"#utility.yul\":11681:11701   */\n      tag_231\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":11676:11701   */\n      swap3\n      pop\n        /* \"#utility.yul\":11724:11725   */\n      dup3\n        /* \"#utility.yul\":11721:11722   */\n      dup3\n        /* \"#utility.yul\":11717:11726   */\n      add\n        /* \"#utility.yul\":11710:11726   */\n      swap1\n      pop\n        /* \"#utility.yul\":11745:11748   */\n      dup1\n        /* \"#utility.yul\":11742:11743   */\n      dup3\n        /* \"#utility.yul\":11739:11749   */\n      gt\n        /* \"#utility.yul\":11736:11772   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":11752:11770   */\n      tag_368\n      tag_230\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":11736:11772   */\n    tag_367:\n        /* \"#utility.yul\":11588:11779   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11785:11965   */\n    tag_190:\n        /* \"#utility.yul\":11833:11910   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11830:11831   */\n      0x00\n        /* \"#utility.yul\":11823:11911   */\n      mstore\n        /* \"#utility.yul\":11930:11934   */\n      0x41\n        /* \"#utility.yul\":11927:11928   */\n      0x04\n        /* \"#utility.yul\":11920:11935   */\n      mstore\n        /* \"#utility.yul\":11954:11958   */\n      0x24\n        /* \"#utility.yul\":11951:11952   */\n      0x00\n        /* \"#utility.yul\":11944:11959   */\n      revert\n        /* \"#utility.yul\":11971:12142   */\n    tag_206:\n        /* \"#utility.yul\":12010:12013   */\n      0x00\n        /* \"#utility.yul\":12033:12057   */\n      tag_371\n        /* \"#utility.yul\":12051:12056   */\n      dup3\n        /* \"#utility.yul\":12033:12057   */\n      tag_231\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":12024:12057   */\n      swap2\n      pop\n        /* \"#utility.yul\":12079:12083   */\n      0x00\n        /* \"#utility.yul\":12072:12077   */\n      dup3\n        /* \"#utility.yul\":12069:12084   */\n      sub\n        /* \"#utility.yul\":12066:12107   */\n      tag_372\n      jumpi\n        /* \"#utility.yul\":12087:12105   */\n      tag_373\n      tag_230\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":12066:12107   */\n    tag_372:\n        /* \"#utility.yul\":12134:12135   */\n      0x01\n        /* \"#utility.yul\":12127:12132   */\n      dup3\n        /* \"#utility.yul\":12123:12136   */\n      sub\n        /* \"#utility.yul\":12116:12136   */\n      swap1\n      pop\n        /* \"#utility.yul\":11971:12142   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12148:12330   */\n    tag_245:\n        /* \"#utility.yul\":12288:12322   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":12284:12285   */\n      0x00\n        /* \"#utility.yul\":12276:12282   */\n      dup3\n        /* \"#utility.yul\":12272:12286   */\n      add\n        /* \"#utility.yul\":12265:12323   */\n      mstore\n        /* \"#utility.yul\":12148:12330   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12336:12702   */\n    tag_246:\n        /* \"#utility.yul\":12478:12481   */\n      0x00\n        /* \"#utility.yul\":12499:12566   */\n      tag_376\n        /* \"#utility.yul\":12563:12565   */\n      0x20\n        /* \"#utility.yul\":12558:12561   */\n      dup4\n        /* \"#utility.yul\":12499:12566   */\n      tag_232\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12492:12566   */\n      swap2\n      pop\n        /* \"#utility.yul\":12575:12668   */\n      tag_377\n        /* \"#utility.yul\":12664:12667   */\n      dup3\n        /* \"#utility.yul\":12575:12668   */\n      tag_245\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":12693:12695   */\n      0x20\n        /* \"#utility.yul\":12688:12691   */\n      dup3\n        /* \"#utility.yul\":12684:12696   */\n      add\n        /* \"#utility.yul\":12677:12696   */\n      swap1\n      pop\n        /* \"#utility.yul\":12336:12702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12708:13127   */\n    tag_209:\n        /* \"#utility.yul\":12874:12878   */\n      0x00\n        /* \"#utility.yul\":12912:12914   */\n      0x20\n        /* \"#utility.yul\":12901:12910   */\n      dup3\n        /* \"#utility.yul\":12897:12915   */\n      add\n        /* \"#utility.yul\":12889:12915   */\n      swap1\n      pop\n        /* \"#utility.yul\":12961:12970   */\n      dup2\n        /* \"#utility.yul\":12955:12959   */\n      dup2\n        /* \"#utility.yul\":12951:12971   */\n      sub\n        /* \"#utility.yul\":12947:12948   */\n      0x00\n        /* \"#utility.yul\":12936:12945   */\n      dup4\n        /* \"#utility.yul\":12932:12949   */\n      add\n        /* \"#utility.yul\":12925:12972   */\n      mstore\n        /* \"#utility.yul\":12989:13120   */\n      tag_379\n        /* \"#utility.yul\":13115:13119   */\n      dup2\n        /* \"#utility.yul\":12989:13120   */\n      tag_246\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":12981:13120   */\n      swap1\n      pop\n        /* \"#utility.yul\":12708:13127   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c4cf01b87d7b5c0c080a81474cc31f444e0fe02e91009c849f34a4f2c4f02cb264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1627": {
									"entryPoint": null,
									"id": 1627,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 41,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_400": {
									"entryPoint": 383,
									"id": 400,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_79": {
									"entryPoint": 277,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506100246000801b3361002960201b60201c565b610187565b610039828261011560201b60201c565b61011157600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506100b661017f60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b611496806101966000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636c79af1011610097578063a217fddf11610066578063a217fddf146102a6578063ab4bca64146102c4578063d547741f146102e0578063e43252d7146102fc576100f5565b80636c79af101461020e5780638ab1d6811461022a57806391d14854146102465780639b19251a14610276576100f5565b8063248a9ca3116100d3578063248a9ca3146101765780632f2ff15d146101a657806336568abe146101c25780633af32abf146101de576100f5565b806301ffc9a7146100fa5780630a84246d1461012a5780631c84bfc214610146575b600080fd5b610114600480360381019061010f9190610db7565b610318565b6040516101219190610dff565b60405180910390f35b610144600480360381019061013f9190610e78565b610392565b005b610160600480360381019061015b9190610f0a565b6103b0565b60405161016d9190610dff565b60405180910390f35b610190600480360381019061018b9190610f8d565b61041e565b60405161019d9190610fc9565b60405180910390f35b6101c060048036038101906101bb9190610fe4565b61043d565b005b6101dc60048036038101906101d79190610fe4565b61045e565b005b6101f860048036038101906101f39190610e78565b6104e1565b6040516102059190610dff565b60405180910390f35b61022860048036038101906102239190610f0a565b610537565b005b610244600480360381019061023f9190610e78565b61059b565b005b610260600480360381019061025b9190610fe4565b6105b5565b60405161026d9190610dff565b60405180910390f35b610290600480360381019061028b9190610e78565b61061f565b60405161029d9190610dff565b60405180910390f35b6102ae61063f565b6040516102bb9190610fc9565b60405180910390f35b6102de60048036038101906102d99190610f0a565b610646565b005b6102fa60048036038101906102f59190610fe4565b6106aa565b005b61031660048036038101906103119190610e78565b6106cb565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038b575061038a826106e5565b5b9050919050565b6000801b61039f8161074f565b6103ac6000801b83610763565b5050565b600080600090505b83839050811015610412576103f38484838181106103d9576103d8611024565b5b90506020020160208101906103ee9190610e78565b6104e1565b610401576000915050610418565b8061040b9061108c565b90506103b8565b50600190505b92915050565b6000806000838152602001908152602001600020600101549050919050565b6104468261041e565b61044f8161074f565b6104598383610763565b505050565b610466610843565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca90611157565b60405180910390fd5b6104dd828261084b565b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000801b6105448161074f565b60005b838390508110156105955761058284848381811061056857610567611024565b5b905060200201602081019061057d9190610e78565b61092c565b808061058d9061108c565b915050610547565b50505050565b6000801b6105a88161074f565b6105b1826109c9565b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60016020528060005260406000206000915054906101000a900460ff1681565b6000801b81565b6000801b6106538161074f565b60005b838390508110156106a45761069184848381811061067757610676611024565b5b905060200201602081019061068c9190610e78565b6109c9565b808061069c9061108c565b915050610656565b50505050565b6106b38261041e565b6106bc8161074f565b6106c6838361084b565b505050565b6000801b6106d88161074f565b6106e18261092c565b5050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6107608161075b610843565b610a67565b50565b61076d82826105b5565b61083f57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506107e4610843565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b61085582826105b5565b1561092857600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506108cd610843565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a5460405160405180910390a250565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f066a905b79c0121afe61e3a44e0b14b6bc1ec16d854cdba09efdfc9b6aa9af8160405160405180910390a250565b610a7182826105b5565b610ae857610a7e81610aec565b610a8c8360001c6020610b19565b604051602001610a9d929190611280565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adf9190611304565b60405180910390fd5b5050565b6060610b128273ffffffffffffffffffffffffffffffffffffffff16601460ff16610b19565b9050919050565b606060006002836002610b2c9190611326565b610b369190611368565b67ffffffffffffffff811115610b4f57610b4e61139c565b5b6040519080825280601f01601f191660200182016040528015610b815781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610bb957610bb8611024565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610c1d57610c1c611024565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610c5d9190611326565b610c679190611368565b90505b6001811115610d07577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610ca957610ca8611024565b5b1a60f81b828281518110610cc057610cbf611024565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610d00906113cb565b9050610c6a565b5060008414610d4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4290611440565b60405180910390fd5b8091505092915050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610d9481610d5f565b8114610d9f57600080fd5b50565b600081359050610db181610d8b565b92915050565b600060208284031215610dcd57610dcc610d55565b5b6000610ddb84828501610da2565b91505092915050565b60008115159050919050565b610df981610de4565b82525050565b6000602082019050610e146000830184610df0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4582610e1a565b9050919050565b610e5581610e3a565b8114610e6057600080fd5b50565b600081359050610e7281610e4c565b92915050565b600060208284031215610e8e57610e8d610d55565b5b6000610e9c84828501610e63565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610eca57610ec9610ea5565b5b8235905067ffffffffffffffff811115610ee757610ee6610eaa565b5b602083019150836020820283011115610f0357610f02610eaf565b5b9250929050565b60008060208385031215610f2157610f20610d55565b5b600083013567ffffffffffffffff811115610f3f57610f3e610d5a565b5b610f4b85828601610eb4565b92509250509250929050565b6000819050919050565b610f6a81610f57565b8114610f7557600080fd5b50565b600081359050610f8781610f61565b92915050565b600060208284031215610fa357610fa2610d55565b5b6000610fb184828501610f78565b91505092915050565b610fc381610f57565b82525050565b6000602082019050610fde6000830184610fba565b92915050565b60008060408385031215610ffb57610ffa610d55565b5b600061100985828601610f78565b925050602061101a85828601610e63565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061109782611082565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110c9576110c8611053565b5b600182019050919050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611141602f836110d4565b915061114c826110e5565b604082019050919050565b6000602082019050818103600083015261117081611134565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006111b8601783611177565b91506111c382611182565b601782019050919050565b600081519050919050565b60005b838110156111f75780820151818401526020810190506111dc565b60008484015250505050565b600061120e826111ce565b6112188185611177565b93506112288185602086016111d9565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b600061126a601183611177565b915061127582611234565b601182019050919050565b600061128b826111ab565b91506112978285611203565b91506112a28261125d565b91506112ae8284611203565b91508190509392505050565b6000601f19601f8301169050919050565b60006112d6826111ce565b6112e081856110d4565b93506112f08185602086016111d9565b6112f9816112ba565b840191505092915050565b6000602082019050818103600083015261131e81846112cb565b905092915050565b600061133182611082565b915061133c83611082565b925082820261134a81611082565b9150828204841483151761136157611360611053565b5b5092915050565b600061137382611082565b915061137e83611082565b925082820190508082111561139657611395611053565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006113d682611082565b9150600082036113e9576113e8611053565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061142a6020836110d4565b9150611435826113f4565b602082019050919050565b600060208201905081810360008301526114598161141d565b905091905056fea2646970667358221220c4cf01b87d7b5c0c080a81474cc31f444e0fe02e91009c849f34a4f2c4f02cb264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24 PUSH1 0x0 DUP1 SHL CALLER PUSH2 0x29 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x187 JUMP JUMPDEST PUSH2 0x39 DUP3 DUP3 PUSH2 0x115 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x111 JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xB6 PUSH2 0x17F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1496 DUP1 PUSH2 0x196 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C79AF10 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xAB4BCA64 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x2FC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6C79AF10 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x276 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x1DE JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xA84246D EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x1C84BFC2 EQ PUSH2 0x146 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x38B JUMPI POP PUSH2 0x38A DUP3 PUSH2 0x6E5 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x39F DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x3AC PUSH1 0x0 DUP1 SHL DUP4 PUSH2 0x763 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x412 JUMPI PUSH2 0x3F3 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x3D9 JUMPI PUSH2 0x3D8 PUSH2 0x1024 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x401 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x418 JUMP JUMPDEST DUP1 PUSH2 0x40B SWAP1 PUSH2 0x108C JUMP JUMPDEST SWAP1 POP PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x446 DUP3 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x44F DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x459 DUP4 DUP4 PUSH2 0x763 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x466 PUSH2 0x843 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CA SWAP1 PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DD DUP3 DUP3 PUSH2 0x84B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x544 DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x595 JUMPI PUSH2 0x582 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x568 JUMPI PUSH2 0x567 PUSH2 0x1024 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x57D SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x58D SWAP1 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x547 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x5A8 DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x5B1 DUP3 PUSH2 0x9C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x653 DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x6A4 JUMPI PUSH2 0x691 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x677 JUMPI PUSH2 0x676 PUSH2 0x1024 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x68C SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x69C SWAP1 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x656 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6B3 DUP3 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x6BC DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x6C6 DUP4 DUP4 PUSH2 0x84B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x6D8 DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x6E1 DUP3 PUSH2 0x92C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x760 DUP2 PUSH2 0x75B PUSH2 0x843 JUMP JUMPDEST PUSH2 0xA67 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x76D DUP3 DUP3 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x83F JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x7E4 PUSH2 0x843 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x855 DUP3 DUP3 PUSH2 0x5B5 JUMP JUMPDEST ISZERO PUSH2 0x928 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8CD PUSH2 0x843 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x66A905B79C0121AFE61E3A44E0B14B6BC1EC16D854CDBA09EFDFC9B6AA9AF81 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xA71 DUP3 DUP3 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xAE8 JUMPI PUSH2 0xA7E DUP2 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0xA8C DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA9D SWAP3 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB12 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xB19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB4F JUMPI PUSH2 0xB4E PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB81 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xBB9 JUMPI PUSH2 0xBB8 PUSH2 0x1024 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC1D JUMPI PUSH2 0xC1C PUSH2 0x1024 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0xC67 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD07 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xCA9 JUMPI PUSH2 0xCA8 PUSH2 0x1024 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCC0 JUMPI PUSH2 0xCBF PUSH2 0x1024 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xD00 SWAP1 PUSH2 0x13CB JUMP JUMPDEST SWAP1 POP PUSH2 0xC6A JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD42 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD94 DUP2 PUSH2 0xD5F JUMP JUMPDEST DUP2 EQ PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDB1 DUP2 PUSH2 0xD8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0xD55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDDB DUP5 DUP3 DUP6 ADD PUSH2 0xDA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF9 DUP2 PUSH2 0xDE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE14 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE45 DUP3 PUSH2 0xE1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE55 DUP2 PUSH2 0xE3A JUMP JUMPDEST DUP2 EQ PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE72 DUP2 PUSH2 0xE4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8E JUMPI PUSH2 0xE8D PUSH2 0xD55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE9C DUP5 DUP3 DUP6 ADD PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xECA JUMPI PUSH2 0xEC9 PUSH2 0xEA5 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xEE6 PUSH2 0xEAA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xF03 JUMPI PUSH2 0xF02 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF21 JUMPI PUSH2 0xF20 PUSH2 0xD55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF3F JUMPI PUSH2 0xF3E PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH2 0xF4B DUP6 DUP3 DUP7 ADD PUSH2 0xEB4 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6A DUP2 PUSH2 0xF57 JUMP JUMPDEST DUP2 EQ PUSH2 0xF75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF87 DUP2 PUSH2 0xF61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA3 JUMPI PUSH2 0xFA2 PUSH2 0xD55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB1 DUP5 DUP3 DUP6 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFC3 DUP2 PUSH2 0xF57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFB JUMPI PUSH2 0xFFA PUSH2 0xD55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1009 DUP6 DUP3 DUP7 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x101A DUP6 DUP3 DUP7 ADD PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1097 DUP3 PUSH2 0x1082 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x10C9 JUMPI PUSH2 0x10C8 PUSH2 0x1053 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1141 PUSH1 0x2F DUP4 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x114C DUP3 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1170 DUP2 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B8 PUSH1 0x17 DUP4 PUSH2 0x1177 JUMP JUMPDEST SWAP2 POP PUSH2 0x11C3 DUP3 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11F7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120E DUP3 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x1218 DUP2 DUP6 PUSH2 0x1177 JUMP JUMPDEST SWAP4 POP PUSH2 0x1228 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11D9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126A PUSH1 0x11 DUP4 PUSH2 0x1177 JUMP JUMPDEST SWAP2 POP PUSH2 0x1275 DUP3 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128B DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1297 DUP3 DUP6 PUSH2 0x1203 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A2 DUP3 PUSH2 0x125D JUMP JUMPDEST SWAP2 POP PUSH2 0x12AE DUP3 DUP5 PUSH2 0x1203 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D6 DUP3 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x12E0 DUP2 DUP6 PUSH2 0x10D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x12F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x12F9 DUP2 PUSH2 0x12BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x131E DUP2 DUP5 PUSH2 0x12CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1331 DUP3 PUSH2 0x1082 JUMP JUMPDEST SWAP2 POP PUSH2 0x133C DUP4 PUSH2 0x1082 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x134A DUP2 PUSH2 0x1082 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1361 JUMPI PUSH2 0x1360 PUSH2 0x1053 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1373 DUP3 PUSH2 0x1082 JUMP JUMPDEST SWAP2 POP PUSH2 0x137E DUP4 PUSH2 0x1082 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1396 JUMPI PUSH2 0x1395 PUSH2 0x1053 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13D6 DUP3 PUSH2 0x1082 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x13E9 JUMPI PUSH2 0x13E8 PUSH2 0x1053 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142A PUSH1 0x20 DUP4 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1435 DUP3 PUSH2 0x13F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1459 DUP2 PUSH2 0x141D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xCF ADD 0xB8 PUSH30 0x7B5C0C080A81474CC31F444E0FE02E91009C849F34A4F2C4F02CB264736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "336:2770:8:-:0;;;519:67;;;;;;;;;;539:42;2072:4:0;550:18:8;;570:10;539;;;:42;;:::i;:::-;336:2770;;7461:233:0;7544:22;7552:4;7558:7;7544;;;:22;;:::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;;;:12;;:::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;2895:145::-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;336:2770:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": 1599,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_131": {
									"entryPoint": 2663,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 1871,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 1891,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_400": {
									"entryPoint": 2115,
									"id": 400,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_removeWhitelist_1747": {
									"entryPoint": 2505,
									"id": 1747,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_314": {
									"entryPoint": 2123,
									"id": 314,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_whitelist_1687": {
									"entryPoint": 2348,
									"id": 1687,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addToWhitelist_1671": {
									"entryPoint": 1739,
									"id": 1671,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@areWhitelisted_1794": {
									"entryPoint": 944,
									"id": 1794,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@bulkAddToWhitelist_1657": {
									"entryPoint": 1335,
									"id": 1657,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@bulkRemoveFromWhitelist_1717": {
									"entryPoint": 1606,
									"id": 1717,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getRoleAdmin_146": {
									"entryPoint": 1054,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRoleAdmin_1809": {
									"entryPoint": 914,
									"id": 1809,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@grantRole_166": {
									"entryPoint": 1085,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 1461,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isWhitelisted_1760": {
									"entryPoint": 1249,
									"id": 1760,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@removeFromWhitelist_1731": {
									"entryPoint": 1435,
									"id": 1731,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceRole_209": {
									"entryPoint": 1118,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_186": {
									"entryPoint": 1706,
									"id": 186,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_60": {
									"entryPoint": 792,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_608": {
									"entryPoint": 1765,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_564": {
									"entryPoint": 2841,
									"id": 564,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_584": {
									"entryPoint": 2796,
									"id": 584,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@whitelist_1609": {
									"entryPoint": 1567,
									"id": 1609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 3764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 3850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 4026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4736,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 4041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 4471,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4902,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 3927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4569,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4179,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4132,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 3754,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 3759,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3418,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3413,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 5108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 4325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 3937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 3467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13130:10",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:10",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:10",
														"type": ""
													}
												],
												"src": "334:149:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:10"
															},
															"nodeType": "YulIf",
															"src": "541:62:10"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:10",
														"type": ""
													}
												],
												"src": "489:120:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:10"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:10",
														"type": ""
													}
												],
												"src": "615:137:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:10"
															},
															"nodeType": "YulIf",
															"src": "833:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:10",
														"type": ""
													}
												],
												"src": "758:327:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:10",
														"type": ""
													}
												],
												"src": "1091:90:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:10",
														"type": ""
													}
												],
												"src": "1187:109:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:10",
														"type": ""
													}
												],
												"src": "1302:210:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1563:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1573:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1555:7:10",
														"type": ""
													}
												],
												"src": "1518:126:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1695:51:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1705:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1716:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1677:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1687:7:10",
														"type": ""
													}
												],
												"src": "1650:96:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1795:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1852:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:43:10"
															},
															"nodeType": "YulIf",
															"src": "1805:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1788:5:10",
														"type": ""
													}
												],
												"src": "1752:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1932:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1942:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1951:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1980:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1910:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1918:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1926:5:10",
														"type": ""
													}
												],
												"src": "1880:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2091:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2137:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2139:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2139:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2139:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2112:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2121:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2108:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2108:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2104:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2104:32:10"
															},
															"nodeType": "YulIf",
															"src": "2101:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "2230:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2245:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2259:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2249:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2274:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2309:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2320:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2305:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2305:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2329:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2284:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2284:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2274:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2061:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2072:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2084:6:10",
														"type": ""
													}
												],
												"src": "2025:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2449:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2466:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2469:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2459:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2459:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2459:12:10"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2360:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2572:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2589:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2582:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2582:12:10"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "2483:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2695:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2712:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2715:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:12:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:12:10"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "2606:117:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2836:478:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2885:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2887:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2864:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2872:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2860:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2860:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2879:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2856:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2856:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2849:35:10"
															},
															"nodeType": "YulIf",
															"src": "2846:122:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2977:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3000:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2987:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2987:20:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2977:6:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3050:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "3052:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3052:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3052:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3022:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3030:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3019:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:30:10"
															},
															"nodeType": "YulIf",
															"src": "3016:117:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3142:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3158:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3166:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3154:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3154:17:10"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "3142:8:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3225:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "3227:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3227:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3227:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "3190:8:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "3204:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3212:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "3200:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3200:17:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3186:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3186:32:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3220:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3183:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:41:10"
															},
															"nodeType": "YulIf",
															"src": "3180:128:10"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2803:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2811:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "2819:8:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2829:6:10",
														"type": ""
													}
												],
												"src": "2746:568:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3421:458:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3467:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3469:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3469:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3469:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3442:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3438:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3438:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3463:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3434:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:32:10"
															},
															"nodeType": "YulIf",
															"src": "3431:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "3560:312:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3575:45:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3606:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3617:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3602:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3602:17:10"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3589:12:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3589:31:10"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3579:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3667:83:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3669:77:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3669:79:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3669:79:10"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3639:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3647:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3636:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3636:30:10"
																	},
																	"nodeType": "YulIf",
																	"src": "3633:117:10"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3764:98:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3834:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3845:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3830:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3830:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3854:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3782:47:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3782:80:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3764:6:10"
																		},
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3772:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3383:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3394:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3406:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3414:6:10",
														"type": ""
													}
												],
												"src": "3320:559:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3930:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3940:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3951:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3940:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3912:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3922:7:10",
														"type": ""
													}
												],
												"src": "3885:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4011:79:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4068:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4077:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4080:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4070:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4070:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4070:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4034:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4059:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "4041:17:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4041:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4031:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4031:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4024:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:43:10"
															},
															"nodeType": "YulIf",
															"src": "4021:63:10"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4004:5:10",
														"type": ""
													}
												],
												"src": "3968:122:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4148:87:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4158:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4180:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4167:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4167:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4158:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4223:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "4196:26:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:33:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4196:33:10"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4126:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4134:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4142:5:10",
														"type": ""
													}
												],
												"src": "4096:139:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4307:263:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4353:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4355:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4355:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4355:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4328:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4337:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4324:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4324:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4349:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4320:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4320:32:10"
															},
															"nodeType": "YulIf",
															"src": "4317:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "4446:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4461:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4465:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4490:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4525:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4536:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4521:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4521:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4545:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4500:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4500:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4490:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4277:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4288:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4300:6:10",
														"type": ""
													}
												],
												"src": "4241:329:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4641:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4658:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4681:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4663:17:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4663:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4651:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4651:37:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4651:37:10"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4629:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4636:3:10",
														"type": ""
													}
												],
												"src": "4576:118:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4798:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4808:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4820:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4831:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4816:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4816:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4808:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4888:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4901:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4912:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4897:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4897:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4844:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4844:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4844:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4770:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4782:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4793:4:10",
														"type": ""
													}
												],
												"src": "4700:222:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5011:391:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5057:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5059:77:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5059:79:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5059:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5032:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5041:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5028:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5028:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5053:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5024:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5024:32:10"
															},
															"nodeType": "YulIf",
															"src": "5021:119:10"
														},
														{
															"nodeType": "YulBlock",
															"src": "5150:117:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5165:15:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5179:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5169:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5194:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:10"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5277:118:10",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5322:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:10"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4973:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4984:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4996:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5004:6:10",
														"type": ""
													}
												],
												"src": "4928:474:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5436:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5453:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5456:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5446:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5446:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5446:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5550:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5553:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5543:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5574:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5577:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5567:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5567:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5567:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "5408:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5622:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5639:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5642:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5632:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5632:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5736:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5739:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5729:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5729:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5729:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5760:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5763:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5753:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5753:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5753:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5594:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5825:32:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5835:16:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5846:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5835:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5807:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5817:7:10",
														"type": ""
													}
												],
												"src": "5780:77:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5906:190:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5916:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5943:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5925:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5916:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6039:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6041:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6041:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6041:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5964:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5971:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5961:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5961:77:10"
															},
															"nodeType": "YulIf",
															"src": "5958:103:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6070:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6081:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6088:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6077:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6077:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6070:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5892:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5902:3:10",
														"type": ""
													}
												],
												"src": "5863:233:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6198:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6215:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6220:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6208:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6208:19:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6236:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6255:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6260:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6251:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6251:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6236:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6170:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6175:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6186:11:10",
														"type": ""
													}
												],
												"src": "6102:169:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6383:128:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6405:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6413:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6401:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6401:14:10"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6417:34:10",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6394:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6394:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6394:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6473:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6481:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6469:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6469:15:10"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6486:17:10",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6462:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6462:42:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6462:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6375:6:10",
														"type": ""
													}
												],
												"src": "6277:234:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6663:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6673:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6739:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6744:2:10",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6680:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6680:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6845:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nodeType": "YulIdentifier",
																	"src": "6756:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6756:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6756:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6858:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6869:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6874:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6865:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6865:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6858:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6651:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6659:3:10",
														"type": ""
													}
												],
												"src": "6517:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7060:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7070:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7082:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7093:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7078:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7078:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7070:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7117:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7128:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7113:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7113:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7136:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7142:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7132:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7132:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7106:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7106:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7106:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7162:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7296:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7170:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7170:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7162:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7040:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7055:4:10",
														"type": ""
													}
												],
												"src": "6889:419:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7428:34:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7438:18:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7453:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7438:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7400:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7405:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7416:11:10",
														"type": ""
													}
												],
												"src": "7314:148:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7574:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7596:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7604:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7592:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7592:14:10"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7608:25:10",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7585:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7585:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7585:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7566:6:10",
														"type": ""
													}
												],
												"src": "7468:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7811:238:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7821:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7905:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7910:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7828:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7828:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7821:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8011:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nodeType": "YulIdentifier",
																	"src": "7922:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7922:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7922:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8024:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8035:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8040:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8031:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8031:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8024:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7799:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7807:3:10",
														"type": ""
													}
												],
												"src": "7647:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8114:40:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8125:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8141:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8135:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8135:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8125:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8097:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8107:6:10",
														"type": ""
													}
												],
												"src": "8055:99:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8222:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8232:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8241:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "8236:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8301:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "8326:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "8331:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "8322:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8322:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "8345:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "8350:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8341:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8341:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "8335:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8335:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8315:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8315:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8315:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8262:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8265:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8259:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8259:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8273:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8275:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8284:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8287:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8280:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8280:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8275:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8255:3:10",
																"statements": []
															},
															"src": "8251:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8384:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8389:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8380:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8380:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8398:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8373:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8373:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8373:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8204:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8209:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8214:6:10",
														"type": ""
													}
												],
												"src": "8160:246:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8522:280:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8532:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8579:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8546:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8546:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8536:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8594:96:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8678:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8683:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8601:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8601:89:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8594:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8738:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8745:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8734:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8734:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8752:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8757:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8699:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8699:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8699:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8773:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8784:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8789:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8780:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8780:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8773:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8503:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8510:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8518:3:10",
														"type": ""
													}
												],
												"src": "8412:390:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8914:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8936:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8944:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8932:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8932:14:10"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8948:19:10",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8925:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8925:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8925:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8906:6:10",
														"type": ""
													}
												],
												"src": "8808:167:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9145:238:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9155:92:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9239:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9244:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9162:76:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9162:85:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9155:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9345:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nodeType": "YulIdentifier",
																	"src": "9256:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9256:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9256:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9358:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9369:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9374:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9365:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9365:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9358:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9133:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9141:3:10",
														"type": ""
													}
												],
												"src": "8981:402:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9775:581:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9786:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9937:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9793:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9793:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9786:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9951:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10040:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10049:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9958:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9958:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9951:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10063:155:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10214:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10070:142:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10070:148:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10063:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10228:102:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10317:6:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10326:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10235:81:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10235:95:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10228:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10340:10:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10347:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10340:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9746:3:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9752:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9760:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9771:3:10",
														"type": ""
													}
												],
												"src": "9389:967:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10410:54:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10420:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10438:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10445:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10434:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10434:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10454:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10450:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10450:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10430:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10430:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10420:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "10403:6:10",
														"type": ""
													}
												],
												"src": "10362:102:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10562:285:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10572:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10619:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10586:32:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10586:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10576:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10634:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10700:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10705:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10641:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10641:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10634:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10760:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10767:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10756:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10756:16:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10774:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10779:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "10721:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10721:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10721:65:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10795:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10806:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10833:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "10811:21:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10811:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10802:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10802:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10795:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10543:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10550:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10558:3:10",
														"type": ""
													}
												],
												"src": "10470:377:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10971:195:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10981:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10993:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11004:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10989:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10989:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10981:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11028:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11039:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11024:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11024:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11047:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11053:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11043:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11043:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11017:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11017:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11017:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11073:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11145:6:10"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11154:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11081:63:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11081:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11073:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10943:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10955:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10966:4:10",
														"type": ""
													}
												],
												"src": "10853:313:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11220:362:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11230:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11253:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11235:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11235:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11230:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11264:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11287:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11269:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11269:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11264:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11298:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11321:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11324:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11317:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11317:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "11302:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11335:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "11364:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11346:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11346:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11335:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11553:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11555:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11555:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11555:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11486:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11479:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11479:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11509:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "11516:7:10"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "11525:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "11512:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11512:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "11506:2:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11506:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11459:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11459:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11439:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11439:113:10"
															},
															"nodeType": "YulIf",
															"src": "11436:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11203:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11206:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11212:7:10",
														"type": ""
													}
												],
												"src": "11172:410:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11632:147:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11642:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11665:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11647:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11647:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11642:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11676:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11699:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11681:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11681:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11676:1:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11710:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11721:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11724:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11717:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11717:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11710:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11750:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11752:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11752:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11752:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11742:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "11745:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11739:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11739:10:10"
															},
															"nodeType": "YulIf",
															"src": "11736:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11619:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11622:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11628:3:10",
														"type": ""
													}
												],
												"src": "11588:191:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11813:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11830:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11833:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11823:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11823:88:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11823:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11927:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11930:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11920:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11920:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11920:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11951:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11954:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11944:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11944:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11944:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "11785:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12014:128:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12024:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12051:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12033:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12033:24:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12024:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12085:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12087:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12087:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12087:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12072:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12079:4:10",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12069:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12069:15:10"
															},
															"nodeType": "YulIf",
															"src": "12066:41:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12116:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12127:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12134:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12123:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12123:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12116:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12000:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12010:3:10",
														"type": ""
													}
												],
												"src": "11971:171:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12254:76:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12276:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12284:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12272:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12272:14:10"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12288:34:10",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12265:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12265:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12265:58:10"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12246:6:10",
														"type": ""
													}
												],
												"src": "12148:182:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12482:220:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12492:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12558:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12563:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12499:58:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12499:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12492:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12664:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nodeType": "YulIdentifier",
																	"src": "12575:88:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12575:93:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12575:93:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12677:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12688:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12693:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12684:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12684:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12677:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12470:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12478:3:10",
														"type": ""
													}
												],
												"src": "12336:366:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12879:248:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12889:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12901:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12912:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12897:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12897:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12889:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12936:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12947:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12932:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12932:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12955:4:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12961:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12951:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12951:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12925:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12925:47:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12925:47:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12981:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13115:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12989:124:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12989:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12981:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12859:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12874:4:10",
														"type": ""
													}
												],
												"src": "12708:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c80636c79af1011610097578063a217fddf11610066578063a217fddf146102a6578063ab4bca64146102c4578063d547741f146102e0578063e43252d7146102fc576100f5565b80636c79af101461020e5780638ab1d6811461022a57806391d14854146102465780639b19251a14610276576100f5565b8063248a9ca3116100d3578063248a9ca3146101765780632f2ff15d146101a657806336568abe146101c25780633af32abf146101de576100f5565b806301ffc9a7146100fa5780630a84246d1461012a5780631c84bfc214610146575b600080fd5b610114600480360381019061010f9190610db7565b610318565b6040516101219190610dff565b60405180910390f35b610144600480360381019061013f9190610e78565b610392565b005b610160600480360381019061015b9190610f0a565b6103b0565b60405161016d9190610dff565b60405180910390f35b610190600480360381019061018b9190610f8d565b61041e565b60405161019d9190610fc9565b60405180910390f35b6101c060048036038101906101bb9190610fe4565b61043d565b005b6101dc60048036038101906101d79190610fe4565b61045e565b005b6101f860048036038101906101f39190610e78565b6104e1565b6040516102059190610dff565b60405180910390f35b61022860048036038101906102239190610f0a565b610537565b005b610244600480360381019061023f9190610e78565b61059b565b005b610260600480360381019061025b9190610fe4565b6105b5565b60405161026d9190610dff565b60405180910390f35b610290600480360381019061028b9190610e78565b61061f565b60405161029d9190610dff565b60405180910390f35b6102ae61063f565b6040516102bb9190610fc9565b60405180910390f35b6102de60048036038101906102d99190610f0a565b610646565b005b6102fa60048036038101906102f59190610fe4565b6106aa565b005b61031660048036038101906103119190610e78565b6106cb565b005b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038b575061038a826106e5565b5b9050919050565b6000801b61039f8161074f565b6103ac6000801b83610763565b5050565b600080600090505b83839050811015610412576103f38484838181106103d9576103d8611024565b5b90506020020160208101906103ee9190610e78565b6104e1565b610401576000915050610418565b8061040b9061108c565b90506103b8565b50600190505b92915050565b6000806000838152602001908152602001600020600101549050919050565b6104468261041e565b61044f8161074f565b6104598383610763565b505050565b610466610843565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca90611157565b60405180910390fd5b6104dd828261084b565b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000801b6105448161074f565b60005b838390508110156105955761058284848381811061056857610567611024565b5b905060200201602081019061057d9190610e78565b61092c565b808061058d9061108c565b915050610547565b50505050565b6000801b6105a88161074f565b6105b1826109c9565b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60016020528060005260406000206000915054906101000a900460ff1681565b6000801b81565b6000801b6106538161074f565b60005b838390508110156106a45761069184848381811061067757610676611024565b5b905060200201602081019061068c9190610e78565b6109c9565b808061069c9061108c565b915050610656565b50505050565b6106b38261041e565b6106bc8161074f565b6106c6838361084b565b505050565b6000801b6106d88161074f565b6106e18261092c565b5050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6107608161075b610843565b610a67565b50565b61076d82826105b5565b61083f57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506107e4610843565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b61085582826105b5565b1561092857600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506108cd610843565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167faab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a5460405160405180910390a250565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f066a905b79c0121afe61e3a44e0b14b6bc1ec16d854cdba09efdfc9b6aa9af8160405160405180910390a250565b610a7182826105b5565b610ae857610a7e81610aec565b610a8c8360001c6020610b19565b604051602001610a9d929190611280565b6040516020818303038152906040526040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adf9190611304565b60405180910390fd5b5050565b6060610b128273ffffffffffffffffffffffffffffffffffffffff16601460ff16610b19565b9050919050565b606060006002836002610b2c9190611326565b610b369190611368565b67ffffffffffffffff811115610b4f57610b4e61139c565b5b6040519080825280601f01601f191660200182016040528015610b815781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110610bb957610bb8611024565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110610c1d57610c1c611024565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006001846002610c5d9190611326565b610c679190611368565b90505b6001811115610d07577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110610ca957610ca8611024565b5b1a60f81b828281518110610cc057610cbf611024565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c945080610d00906113cb565b9050610c6a565b5060008414610d4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4290611440565b60405180910390fd5b8091505092915050565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610d9481610d5f565b8114610d9f57600080fd5b50565b600081359050610db181610d8b565b92915050565b600060208284031215610dcd57610dcc610d55565b5b6000610ddb84828501610da2565b91505092915050565b60008115159050919050565b610df981610de4565b82525050565b6000602082019050610e146000830184610df0565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4582610e1a565b9050919050565b610e5581610e3a565b8114610e6057600080fd5b50565b600081359050610e7281610e4c565b92915050565b600060208284031215610e8e57610e8d610d55565b5b6000610e9c84828501610e63565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112610eca57610ec9610ea5565b5b8235905067ffffffffffffffff811115610ee757610ee6610eaa565b5b602083019150836020820283011115610f0357610f02610eaf565b5b9250929050565b60008060208385031215610f2157610f20610d55565b5b600083013567ffffffffffffffff811115610f3f57610f3e610d5a565b5b610f4b85828601610eb4565b92509250509250929050565b6000819050919050565b610f6a81610f57565b8114610f7557600080fd5b50565b600081359050610f8781610f61565b92915050565b600060208284031215610fa357610fa2610d55565b5b6000610fb184828501610f78565b91505092915050565b610fc381610f57565b82525050565b6000602082019050610fde6000830184610fba565b92915050565b60008060408385031215610ffb57610ffa610d55565b5b600061100985828601610f78565b925050602061101a85828601610e63565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061109782611082565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036110c9576110c8611053565b5b600182019050919050565b600082825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b6000611141602f836110d4565b915061114c826110e5565b604082019050919050565b6000602082019050818103600083015261117081611134565b9050919050565b600081905092915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006111b8601783611177565b91506111c382611182565b601782019050919050565b600081519050919050565b60005b838110156111f75780820151818401526020810190506111dc565b60008484015250505050565b600061120e826111ce565b6112188185611177565b93506112288185602086016111d9565b80840191505092915050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b600061126a601183611177565b915061127582611234565b601182019050919050565b600061128b826111ab565b91506112978285611203565b91506112a28261125d565b91506112ae8284611203565b91508190509392505050565b6000601f19601f8301169050919050565b60006112d6826111ce565b6112e081856110d4565b93506112f08185602086016111d9565b6112f9816112ba565b840191505092915050565b6000602082019050818103600083015261131e81846112cb565b905092915050565b600061133182611082565b915061133c83611082565b925082820261134a81611082565b9150828204841483151761136157611360611053565b5b5092915050565b600061137382611082565b915061137e83611082565b925082820190508082111561139657611395611053565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006113d682611082565b9150600082036113e9576113e8611053565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b600061142a6020836110d4565b9150611435826113f4565b602082019050919050565b600060208201905081810360008301526114598161141d565b905091905056fea2646970667358221220c4cf01b87d7b5c0c080a81474cc31f444e0fe02e91009c849f34a4f2c4f02cb264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6C79AF10 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xAB4BCA64 EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x2FC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6C79AF10 EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x9B19251A EQ PUSH2 0x276 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x3AF32ABF EQ PUSH2 0x1DE JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0xA84246D EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x1C84BFC2 EQ PUSH2 0x146 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xDB7 JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x392 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x41E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x43D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x59B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x5B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0xDFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AE PUSH2 0x63F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0xFC9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH2 0x646 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x6AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x38B JUMPI POP PUSH2 0x38A DUP3 PUSH2 0x6E5 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x39F DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x3AC PUSH1 0x0 DUP1 SHL DUP4 PUSH2 0x763 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x412 JUMPI PUSH2 0x3F3 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x3D9 JUMPI PUSH2 0x3D8 PUSH2 0x1024 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x3EE SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH2 0x401 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x418 JUMP JUMPDEST DUP1 PUSH2 0x40B SWAP1 PUSH2 0x108C JUMP JUMPDEST SWAP1 POP PUSH2 0x3B8 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x446 DUP3 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x44F DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x459 DUP4 DUP4 PUSH2 0x763 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x466 PUSH2 0x843 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CA SWAP1 PUSH2 0x1157 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4DD DUP3 DUP3 PUSH2 0x84B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x544 DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x595 JUMPI PUSH2 0x582 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x568 JUMPI PUSH2 0x567 PUSH2 0x1024 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x57D SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST DUP1 DUP1 PUSH2 0x58D SWAP1 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x547 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x5A8 DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x5B1 DUP3 PUSH2 0x9C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x653 DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP4 SWAP1 POP DUP2 LT ISZERO PUSH2 0x6A4 JUMPI PUSH2 0x691 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x677 JUMPI PUSH2 0x676 PUSH2 0x1024 JUMP JUMPDEST JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x68C SWAP2 SWAP1 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x9C9 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x69C SWAP1 PUSH2 0x108C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x656 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x6B3 DUP3 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x6BC DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x6C6 DUP4 DUP4 PUSH2 0x84B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x6D8 DUP2 PUSH2 0x74F JUMP JUMPDEST PUSH2 0x6E1 DUP3 PUSH2 0x92C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x760 DUP2 PUSH2 0x75B PUSH2 0x843 JUMP JUMPDEST PUSH2 0xA67 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x76D DUP3 DUP3 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0x83F JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x7E4 PUSH2 0x843 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x855 DUP3 DUP3 PUSH2 0x5B5 JUMP JUMPDEST ISZERO PUSH2 0x928 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x8CD PUSH2 0x843 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xAAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x66A905B79C0121AFE61E3A44E0B14B6BC1EC16D854CDBA09EFDFC9B6AA9AF81 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0xA71 DUP3 DUP3 PUSH2 0x5B5 JUMP JUMPDEST PUSH2 0xAE8 JUMPI PUSH2 0xA7E DUP2 PUSH2 0xAEC JUMP JUMPDEST PUSH2 0xA8C DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA9D SWAP3 SWAP2 SWAP1 PUSH2 0x1280 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADF SWAP2 SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xB12 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0xB19 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB4F JUMPI PUSH2 0xB4E PUSH2 0x139C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB81 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xBB9 JUMPI PUSH2 0xBB8 PUSH2 0x1024 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xC1D JUMPI PUSH2 0xC1C PUSH2 0x1024 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0xC5D SWAP2 SWAP1 PUSH2 0x1326 JUMP JUMPDEST PUSH2 0xC67 SWAP2 SWAP1 PUSH2 0x1368 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD07 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0xCA9 JUMPI PUSH2 0xCA8 PUSH2 0x1024 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCC0 JUMPI PUSH2 0xCBF PUSH2 0x1024 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0xD00 SWAP1 PUSH2 0x13CB JUMP JUMPDEST SWAP1 POP PUSH2 0xC6A JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0xD4B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD42 SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD94 DUP2 PUSH2 0xD5F JUMP JUMPDEST DUP2 EQ PUSH2 0xD9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDB1 DUP2 PUSH2 0xD8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCC PUSH2 0xD55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xDDB DUP5 DUP3 DUP6 ADD PUSH2 0xDA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDF9 DUP2 PUSH2 0xDE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE14 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE45 DUP3 PUSH2 0xE1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE55 DUP2 PUSH2 0xE3A JUMP JUMPDEST DUP2 EQ PUSH2 0xE60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE72 DUP2 PUSH2 0xE4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE8E JUMPI PUSH2 0xE8D PUSH2 0xD55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE9C DUP5 DUP3 DUP6 ADD PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xECA JUMPI PUSH2 0xEC9 PUSH2 0xEA5 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEE7 JUMPI PUSH2 0xEE6 PUSH2 0xEAA JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xF03 JUMPI PUSH2 0xF02 PUSH2 0xEAF JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF21 JUMPI PUSH2 0xF20 PUSH2 0xD55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF3F JUMPI PUSH2 0xF3E PUSH2 0xD5A JUMP JUMPDEST JUMPDEST PUSH2 0xF4B DUP6 DUP3 DUP7 ADD PUSH2 0xEB4 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6A DUP2 PUSH2 0xF57 JUMP JUMPDEST DUP2 EQ PUSH2 0xF75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF87 DUP2 PUSH2 0xF61 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFA3 JUMPI PUSH2 0xFA2 PUSH2 0xD55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFB1 DUP5 DUP3 DUP6 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFC3 DUP2 PUSH2 0xF57 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFDE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFB JUMPI PUSH2 0xFFA PUSH2 0xD55 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1009 DUP6 DUP3 DUP7 ADD PUSH2 0xF78 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x101A DUP6 DUP3 DUP7 ADD PUSH2 0xE63 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1097 DUP3 PUSH2 0x1082 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x10C9 JUMPI PUSH2 0x10C8 PUSH2 0x1053 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1141 PUSH1 0x2F DUP4 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x114C DUP3 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1170 DUP2 PUSH2 0x1134 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11B8 PUSH1 0x17 DUP4 PUSH2 0x1177 JUMP JUMPDEST SWAP2 POP PUSH2 0x11C3 DUP3 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x11F7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120E DUP3 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x1218 DUP2 DUP6 PUSH2 0x1177 JUMP JUMPDEST SWAP4 POP PUSH2 0x1228 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11D9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126A PUSH1 0x11 DUP4 PUSH2 0x1177 JUMP JUMPDEST SWAP2 POP PUSH2 0x1275 DUP3 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128B DUP3 PUSH2 0x11AB JUMP JUMPDEST SWAP2 POP PUSH2 0x1297 DUP3 DUP6 PUSH2 0x1203 JUMP JUMPDEST SWAP2 POP PUSH2 0x12A2 DUP3 PUSH2 0x125D JUMP JUMPDEST SWAP2 POP PUSH2 0x12AE DUP3 DUP5 PUSH2 0x1203 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D6 DUP3 PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x12E0 DUP2 DUP6 PUSH2 0x10D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x12F0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11D9 JUMP JUMPDEST PUSH2 0x12F9 DUP2 PUSH2 0x12BA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x131E DUP2 DUP5 PUSH2 0x12CB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1331 DUP3 PUSH2 0x1082 JUMP JUMPDEST SWAP2 POP PUSH2 0x133C DUP4 PUSH2 0x1082 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x134A DUP2 PUSH2 0x1082 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1361 JUMPI PUSH2 0x1360 PUSH2 0x1053 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1373 DUP3 PUSH2 0x1082 JUMP JUMPDEST SWAP2 POP PUSH2 0x137E DUP4 PUSH2 0x1082 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1396 JUMPI PUSH2 0x1395 PUSH2 0x1053 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x13D6 DUP3 PUSH2 0x1082 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 SUB PUSH2 0x13E9 JUMPI PUSH2 0x13E8 PUSH2 0x1053 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142A PUSH1 0x20 DUP4 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1435 DUP3 PUSH2 0x13F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1459 DUP2 PUSH2 0x141D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0xCF ADD 0xB8 PUSH30 0x7B5C0C080A81474CC31F444E0FE02E91009C849F34A4F2C4F02CB264736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "336:2770:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2975:129:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2605:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4378:129:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4803:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5912:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2278:101:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;739:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1770:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2895:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;386:41:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1432:205:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5228:147:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1050:107:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2606:202:0;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;2975:129:8:-;2072:4:0;3034:18:8;;2505:16:0;2516:4;2505:10;:16::i;:::-;3060:39:8::1;2072:4:0;3071:18:8::0;::::1;3091:7;3060:10;:39::i;:::-;2975:129:::0;;:::o;2605:212::-;2680:4;2697:9;2709:1;2697:13;;2692:104;2716:7;;:14;;2712:1;:18;2692:104;;;2750:25;2764:7;;2772:1;2764:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;2750:13;:25::i;:::-;2745:44;;2784:5;2777:12;;;;;2745:44;2732:3;;;;:::i;:::-;;;2692:104;;;;2808:4;2801:11;;2605:212;;;;;:::o;4378:129:0:-;4452:7;4478:6;:12;4485:4;4478:12;;;;;;;;;;;:22;;;4471:29;;4378:129;;;:::o;4803:145::-;4886:18;4899:4;4886:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;:::-;4803:145:::0;;;:::o;5912:214::-;6018:12;:10;:12::i;:::-;6007:23;;:7;:23;;;5999:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;2278:101:8:-;2338:4;2357:9;:17;2367:6;2357:17;;;;;;;;;;;;;;;;;;;;;;;;;2350:24;;2278:101;;;:::o;739:186::-;2072:4:0;813:18:8;;2505:16:0;2516:4;2505:10;:16::i;:::-;844:9:8::1;839:82;863:7;;:14;;859:1;:18;839:82;;;892:22;903:7;;911:1;903:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;892;:22::i;:::-;879:3;;;;;:::i;:::-;;;;839:82;;;;739:186:::0;;;:::o;1770:118::-;2072:4:0;1833:18:8;;2505:16:0;2516:4;2505:10;:16::i;:::-;1859:24:8::1;1876:6;1859:16;:24::i;:::-;1770:118:::0;;:::o;2895:145:0:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;386:41:8:-;;;;;;;;;;;;;;;;;;;;;;:::o;2027:49:0:-;2072:4;2027:49;;;:::o;1432:205:8:-;2072:4:0;1519:18:8;;2505:16:0;2516:4;2505:10;:16::i;:::-;1550:9:8::1;1545:88;1569:7;;:14;;1565:1;:18;1545:88;;;1598:28;1615:7;;1623:1;1615:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;1598:16;:28::i;:::-;1585:3;;;;;:::i;:::-;;;;1545:88;;;;1432:205:::0;;;:::o;5228:147:0:-;5312:18;5325:4;5312:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;:::-;5228:147:::0;;;:::o;1050:107:8:-;2072:4:0;1108:18:8;;2505:16:0;2516:4;2505:10;:16::i;:::-;1134:18:8::1;1145:6;1134:10;:18::i;:::-;1050:107:::0;;:::o;829:155:4:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;3334:103:0:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;7461:233::-;7544:22;7552:4;7558:7;7544;:22::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;:12::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;640:96:2:-;693:7;719:10;712:17;;640:96;:::o;7865:234:0:-;7948:22;7956:4;7962:7;7948;:22::i;:::-;7944:149;;;8018:5;7986:6;:12;7993:4;7986:12;;;;;;;;;;;:20;;:29;8007:7;7986:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8069:12;:10;:12::i;:::-;8042:40;;8060:7;8042:40;;8054:4;8042:40;;;;;;;;;;7944:149;7865:234;;:::o;1161:110:8:-;1232:4;1212:9;:17;1222:6;1212:17;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1259:6;1247:19;;;;;;;;;;;;1161:110;:::o;1892:113::-;1969:5;1949:9;:17;1959:6;1949:17;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;1993:6;1985:15;;;;;;;;;;;;1892:113;:::o;3718:479:0:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4108:13;;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:336;;;;;;;;;;;:::i;:::-;;;;;;;;3801:390;3718:479;;:::o;2102:149:3:-;2160:13;2192:52;2220:4;2204:22;;311:2;2192:52;;:11;:52::i;:::-;2185:59;;2102:149;;;:::o;1513:437::-;1588:13;1613:19;1658:1;1649:6;1645:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1725:9;1750:1;1741:6;1737:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1808:3;1800:5;:11;1791:21;;;;;;;:::i;:::-;;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;1836:1;1826:11;;;;;1760:3;;;;:::i;:::-;;;1720:128;;;;1874:1;1865:5;:10;1857:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:6;1922:21;;;1513:437;;;;:::o;88:117:10:-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:329::-;2084:6;2133:2;2121:9;2112:7;2108:23;2104:32;2101:119;;;2139:79;;:::i;:::-;2101:119;2259:1;2284:53;2329:7;2320:6;2309:9;2305:22;2284:53;:::i;:::-;2274:63;;2230:117;2025:329;;;;:::o;2360:117::-;2469:1;2466;2459:12;2483:117;2592:1;2589;2582:12;2606:117;2715:1;2712;2705:12;2746:568;2819:8;2829:6;2879:3;2872:4;2864:6;2860:17;2856:27;2846:122;;2887:79;;:::i;:::-;2846:122;3000:6;2987:20;2977:30;;3030:18;3022:6;3019:30;3016:117;;;3052:79;;:::i;:::-;3016:117;3166:4;3158:6;3154:17;3142:29;;3220:3;3212:4;3204:6;3200:17;3190:8;3186:32;3183:41;3180:128;;;3227:79;;:::i;:::-;3180:128;2746:568;;;;;:::o;3320:559::-;3406:6;3414;3463:2;3451:9;3442:7;3438:23;3434:32;3431:119;;;3469:79;;:::i;:::-;3431:119;3617:1;3606:9;3602:17;3589:31;3647:18;3639:6;3636:30;3633:117;;;3669:79;;:::i;:::-;3633:117;3782:80;3854:7;3845:6;3834:9;3830:22;3782:80;:::i;:::-;3764:98;;;;3560:312;3320:559;;;;;:::o;3885:77::-;3922:7;3951:5;3940:16;;3885:77;;;:::o;3968:122::-;4041:24;4059:5;4041:24;:::i;:::-;4034:5;4031:35;4021:63;;4080:1;4077;4070:12;4021:63;3968:122;:::o;4096:139::-;4142:5;4180:6;4167:20;4158:29;;4196:33;4223:5;4196:33;:::i;:::-;4096:139;;;;:::o;4241:329::-;4300:6;4349:2;4337:9;4328:7;4324:23;4320:32;4317:119;;;4355:79;;:::i;:::-;4317:119;4475:1;4500:53;4545:7;4536:6;4525:9;4521:22;4500:53;:::i;:::-;4490:63;;4446:117;4241:329;;;;:::o;4576:118::-;4663:24;4681:5;4663:24;:::i;:::-;4658:3;4651:37;4576:118;;:::o;4700:222::-;4793:4;4831:2;4820:9;4816:18;4808:26;;4844:71;4912:1;4901:9;4897:17;4888:6;4844:71;:::i;:::-;4700:222;;;;:::o;4928:474::-;4996:6;5004;5053:2;5041:9;5032:7;5028:23;5024:32;5021:119;;;5059:79;;:::i;:::-;5021:119;5179:1;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5150:117;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4928:474;;;;;:::o;5408:180::-;5456:77;5453:1;5446:88;5553:4;5550:1;5543:15;5577:4;5574:1;5567:15;5594:180;5642:77;5639:1;5632:88;5739:4;5736:1;5729:15;5763:4;5760:1;5753:15;5780:77;5817:7;5846:5;5835:16;;5780:77;;;:::o;5863:233::-;5902:3;5925:24;5943:5;5925:24;:::i;:::-;5916:33;;5971:66;5964:5;5961:77;5958:103;;6041:18;;:::i;:::-;5958:103;6088:1;6081:5;6077:13;6070:20;;5863:233;;;:::o;6102:169::-;6186:11;6220:6;6215:3;6208:19;6260:4;6255:3;6251:14;6236:29;;6102:169;;;;:::o;6277:234::-;6417:34;6413:1;6405:6;6401:14;6394:58;6486:17;6481:2;6473:6;6469:15;6462:42;6277:234;:::o;6517:366::-;6659:3;6680:67;6744:2;6739:3;6680:67;:::i;:::-;6673:74;;6756:93;6845:3;6756:93;:::i;:::-;6874:2;6869:3;6865:12;6858:19;;6517:366;;;:::o;6889:419::-;7055:4;7093:2;7082:9;7078:18;7070:26;;7142:9;7136:4;7132:20;7128:1;7117:9;7113:17;7106:47;7170:131;7296:4;7170:131;:::i;:::-;7162:139;;6889:419;;;:::o;7314:148::-;7416:11;7453:3;7438:18;;7314:148;;;;:::o;7468:173::-;7608:25;7604:1;7596:6;7592:14;7585:49;7468:173;:::o;7647:402::-;7807:3;7828:85;7910:2;7905:3;7828:85;:::i;:::-;7821:92;;7922:93;8011:3;7922:93;:::i;:::-;8040:2;8035:3;8031:12;8024:19;;7647:402;;;:::o;8055:99::-;8107:6;8141:5;8135:12;8125:22;;8055:99;;;:::o;8160:246::-;8241:1;8251:113;8265:6;8262:1;8259:13;8251:113;;;8350:1;8345:3;8341:11;8335:18;8331:1;8326:3;8322:11;8315:39;8287:2;8284:1;8280:10;8275:15;;8251:113;;;8398:1;8389:6;8384:3;8380:16;8373:27;8222:184;8160:246;;;:::o;8412:390::-;8518:3;8546:39;8579:5;8546:39;:::i;:::-;8601:89;8683:6;8678:3;8601:89;:::i;:::-;8594:96;;8699:65;8757:6;8752:3;8745:4;8738:5;8734:16;8699:65;:::i;:::-;8789:6;8784:3;8780:16;8773:23;;8522:280;8412:390;;;;:::o;8808:167::-;8948:19;8944:1;8936:6;8932:14;8925:43;8808:167;:::o;8981:402::-;9141:3;9162:85;9244:2;9239:3;9162:85;:::i;:::-;9155:92;;9256:93;9345:3;9256:93;:::i;:::-;9374:2;9369:3;9365:12;9358:19;;8981:402;;;:::o;9389:967::-;9771:3;9793:148;9937:3;9793:148;:::i;:::-;9786:155;;9958:95;10049:3;10040:6;9958:95;:::i;:::-;9951:102;;10070:148;10214:3;10070:148;:::i;:::-;10063:155;;10235:95;10326:3;10317:6;10235:95;:::i;:::-;10228:102;;10347:3;10340:10;;9389:967;;;;;:::o;10362:102::-;10403:6;10454:2;10450:7;10445:2;10438:5;10434:14;10430:28;10420:38;;10362:102;;;:::o;10470:377::-;10558:3;10586:39;10619:5;10586:39;:::i;:::-;10641:71;10705:6;10700:3;10641:71;:::i;:::-;10634:78;;10721:65;10779:6;10774:3;10767:4;10760:5;10756:16;10721:65;:::i;:::-;10811:29;10833:6;10811:29;:::i;:::-;10806:3;10802:39;10795:46;;10562:285;10470:377;;;;:::o;10853:313::-;10966:4;11004:2;10993:9;10989:18;10981:26;;11053:9;11047:4;11043:20;11039:1;11028:9;11024:17;11017:47;11081:78;11154:4;11145:6;11081:78;:::i;:::-;11073:86;;10853:313;;;;:::o;11172:410::-;11212:7;11235:20;11253:1;11235:20;:::i;:::-;11230:25;;11269:20;11287:1;11269:20;:::i;:::-;11264:25;;11324:1;11321;11317:9;11346:30;11364:11;11346:30;:::i;:::-;11335:41;;11525:1;11516:7;11512:15;11509:1;11506:22;11486:1;11479:9;11459:83;11436:139;;11555:18;;:::i;:::-;11436:139;11220:362;11172:410;;;;:::o;11588:191::-;11628:3;11647:20;11665:1;11647:20;:::i;:::-;11642:25;;11681:20;11699:1;11681:20;:::i;:::-;11676:25;;11724:1;11721;11717:9;11710:16;;11745:3;11742:1;11739:10;11736:36;;;11752:18;;:::i;:::-;11736:36;11588:191;;;;:::o;11785:180::-;11833:77;11830:1;11823:88;11930:4;11927:1;11920:15;11954:4;11951:1;11944:15;11971:171;12010:3;12033:24;12051:5;12033:24;:::i;:::-;12024:33;;12079:4;12072:5;12069:15;12066:41;;12087:18;;:::i;:::-;12066:41;12134:1;12127:5;12123:13;12116:20;;11971:171;;;:::o;12148:182::-;12288:34;12284:1;12276:6;12272:14;12265:58;12148:182;:::o;12336:366::-;12478:3;12499:67;12563:2;12558:3;12499:67;:::i;:::-;12492:74;;12575:93;12664:3;12575:93;:::i;:::-;12693:2;12688:3;12684:12;12677:19;;12336:366;;;:::o;12708:419::-;12874:4;12912:2;12901:9;12897:18;12889:26;;12961:9;12955:4;12951:20;12947:1;12936:9;12932:17;12925:47;12989:131;13115:4;12989:131;:::i;:::-;12981:139;;12708:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1054000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "357",
								"addToWhitelist(address)": "infinite",
								"areWhitelisted(address[])": "infinite",
								"bulkAddToWhitelist(address[])": "infinite",
								"bulkRemoveFromWhitelist(address[])": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"grantRoleAdmin(address)": "infinite",
								"hasRole(bytes32,address)": "3207",
								"isWhitelisted(address)": "2972",
								"removeFromWhitelist(address)": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "751",
								"whitelist(address)": "2934"
							},
							"internal": {
								"_removeWhitelist(address)": "25538",
								"_whitelist(address)": "25538"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 336,
									"end": 3106,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 336,
									"end": 3106,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 336,
									"end": 3106,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 519,
									"end": 586,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 519,
									"end": 586,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 519,
									"end": 586,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 519,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 586,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 519,
									"end": 586,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 586,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 519,
									"end": 586,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 519,
									"end": 586,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 519,
									"end": 586,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 519,
									"end": 586,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 539,
									"end": 581,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 550,
									"end": 568,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 550,
									"end": 568,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 570,
									"end": 580,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 539,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "5"
								},
								{
									"begin": 539,
									"end": 549,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 539,
									"end": 549,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 539,
									"end": 581,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 539,
									"end": 581,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 539,
									"end": 581,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 539,
									"end": 581,
									"name": "tag",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 539,
									"end": 581,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 336,
									"end": 3106,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 336,
									"end": 3106,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 7552,
									"end": 7556,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7558,
									"end": 7565,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7551,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 7544,
									"end": 7566,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7614,
									"end": 7618,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7582,
									"end": 7588,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7589,
									"end": 7593,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7594,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7602,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7603,
									"end": 7610,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7611,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7582,
									"end": 7618,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7674,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 7664,
									"end": 7676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7655,
									"end": 7662,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7649,
									"end": 7653,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7637,
									"end": 7677,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7539,
									"end": 7688,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 7694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7461,
									"end": 7694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2981,
									"end": 2985,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3011,
									"end": 3015,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3016,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3024,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3025,
									"end": 3032,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3004,
									"end": 3033,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2997,
									"end": 3033,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2895,
									"end": 3040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 336,
									"end": 3106,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 336,
									"end": 3106,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 336,
									"end": 3106,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 336,
									"end": 3106,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 336,
									"end": 3106,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 336,
									"end": 3106,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 3106,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 336,
									"end": 3106,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 3106,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c4cf01b87d7b5c0c080a81474cc31f444e0fe02e91009c849f34a4f2c4f02cb264736f6c63430008120033",
									".code": [
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "6C79AF10"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "A217FDDF"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "A217FDDF"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "AB4BCA64"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "D547741F"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "E43252D7"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "6C79AF10"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "8AB1D681"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "91D14854"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "9B19251A"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "248A9CA3"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "248A9CA3"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "2F2FF15D"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "36568ABE"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "3AF32ABF"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A7"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "A84246D"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "1C84BFC2"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 336,
											"end": 3106,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2975,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2975,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 2605,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2605,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2605,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2278,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2278,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 2278,
											"end": 2379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 739,
											"end": 925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 739,
											"end": 925,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 739,
											"end": 925,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 739,
											"end": 925,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 739,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 739,
											"end": 925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 739,
											"end": 925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 739,
											"end": 925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1770,
											"end": 1888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1770,
											"end": 1888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 386,
											"end": 427,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 386,
											"end": 427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 386,
											"end": 427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 386,
											"end": 427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 1432,
											"end": 1637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1432,
											"end": 1637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1050,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1050,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2761,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2789,
											"end": 2800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2765,
											"end": 2801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2765,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2714,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2707,
											"end": 2801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2606,
											"end": 2808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3034,
											"end": 3052,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 2072,
											"end": 2076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3071,
											"end": 3089,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3071,
											"end": 3089,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 3091,
											"end": 3098,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3060,
											"end": 3070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 3060,
											"end": 3099,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3060,
											"end": 3099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 3060,
											"end": 3099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 3104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2706,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2709,
											"end": 2710,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2710,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2697,
											"end": 2710,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2796,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 2692,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2716,
											"end": 2723,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2716,
											"end": 2723,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2716,
											"end": 2730,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2712,
											"end": 2730,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2796,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2692,
											"end": 2796,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2775,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2764,
											"end": 2771,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2771,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2772,
											"end": 2773,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2764,
											"end": 2774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "tag",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 2764,
											"end": 2774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2750,
											"end": 2775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2750,
											"end": 2775,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 2750,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2745,
											"end": 2789,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2784,
											"end": 2789,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2777,
											"end": 2789,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2777,
											"end": 2789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2777,
											"end": 2789,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2777,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2777,
											"end": 2789,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2745,
											"end": 2789,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 2745,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2735,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2732,
											"end": 2735,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2735,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2732,
											"end": 2735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2735,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 2732,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2735,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2732,
											"end": 2735,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 2692,
											"end": 2796,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2796,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2692,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2692,
											"end": 2796,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2808,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2801,
											"end": 2812,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2801,
											"end": 2812,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "tag",
											"source": 8,
											"value": "89"
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4452,
											"end": 4459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4478,
											"end": 4500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4471,
											"end": 4500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4886,
											"end": 4904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4886,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4927,
											"end": 4931,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4940,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4916,
											"end": 4926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4916,
											"end": 4941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4916,
											"end": 4941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 6018,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 6018,
											"end": 6030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 6018,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6007,
											"end": 6030,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5999,
											"end": 6082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5999,
											"end": 6082,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6111,
											"end": 6118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6093,
											"end": 6119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6093,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5912,
											"end": 6126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2338,
											"end": 2342,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2366,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2367,
											"end": 2373,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2357,
											"end": 2374,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2350,
											"end": 2374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 739,
											"end": 925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 831,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 813,
											"end": 831,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 844,
											"end": 853,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 839,
											"end": 921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 863,
											"end": 870,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 863,
											"end": 870,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 863,
											"end": 877,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 863,
											"end": 877,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 859,
											"end": 860,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 859,
											"end": 877,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 839,
											"end": 921,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 839,
											"end": 921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 839,
											"end": 921,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 892,
											"end": 914,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 903,
											"end": 910,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 903,
											"end": 910,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 911,
											"end": 912,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 903,
											"end": 913,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 903,
											"end": 913,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 903,
											"end": 913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 892,
											"end": 902,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 892,
											"end": 914,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 892,
											"end": 914,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 892,
											"end": 914,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 879,
											"end": 882,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 879,
											"end": 882,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 879,
											"end": 882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 879,
											"end": 882,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 879,
											"end": 882,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 879,
											"end": 882,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 879,
											"end": 882,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 879,
											"end": 882,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 879,
											"end": 882,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 879,
											"end": 882,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 879,
											"end": 882,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 839,
											"end": 921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 839,
											"end": 921,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 839,
											"end": 921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 839,
											"end": 921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 839,
											"end": 921,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 739,
											"end": 925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1833,
											"end": 1851,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1833,
											"end": 1851,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1859,
											"end": 1883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 1876,
											"end": 1882,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1859,
											"end": 1875,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1859,
											"end": 1883,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1859,
											"end": 1883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 1859,
											"end": 1883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3032,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3004,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2997,
											"end": 3033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2895,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 386,
											"end": 427,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 386,
											"end": 427,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 386,
											"end": 427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2027,
											"end": 2076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1550,
											"end": 1559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1545,
											"end": 1633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1576,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1576,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1583,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1566,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1565,
											"end": 1583,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1633,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1545,
											"end": 1633,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1626,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1615,
											"end": 1622,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1622,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1624,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1615,
											"end": 1625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1615,
											"end": 1625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1615,
											"end": 1625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1614,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1598,
											"end": 1626,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1598,
											"end": 1626,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1598,
											"end": 1626,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1585,
											"end": 1588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1585,
											"end": 1588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1585,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1585,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1585,
											"end": 1588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1585,
											"end": 1588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1585,
											"end": 1588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1585,
											"end": 1588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1585,
											"end": 1588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1585,
											"end": 1588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1585,
											"end": 1588,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 1545,
											"end": 1633,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1633,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 1545,
											"end": 1633,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1545,
											"end": 1633,
											"modifierDepth": 1,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5312,
											"end": 5330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5354,
											"end": 5358,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5360,
											"end": 5367,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 5342,
											"end": 5368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5342,
											"end": 5368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5228,
											"end": 5375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2072,
											"end": 2076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1126,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1108,
											"end": 1126,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2516,
											"end": 2520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2505,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2505,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1134,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1145,
											"end": 1151,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1134,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 1134,
											"end": 1152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1134,
											"end": 1152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1134,
											"end": 1152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3411,
											"end": 3415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3417,
											"end": 3427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 3417,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3400,
											"end": 3430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3400,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3334,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7552,
											"end": 7556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7558,
											"end": 7565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7544,
											"end": 7566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 7544,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7614,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7589,
											"end": 7593,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7594,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7602,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7603,
											"end": 7610,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7611,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7582,
											"end": 7618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7664,
											"end": 7674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 7664,
											"end": 7676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 7664,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7655,
											"end": 7662,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7649,
											"end": 7653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7637,
											"end": 7677,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7539,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7461,
											"end": 7694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7962,
											"end": 7969,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7948,
											"end": 7970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 7948,
											"end": 7970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8018,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 7997,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 7998,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8006,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8007,
											"end": 8014,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8015,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7986,
											"end": 8023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8069,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 8069,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8069,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8060,
											"end": 8067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8054,
											"end": 8058,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8042,
											"end": 8082,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 7944,
											"end": 8093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 8099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7865,
											"end": 8099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1161,
											"end": 1271,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 1161,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1232,
											"end": 1236,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1212,
											"end": 1221,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1229,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1212,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "PUSH",
											"source": 8,
											"value": "AAB7954E9D246B167EF88AEDDAD35209CA2489D95A8AEB59E288D9B19FAE5A54"
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1247,
											"end": 1266,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1161,
											"end": 1271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1892,
											"end": 2005,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1892,
											"end": 2005,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1958,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1966,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1949,
											"end": 1974,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 1999,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "PUSH",
											"source": 8,
											"value": "66A905B79C0121AFE61E3A44E0B14B6BC1EC16D854CDBA09EFDFC9B6AA9AF81"
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2000,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 1892,
											"end": 2005,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1892,
											"end": 2005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3814,
											"end": 3818,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3820,
											"end": 3827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3806,
											"end": 3828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4009,
											"end": 4016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 3989,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3989,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4116,
											"end": 4120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4123,
											"end": 4125,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4088,
											"end": 4107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4088,
											"end": 4126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4088,
											"end": 4126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 3896,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3844,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3801,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4197,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3718,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2160,
											"end": 2173,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2220,
											"end": 2224,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2204,
											"end": 2226,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 311,
											"end": 313,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2192,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2192,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2244,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2102,
											"end": 2251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1588,
											"end": 1601,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1613,
											"end": 1632,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1658,
											"end": 1659,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1649,
											"end": 1655,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1645,
											"end": 1655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 1645,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1645,
											"end": 1659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 1645,
											"end": 1659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 1635,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 3,
											"value": "189"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1660,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 3,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1670,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 3,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1702,
											"end": 1703,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1695,
											"end": 1704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1704,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 1695,
											"end": 1710,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 1737,
											"end": 1747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 1737,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 1737,
											"end": 1751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 1737,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1725,
											"end": 1751,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1757,
											"end": 1758,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1753,
											"end": 1754,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1799,
											"name": "PUSH",
											"source": 3,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1808,
											"end": 1811,
											"name": "PUSH",
											"source": 3,
											"value": "F"
										},
										{
											"begin": 1800,
											"end": 1805,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1800,
											"end": 1811,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1791,
											"end": 1812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "PUSH",
											"source": 3,
											"value": "F8"
										},
										{
											"begin": 1791,
											"end": 1812,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1786,
											"end": 1787,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1779,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "BYTE",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "MSTORE8",
											"source": 3
										},
										{
											"begin": 1779,
											"end": 1812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1826,
											"end": 1837,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 1760,
											"end": 1763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1763,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 1848,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1870,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1875,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 1857,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 1857,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1936,
											"end": 1942,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1922,
											"end": 1943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1950,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1513,
											"end": 1950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 10,
											"value": "253"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 10,
											"value": "270"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2121,
											"end": 2130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2119,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2131,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2104,
											"end": 2136,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 2139,
											"end": 2218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 2139,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 2101,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 2329,
											"end": 2336,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2318,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2305,
											"end": 2327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2284,
											"end": 2337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "tag",
											"source": 10,
											"value": "277"
										},
										{
											"begin": 2284,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2274,
											"end": 2337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2230,
											"end": 2347,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2360,
											"end": 2477,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2360,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2469,
											"end": 2470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2467,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2483,
											"end": 2600,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2483,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2592,
											"end": 2593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2590,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2582,
											"end": 2594,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2606,
											"end": 2723,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2606,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2715,
											"end": 2716,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2705,
											"end": 2717,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 3314,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 2746,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2819,
											"end": 2827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2835,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2879,
											"end": 2882,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2876,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2864,
											"end": 2870,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2860,
											"end": 2877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2856,
											"end": 2883,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2887,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2887,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 2887,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2887,
											"end": 2966,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 2887,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "tag",
											"source": 10,
											"value": "282"
										},
										{
											"begin": 2846,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3006,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3007,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2977,
											"end": 3007,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2977,
											"end": 3007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3048,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3022,
											"end": 3028,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3049,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3052,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 3052,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 3052,
											"end": 3131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3052,
											"end": 3131,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 3052,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 3016,
											"end": 3133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3166,
											"end": 3170,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3158,
											"end": 3164,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3154,
											"end": 3171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3171,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3220,
											"end": 3223,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3212,
											"end": 3216,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3204,
											"end": 3210,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3200,
											"end": 3217,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3190,
											"end": 3198,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3186,
											"end": 3218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3224,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3308,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3308,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 3180,
											"end": 3308,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3227,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 3227,
											"end": 3306,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 3227,
											"end": 3306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3227,
											"end": 3306,
											"name": "tag",
											"source": 10,
											"value": "287"
										},
										{
											"begin": 3227,
											"end": 3306,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3180,
											"end": 3308,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 3180,
											"end": 3308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 3314,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 3314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 3314,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 3314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 3314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2746,
											"end": 3314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3879,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 3320,
											"end": 3879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3420,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3465,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3451,
											"end": 3460,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3449,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3438,
											"end": 3461,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3434,
											"end": 3466,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3431,
											"end": 3550,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3431,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 3431,
											"end": 3550,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3469,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 3469,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3548,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 3469,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3431,
											"end": 3550,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 3431,
											"end": 3550,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3615,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3602,
											"end": 3619,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3589,
											"end": 3620,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3639,
											"end": 3645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3666,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3750,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3750,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 3633,
											"end": 3750,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3669,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 3669,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3748,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 3669,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3633,
											"end": 3750,
											"name": "tag",
											"source": 10,
											"value": "291"
										},
										{
											"begin": 3633,
											"end": 3750,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3782,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3854,
											"end": 3861,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3845,
											"end": 3851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3834,
											"end": 3843,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3830,
											"end": 3852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3782,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3782,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3782,
											"end": 3862,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 3782,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3764,
											"end": 3862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3764,
											"end": 3862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3764,
											"end": 3862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3764,
											"end": 3862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3560,
											"end": 3872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3879,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3879,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3879,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3320,
											"end": 3879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3962,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 3885,
											"end": 3962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3922,
											"end": 3929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3951,
											"end": 3956,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3962,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3962,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3885,
											"end": 3962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3968,
											"end": 4090,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3968,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 4059,
											"end": 4064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4041,
											"end": 4065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 4041,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4034,
											"end": 4039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4021,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4021,
											"end": 4084,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4080,
											"end": 4081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4077,
											"end": 4078,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4070,
											"end": 4082,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4021,
											"end": 4084,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4021,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3968,
											"end": 4090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3968,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4235,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 4096,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4142,
											"end": 4147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4186,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4167,
											"end": 4187,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4158,
											"end": 4187,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4158,
											"end": 4187,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4223,
											"end": 4228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 4196,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4196,
											"end": 4229,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4196,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4235,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4235,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 4235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4570,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 4241,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4300,
											"end": 4306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4351,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4337,
											"end": 4346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4328,
											"end": 4335,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4324,
											"end": 4347,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4320,
											"end": 4352,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4436,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4317,
											"end": 4436,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4355,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4355,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4434,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4355,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4317,
											"end": 4436,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4317,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4475,
											"end": 4476,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4545,
											"end": 4552,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4536,
											"end": 4542,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4525,
											"end": 4534,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4521,
											"end": 4543,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4500,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 4500,
											"end": 4553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4500,
											"end": 4553,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4500,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4490,
											"end": 4553,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4490,
											"end": 4553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4446,
											"end": 4563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4570,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4570,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4241,
											"end": 4570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4576,
											"end": 4694,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 4576,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4663,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4681,
											"end": 4686,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4663,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 4663,
											"end": 4687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4663,
											"end": 4687,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4663,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4658,
											"end": 4661,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4651,
											"end": 4688,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4576,
											"end": 4694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4576,
											"end": 4694,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4576,
											"end": 4694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4922,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 4700,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 4797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4831,
											"end": 4833,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4820,
											"end": 4829,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4816,
											"end": 4834,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4834,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4834,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4912,
											"end": 4913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4901,
											"end": 4910,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4897,
											"end": 4914,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4888,
											"end": 4894,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 4844,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4844,
											"end": 4915,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4844,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4922,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4922,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4922,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 5402,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4928,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4996,
											"end": 5002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5010,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5053,
											"end": 5055,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5041,
											"end": 5050,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5032,
											"end": 5039,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5028,
											"end": 5051,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 5056,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5021,
											"end": 5140,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5021,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 5021,
											"end": 5140,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5059,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 5059,
											"end": 5138,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 5059,
											"end": 5138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5059,
											"end": 5138,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 5059,
											"end": 5138,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5021,
											"end": 5140,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 5021,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5179,
											"end": 5180,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5150,
											"end": 5267,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 5402,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 5402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 5402,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 5402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 5402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5408,
											"end": 5588,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 5408,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5456,
											"end": 5533,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5453,
											"end": 5454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5446,
											"end": 5534,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5553,
											"end": 5557,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5543,
											"end": 5558,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5577,
											"end": 5581,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5574,
											"end": 5575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5567,
											"end": 5582,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5594,
											"end": 5774,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5594,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5642,
											"end": 5719,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5632,
											"end": 5720,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 5736,
											"end": 5737,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5729,
											"end": 5744,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5763,
											"end": 5767,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 5760,
											"end": 5761,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5753,
											"end": 5768,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5780,
											"end": 5857,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5780,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5817,
											"end": 5824,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5846,
											"end": 5851,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 5851,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5835,
											"end": 5851,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5780,
											"end": 5857,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5780,
											"end": 5857,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5780,
											"end": 5857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5780,
											"end": 5857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5863,
											"end": 6096,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5863,
											"end": 6096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5902,
											"end": 5905,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5916,
											"end": 5949,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5916,
											"end": 5949,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5971,
											"end": 6037,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5964,
											"end": 5969,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5958,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5958,
											"end": 6061,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6041,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 6041,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 6041,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6041,
											"end": 6059,
											"name": "tag",
											"source": 10,
											"value": "319"
										},
										{
											"begin": 6041,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5958,
											"end": 6061,
											"name": "tag",
											"source": 10,
											"value": "318"
										},
										{
											"begin": 5958,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6088,
											"end": 6089,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6081,
											"end": 6086,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6077,
											"end": 6090,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6090,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6070,
											"end": 6090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5863,
											"end": 6096,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5863,
											"end": 6096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5863,
											"end": 6096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5863,
											"end": 6096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6271,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 6102,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6186,
											"end": 6197,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6226,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6215,
											"end": 6218,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6208,
											"end": 6227,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6260,
											"end": 6264,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6255,
											"end": 6258,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6265,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6236,
											"end": 6265,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6236,
											"end": 6265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6271,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6271,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6271,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6277,
											"end": 6511,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 6277,
											"end": 6511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6417,
											"end": 6451,
											"name": "PUSH",
											"source": 10,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 6413,
											"end": 6414,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6401,
											"end": 6415,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6394,
											"end": 6452,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6486,
											"end": 6503,
											"name": "PUSH",
											"source": 10,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 6481,
											"end": 6483,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6473,
											"end": 6479,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6469,
											"end": 6484,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6462,
											"end": 6504,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6277,
											"end": 6511,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6277,
											"end": 6511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6883,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 6517,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6659,
											"end": 6662,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6680,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6744,
											"end": 6746,
											"name": "PUSH",
											"source": 10,
											"value": "2F"
										},
										{
											"begin": 6739,
											"end": 6742,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 6680,
											"end": 6747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6680,
											"end": 6747,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 6680,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6747,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6756,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 6845,
											"end": 6848,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6756,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 6756,
											"end": 6849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6756,
											"end": 6849,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 6756,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6874,
											"end": 6876,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6869,
											"end": 6872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6865,
											"end": 6877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 6877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6858,
											"end": 6877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6883,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6883,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6517,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7308,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 6889,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7055,
											"end": 7059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7093,
											"end": 7095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7082,
											"end": 7091,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7078,
											"end": 7096,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7096,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7070,
											"end": 7096,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7142,
											"end": 7151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7136,
											"end": 7140,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7132,
											"end": 7152,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7128,
											"end": 7129,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7117,
											"end": 7126,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7113,
											"end": 7130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7106,
											"end": 7153,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7170,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 7296,
											"end": 7300,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7170,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 7170,
											"end": 7301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7170,
											"end": 7301,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 7170,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7301,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7162,
											"end": 7301,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7308,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7462,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7314,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7416,
											"end": 7427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7453,
											"end": 7456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7438,
											"end": 7456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7462,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7462,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7314,
											"end": 7462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7468,
											"end": 7641,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7468,
											"end": 7641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7608,
											"end": 7633,
											"name": "PUSH",
											"source": 10,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 7604,
											"end": 7605,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7596,
											"end": 7602,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7592,
											"end": 7606,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7585,
											"end": 7634,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7468,
											"end": 7641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7468,
											"end": 7641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 8049,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 7647,
											"end": 8049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7807,
											"end": 7810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 7910,
											"end": 7912,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 7905,
											"end": 7908,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7913,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 7828,
											"end": 7913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7828,
											"end": 7913,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 7828,
											"end": 7913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 7913,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7821,
											"end": 7913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7922,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 8011,
											"end": 8014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7922,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 7922,
											"end": 8015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7922,
											"end": 8015,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 7922,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8040,
											"end": 8042,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 8035,
											"end": 8038,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8031,
											"end": 8043,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8043,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8024,
											"end": 8043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 8049,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 8049,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 8049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 8049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8055,
											"end": 8154,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 8055,
											"end": 8154,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8107,
											"end": 8113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8141,
											"end": 8146,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8135,
											"end": 8147,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8125,
											"end": 8147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8125,
											"end": 8147,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8055,
											"end": 8154,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8055,
											"end": 8154,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8055,
											"end": 8154,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8055,
											"end": 8154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8160,
											"end": 8406,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 8160,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8241,
											"end": 8242,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8251,
											"end": 8364,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 8251,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8265,
											"end": 8271,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8262,
											"end": 8263,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8259,
											"end": 8272,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 8251,
											"end": 8364,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8251,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 8251,
											"end": 8364,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8350,
											"end": 8351,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8345,
											"end": 8348,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8341,
											"end": 8352,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8335,
											"end": 8353,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8331,
											"end": 8332,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8326,
											"end": 8329,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8322,
											"end": 8333,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8315,
											"end": 8354,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8287,
											"end": 8289,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8284,
											"end": 8285,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8280,
											"end": 8290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8251,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 8251,
											"end": 8364,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8251,
											"end": 8364,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 8251,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8398,
											"end": 8399,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8389,
											"end": 8395,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8384,
											"end": 8387,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8396,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8373,
											"end": 8400,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8222,
											"end": 8406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8160,
											"end": 8406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8160,
											"end": 8406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8160,
											"end": 8406,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8160,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8412,
											"end": 8802,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 8412,
											"end": 8802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8518,
											"end": 8521,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8546,
											"end": 8585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 8579,
											"end": 8584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8546,
											"end": 8585,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 8546,
											"end": 8585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8546,
											"end": 8585,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 8546,
											"end": 8585,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8601,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 8683,
											"end": 8689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8678,
											"end": 8681,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8601,
											"end": 8690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 8601,
											"end": 8690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8601,
											"end": 8690,
											"name": "tag",
											"source": 10,
											"value": "339"
										},
										{
											"begin": 8601,
											"end": 8690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 8690,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8594,
											"end": 8690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8699,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 8757,
											"end": 8763,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8752,
											"end": 8755,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8745,
											"end": 8749,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8738,
											"end": 8743,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8734,
											"end": 8750,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8699,
											"end": 8764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 8699,
											"end": 8764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8699,
											"end": 8764,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 8699,
											"end": 8764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8789,
											"end": 8795,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8784,
											"end": 8787,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8780,
											"end": 8796,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8773,
											"end": 8796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8522,
											"end": 8802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8412,
											"end": 8802,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8412,
											"end": 8802,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8412,
											"end": 8802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8412,
											"end": 8802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8412,
											"end": 8802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8808,
											"end": 8975,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 8808,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 8967,
											"name": "PUSH",
											"source": 10,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 8944,
											"end": 8945,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8936,
											"end": 8942,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8932,
											"end": 8946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8925,
											"end": 8968,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8808,
											"end": 8975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8808,
											"end": 8975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8981,
											"end": 9383,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 8981,
											"end": 9383,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9141,
											"end": 9144,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9162,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 9244,
											"end": 9246,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9239,
											"end": 9242,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 9162,
											"end": 9247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9162,
											"end": 9247,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 9162,
											"end": 9247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9155,
											"end": 9247,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9155,
											"end": 9247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 9345,
											"end": 9348,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9349,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 9256,
											"end": 9349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9256,
											"end": 9349,
											"name": "tag",
											"source": 10,
											"value": "344"
										},
										{
											"begin": 9256,
											"end": 9349,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9374,
											"end": 9376,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 9369,
											"end": 9372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9365,
											"end": 9377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9358,
											"end": 9377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9358,
											"end": 9377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8981,
											"end": 9383,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8981,
											"end": 9383,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8981,
											"end": 9383,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8981,
											"end": 9383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 10356,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 9389,
											"end": 10356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9771,
											"end": 9774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9793,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 9937,
											"end": 9940,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 9793,
											"end": 9941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9793,
											"end": 9941,
											"name": "tag",
											"source": 10,
											"value": "346"
										},
										{
											"begin": 9793,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9786,
											"end": 9941,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9786,
											"end": 9941,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9958,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 10049,
											"end": 10052,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10040,
											"end": 10046,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9958,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 9958,
											"end": 10053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9958,
											"end": 10053,
											"name": "tag",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 9958,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9951,
											"end": 10053,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9951,
											"end": 10053,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10070,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 10214,
											"end": 10217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10070,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 10070,
											"end": 10218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10070,
											"end": 10218,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 10070,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10063,
											"end": 10218,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10063,
											"end": 10218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10235,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 10326,
											"end": 10329,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10317,
											"end": 10323,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10235,
											"end": 10330,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 10235,
											"end": 10330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10235,
											"end": 10330,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 10235,
											"end": 10330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10330,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10228,
											"end": 10330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10347,
											"end": 10350,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10340,
											"end": 10350,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10340,
											"end": 10350,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 10356,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 10356,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 10356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 10356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 10356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9389,
											"end": 10356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10464,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10362,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10403,
											"end": 10409,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10454,
											"end": 10456,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10450,
											"end": 10457,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 10445,
											"end": 10447,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10438,
											"end": 10443,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10434,
											"end": 10448,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10430,
											"end": 10458,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10458,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10420,
											"end": 10458,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10464,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10362,
											"end": 10464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10847,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 10470,
											"end": 10847,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10558,
											"end": 10561,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10586,
											"end": 10625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 10619,
											"end": 10624,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10586,
											"end": 10625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 10586,
											"end": 10625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10586,
											"end": 10625,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 10586,
											"end": 10625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10641,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 10705,
											"end": 10711,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10700,
											"end": 10703,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10641,
											"end": 10712,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 10641,
											"end": 10712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10641,
											"end": 10712,
											"name": "tag",
											"source": 10,
											"value": "353"
										},
										{
											"begin": 10641,
											"end": 10712,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10634,
											"end": 10712,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 10634,
											"end": 10712,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10721,
											"end": 10786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 10779,
											"end": 10785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10774,
											"end": 10777,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10767,
											"end": 10771,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10760,
											"end": 10765,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 10756,
											"end": 10772,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10721,
											"end": 10786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 10721,
											"end": 10786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10721,
											"end": 10786,
											"name": "tag",
											"source": 10,
											"value": "354"
										},
										{
											"begin": 10721,
											"end": 10786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 10833,
											"end": 10839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 10811,
											"end": 10840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10811,
											"end": 10840,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 10811,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10806,
											"end": 10809,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10802,
											"end": 10841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10795,
											"end": 10841,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10795,
											"end": 10841,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10562,
											"end": 10847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10847,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10847,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10847,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10853,
											"end": 11166,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 10853,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10966,
											"end": 10970,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10993,
											"end": 11002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10989,
											"end": 11007,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11007,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10981,
											"end": 11007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11053,
											"end": 11062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11047,
											"end": 11051,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11043,
											"end": 11063,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11039,
											"end": 11040,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11028,
											"end": 11037,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11024,
											"end": 11041,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11017,
											"end": 11064,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11081,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11145,
											"end": 11151,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11081,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 11081,
											"end": 11159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11081,
											"end": 11159,
											"name": "tag",
											"source": 10,
											"value": "357"
										},
										{
											"begin": 11081,
											"end": 11159,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11073,
											"end": 11159,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11073,
											"end": 11159,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10853,
											"end": 11166,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10853,
											"end": 11166,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10853,
											"end": 11166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10853,
											"end": 11166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10853,
											"end": 11166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11172,
											"end": 11582,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 11172,
											"end": 11582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11212,
											"end": 11219,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11235,
											"end": 11255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 11253,
											"end": 11254,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11235,
											"end": 11255,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 11235,
											"end": 11255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11235,
											"end": 11255,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 11235,
											"end": 11255,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11230,
											"end": 11255,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11230,
											"end": 11255,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11269,
											"end": 11289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 11287,
											"end": 11288,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11269,
											"end": 11289,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 11269,
											"end": 11289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11269,
											"end": 11289,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 11269,
											"end": 11289,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11264,
											"end": 11289,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11264,
											"end": 11289,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11324,
											"end": 11325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11321,
											"end": 11322,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11317,
											"end": 11326,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 11346,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 11364,
											"end": 11375,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11346,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 11346,
											"end": 11376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11346,
											"end": 11376,
											"name": "tag",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 11346,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11335,
											"end": 11376,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11335,
											"end": 11376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11525,
											"end": 11526,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11516,
											"end": 11523,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11512,
											"end": 11527,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 11509,
											"end": 11510,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11506,
											"end": 11528,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 11486,
											"end": 11487,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11479,
											"end": 11488,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11459,
											"end": 11542,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 11436,
											"end": 11575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 11436,
											"end": 11575,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11555,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 11555,
											"end": 11573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 11555,
											"end": 11573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11555,
											"end": 11573,
											"name": "tag",
											"source": 10,
											"value": "363"
										},
										{
											"begin": 11555,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11436,
											"end": 11575,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 11436,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11220,
											"end": 11582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11172,
											"end": 11582,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11172,
											"end": 11582,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11172,
											"end": 11582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11172,
											"end": 11582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11172,
											"end": 11582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11588,
											"end": 11779,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 11588,
											"end": 11779,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11628,
											"end": 11631,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11647,
											"end": 11667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 11665,
											"end": 11666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11667,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 11647,
											"end": 11667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11647,
											"end": 11667,
											"name": "tag",
											"source": 10,
											"value": "365"
										},
										{
											"begin": 11647,
											"end": 11667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11642,
											"end": 11667,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11642,
											"end": 11667,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11681,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 11699,
											"end": 11700,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11681,
											"end": 11701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 11681,
											"end": 11701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11681,
											"end": 11701,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 11681,
											"end": 11701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11676,
											"end": 11701,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11676,
											"end": 11701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11724,
											"end": 11725,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11721,
											"end": 11722,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 11726,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11710,
											"end": 11726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11710,
											"end": 11726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11745,
											"end": 11748,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11742,
											"end": 11743,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11739,
											"end": 11749,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11736,
											"end": 11772,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11736,
											"end": 11772,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 11736,
											"end": 11772,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11752,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 11752,
											"end": 11770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 11752,
											"end": 11770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11752,
											"end": 11770,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 11752,
											"end": 11770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11736,
											"end": 11772,
											"name": "tag",
											"source": 10,
											"value": "367"
										},
										{
											"begin": 11736,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11588,
											"end": 11779,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11588,
											"end": 11779,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11588,
											"end": 11779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11588,
											"end": 11779,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11588,
											"end": 11779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11785,
											"end": 11965,
											"name": "tag",
											"source": 10,
											"value": "190"
										},
										{
											"begin": 11785,
											"end": 11965,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11833,
											"end": 11910,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11830,
											"end": 11831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11823,
											"end": 11911,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11930,
											"end": 11934,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 11927,
											"end": 11928,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11920,
											"end": 11935,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 11958,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 11951,
											"end": 11952,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11944,
											"end": 11959,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12142,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 11971,
											"end": 12142,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12010,
											"end": 12013,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12033,
											"end": 12057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 12051,
											"end": 12056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12033,
											"end": 12057,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 12033,
											"end": 12057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12033,
											"end": 12057,
											"name": "tag",
											"source": 10,
											"value": "371"
										},
										{
											"begin": 12033,
											"end": 12057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12024,
											"end": 12057,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12024,
											"end": 12057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12079,
											"end": 12083,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12072,
											"end": 12077,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12069,
											"end": 12084,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12066,
											"end": 12107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 12066,
											"end": 12107,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12087,
											"end": 12105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12087,
											"end": 12105,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 12087,
											"end": 12105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12087,
											"end": 12105,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 12087,
											"end": 12105,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12066,
											"end": 12107,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 12066,
											"end": 12107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12134,
											"end": 12135,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12127,
											"end": 12132,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12123,
											"end": 12136,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12116,
											"end": 12136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12116,
											"end": 12136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12142,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12142,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12142,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11971,
											"end": 12142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12148,
											"end": 12330,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 12148,
											"end": 12330,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12288,
											"end": 12322,
											"name": "PUSH",
											"source": 10,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 12284,
											"end": 12285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12276,
											"end": 12282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12272,
											"end": 12286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12265,
											"end": 12323,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12148,
											"end": 12330,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12148,
											"end": 12330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12336,
											"end": 12702,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 12336,
											"end": 12702,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12478,
											"end": 12481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12499,
											"end": 12566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 12563,
											"end": 12565,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12558,
											"end": 12561,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12566,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 12499,
											"end": 12566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12499,
											"end": 12566,
											"name": "tag",
											"source": 10,
											"value": "376"
										},
										{
											"begin": 12499,
											"end": 12566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12492,
											"end": 12566,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12492,
											"end": 12566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12575,
											"end": 12668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 12664,
											"end": 12667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12575,
											"end": 12668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 12575,
											"end": 12668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12575,
											"end": 12668,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 12575,
											"end": 12668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12693,
											"end": 12695,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12688,
											"end": 12691,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12684,
											"end": 12696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12677,
											"end": 12696,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12677,
											"end": 12696,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12336,
											"end": 12702,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12336,
											"end": 12702,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12336,
											"end": 12702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12336,
											"end": 12702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12708,
											"end": 13127,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 12708,
											"end": 13127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12874,
											"end": 12878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12912,
											"end": 12914,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12901,
											"end": 12910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12897,
											"end": 12915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12889,
											"end": 12915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12889,
											"end": 12915,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12961,
											"end": 12970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12955,
											"end": 12959,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12951,
											"end": 12971,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12947,
											"end": 12948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12936,
											"end": 12945,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12932,
											"end": 12949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12925,
											"end": 12972,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12989,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 13115,
											"end": 13119,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12989,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 12989,
											"end": 13120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12989,
											"end": 13120,
											"name": "tag",
											"source": 10,
											"value": "379"
										},
										{
											"begin": 12989,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13120,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 13120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12708,
											"end": 13127,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12708,
											"end": 13127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12708,
											"end": 13127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12708,
											"end": 13127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"contracts/Ownable.sol",
								"contracts/Registry.sol",
								"contracts/interfaces/IRegistry.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"addToWhitelist(address)": "e43252d7",
							"areWhitelisted(address[])": "1c84bfc2",
							"bulkAddToWhitelist(address[])": "6c79af10",
							"bulkRemoveFromWhitelist(address[])": "ab4bca64",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"grantRoleAdmin(address)": "0a84246d",
							"hasRole(bytes32,address)": "91d14854",
							"isWhitelisted(address)": "3af32abf",
							"removeFromWhitelist(address)": "8ab1d681",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"whitelist(address)": "9b19251a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"Removed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"Whitelisted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"members\",\"type\":\"address[]\"}],\"name\":\"areWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"members\",\"type\":\"address[]\"}],\"name\":\"bulkAddToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"members\",\"type\":\"address[]\"}],\"name\":\"bulkRemoveFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRoleAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"thev\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"addToWhitelist(address)\":{\"params\":{\"member\":\"Address of the member to add.\"}},\"areWhitelisted(address[])\":{\"params\":{\"members\":\"Array of addresses of the members to check.\"},\"returns\":{\"_0\":\"True if all addresses are whitelisted, false otherwise.\"}},\"bulkAddToWhitelist(address[])\":{\"params\":{\"members\":\"Array of addresses of the members of cohort to add.\"}},\"bulkRemoveFromWhitelist(address[])\":{\"params\":{\"members\":\"Array of addresses of the members of cohort to remove.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"grantRoleAdmin(address)\":{\"details\":\"Add the address of the relayer contract when relaying and operating a registry\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isWhitelisted(address)\":{\"details\":\"this call assumes that you are interested in the current cohort\",\"params\":{\"member\":\"Address of the member to check.\"},\"returns\":{\"_0\":\"True if the address is whitelisted, false otherwise.\"}},\"removeFromWhitelist(address)\":{\"params\":{\"member\":\"Address of the member to remove.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Registry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addToWhitelist(address)\":{\"notice\":\"This function is used to add addresses to the whitelist.\"},\"areWhitelisted(address[])\":{\"notice\":\"This function is used to check if an array of addresses are whitelisted.\"},\"bulkAddToWhitelist(address[])\":{\"notice\":\"This function is used to bulk add addresses to the whitelist.\"},\"bulkRemoveFromWhitelist(address[])\":{\"notice\":\"This function is used to bulk remove addresses from the whitelist.\"},\"grantRoleAdmin(address)\":{\"notice\":\"This function is used to grant Default admin role\"},\"isWhitelisted(address)\":{\"notice\":\"This function is used to check if an address is whitelisted.\"},\"removeFromWhitelist(address)\":{\"notice\":\"This function is used to remove addresses from the whitelist.\"}},\"notice\":\"This contract is used to manage the whitelist of addresses that can be used across the Chibarihill program.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Registry.sol\":\"Registry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"contracts/Ownable.sol\":{\"keccak256\":\"0x3f4305479d6f502bcc43fb10cd8991b6acbe5858cc59a34d1ed6d8fd075a6dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0cb36f1abe2b6470d2e985e817167ad459fc9fe59cc37e423d12bcf5255ba18f\",\"dweb:/ipfs/QmU5nA456h88cQJZmrgo4cxihxgW5AmxrUNafhJ9BLAFgC\"]},\"contracts/Registry.sol\":{\"keccak256\":\"0x8554095dca5973d4c381d4ed65c5be4c63ec854194b646450dce8e11b92b12ec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a96b868f423ff8dbd6cfafdd70c85770601efac91353fd7d28651f8250767d91\",\"dweb:/ipfs/QmeXFLS3XiD7s4KivKUcdsMgFBd6rUawHPcEPxP9Aiu3Xy\"]},\"contracts/interfaces/IRegistry.sol\":{\"keccak256\":\"0x7e790941c22d1b984d4c9663a4a766e02a534dcd015fc9fb06b18a4c06171c4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e86541b606dbf6da1e061487034c0e10fa4977495f8c0a60ba6404453c9ba\",\"dweb:/ipfs/QmViYiNWcr1JtGi28wziXdqGqqMLoMQbhXgMvZyB1iTqF5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "contracts/Registry.sol:Registry",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 1609,
								"contract": "contracts/Registry.sol:Registry",
								"label": "whitelist",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/Registry.sol:Registry",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/Registry.sol:Registry",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addToWhitelist(address)": {
								"notice": "This function is used to add addresses to the whitelist."
							},
							"areWhitelisted(address[])": {
								"notice": "This function is used to check if an array of addresses are whitelisted."
							},
							"bulkAddToWhitelist(address[])": {
								"notice": "This function is used to bulk add addresses to the whitelist."
							},
							"bulkRemoveFromWhitelist(address[])": {
								"notice": "This function is used to bulk remove addresses from the whitelist."
							},
							"grantRoleAdmin(address)": {
								"notice": "This function is used to grant Default admin role"
							},
							"isWhitelisted(address)": {
								"notice": "This function is used to check if an address is whitelisted."
							},
							"removeFromWhitelist(address)": {
								"notice": "This function is used to remove addresses from the whitelist."
							}
						},
						"notice": "This contract is used to manage the whitelist of addresses that can be used across the Chibarihill program.",
						"version": 1
					}
				}
			},
			"contracts/interfaces/IRegistry.sol": {
				"IRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "member",
									"type": "address[]"
								}
							],
							"name": "areWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "members",
									"type": "address[]"
								}
							],
							"name": "bulkAddToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "members",
									"type": "address[]"
								}
							],
							"name": "bulkRemoveFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRoleAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "isWhitelisted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "member",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "thev",
						"kind": "dev",
						"methods": {},
						"title": "IRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addToWhitelist(address)": "e43252d7",
							"areWhitelisted(address[])": "1c84bfc2",
							"bulkAddToWhitelist(address[])": "6c79af10",
							"bulkRemoveFromWhitelist(address[])": "ab4bca64",
							"grantRoleAdmin(address)": "0a84246d",
							"isWhitelisted(address)": "3af32abf",
							"removeFromWhitelist(address)": "8ab1d681"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"member\",\"type\":\"address[]\"}],\"name\":\"areWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"members\",\"type\":\"address[]\"}],\"name\":\"bulkAddToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"members\",\"type\":\"address[]\"}],\"name\":\"bulkRemoveFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRoleAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"thev\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is the interface for a registry contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IRegistry.sol\":\"IRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IRegistry.sol\":{\"keccak256\":\"0x7e790941c22d1b984d4c9663a4a766e02a534dcd015fc9fb06b18a4c06171c4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://444e86541b606dbf6da1e061487034c0e10fa4977495f8c0a60ba6404453c9ba\",\"dweb:/ipfs/QmViYiNWcr1JtGi28wziXdqGqqMLoMQbhXgMvZyB1iTqF5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This is the interface for a registry contract",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							410
						],
						"ERC165": [
							609
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							621
						],
						"Math": [
							1486
						],
						"Strings": [
							585
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 389,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 411,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 586,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 610,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"1841:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 410,
										"src": "1841:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1841:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nameLocations": [
											"1850:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "1850:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1850:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nameLocations": [
											"1866:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 609,
										"src": "1866:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1866:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1534:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 315,
							"linearizedBaseContracts": [
								315,
								609,
								621,
								388,
								410
							],
							"name": "AccessControl",
							"nameLocation": "1824:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1930:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1905:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1905:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "1955:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "1947:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1947:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "1886:8:0",
									"nodeType": "StructDefinition",
									"scope": 315,
									"src": "1879:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2014:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "1977:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1985:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1977:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nameLocations": [
													"1996:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "1996:8:0"
											},
											"referencedDeclaration": 19,
											"src": "1996:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2051:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2027:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2027:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2072:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2495:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2516:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 92,
														"src": "2505:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2505:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2083:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2472:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:14:0"
									},
									"src": "2463:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										608
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2697:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2714:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "2734:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2729:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2729:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$388",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2750:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2729:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2714:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2789:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2765:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$315_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2771:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 608,
															"src": "2765:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2765:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2714:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2707:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2545:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2615:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2673:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2640:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2633:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2633:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2632:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2691:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2691:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:6:0"
									},
									"scope": 315,
									"src": "2606:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										355
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "2987:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3004:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3011:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3004:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3017:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3004:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3025:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3004:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "2997:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2814:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2904:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2963:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2920:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2912:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2934:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2926:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2980:6:0"
									},
									"scope": 315,
									"src": "2895:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3390:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3411:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "3417:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3417:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 131,
														"src": "3400:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3400:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3400:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3046:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3343:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3362:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3353:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3390:0:0"
									},
									"scope": 315,
									"src": "3334:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3791:406:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3805:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3814:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3820:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3806:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3806:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "3801:390:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "3830:361:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3938:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 113,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 97,
																								"src": "4009:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 585,
																								"src": "3989:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$585_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3997:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 584,
																							"src": "3989:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3989:28:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4043:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 120,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4116:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 119,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4108:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 118,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4108:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4108:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 122,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4123:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 116,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 585,
																								"src": "4088:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$585_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 117,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4096:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 564,
																							"src": "4088:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4088:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3896:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "3900:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3896:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3896:252:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3868:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3868:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3868:298:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3844:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3844:336:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "3844:336:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3443:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3746:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3738:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3760:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3752:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3752:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3737:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3791:0:0"
									},
									"scope": 315,
									"src": "3718:479:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "4461:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 140,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4478:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 142,
														"indexExpression": {
															"id": 141,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4485:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4478:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4491:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4478:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 139,
												"id": 144,
												"nodeType": "Return",
												"src": "4471:29:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4203:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4387:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4434:8:0"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4408:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4400:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4399:14:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4452:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4451:9:0"
									},
									"scope": 315,
									"src": "4378:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										371
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4906:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4927:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4933:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "4916:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4916:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4916:25:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4513:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "4899:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4886:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4877:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "4877:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4877:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4812:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4868:8:0"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4830:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4822:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4844:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4836:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4906:0:0"
									},
									"scope": 315,
									"src": "4803:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										379
									],
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "5332:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 181,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5354:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 182,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 180,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "5342:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5342:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "5342:26:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4954:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 176,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5325:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 175,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5312:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5312:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 174,
												"name": "onlyRole",
												"nameLocations": [
													"5303:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5303:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5303:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5237:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5294:8:0"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5256:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5248:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5270:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5262:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5247:31:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5332:0:0"
									},
									"scope": 315,
									"src": "5228:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										387
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5989:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "6007:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 197,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "6018:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6018:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6007:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6032:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5999:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5999:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "5999:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "6105:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "6111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "6093:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "6093:26:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5381:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5921:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5980:8:0"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5942:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5934:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5934:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5956:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5948:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5933:31:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5989:0:0"
									},
									"scope": 315,
									"src": "5912:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "6879:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6900:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 219,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6906:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 217,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "6889:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6889:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "6889:25:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6132:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6820:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6839:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6831:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6853:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6845:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6830:31:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6879:0:0"
									},
									"scope": 315,
									"src": "6811:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "7119:174:0",
										"statements": [
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7137:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "7129:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 231,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7129:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7170:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 233,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "7157:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7157:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7129:46:0"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 237,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7185:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 239,
															"indexExpression": {
																"id": 238,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "7192:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7185:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7198:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7185:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "7210:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7185:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "7185:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 246,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7257:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 247,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7276:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 244,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "7234:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "EmitStatement",
												"src": "7229:57:0"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "6927:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7055:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7077:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7069:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 225,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7091:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7083:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7068:33:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7119:0:0"
									},
									"scope": 315,
									"src": "7046:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "7529:165:0",
										"statements": [
											{
												"condition": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7543:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 260,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7552:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 261,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "7558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 259,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7544:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "7539:149:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "7568:120:0",
													"statements": [
														{
															"expression": {
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 264,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7582:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 266,
																			"indexExpression": {
																				"id": 265,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "7589:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7582:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7595:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7582:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 269,
																	"indexExpression": {
																		"id": 268,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7603:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7582:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7614:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7582:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "ExpressionStatement",
															"src": "7582:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 274,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "7649:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7655:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 400,
																			"src": "7664:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7664:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 273,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "7637:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7637:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 279,
															"nodeType": "EmitStatement",
															"src": "7632:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "7299:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7470:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7489:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7481:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7481:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7495:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7480:31:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7529:0:0"
									},
									"scope": 315,
									"src": "7461:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "7934:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 292,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "7956:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 293,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 291,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "7948:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7948:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "7944:149:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "7972:121:0",
													"statements": [
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 295,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7986:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 297,
																			"indexExpression": {
																				"id": 296,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 286,
																				"src": "7993:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7986:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7999:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7986:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8007:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7986:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8018:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7986:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "7986:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 305,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "8054:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 306,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8060:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 307,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 400,
																			"src": "8069:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8069:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 304,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "8042:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8042:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 310,
															"nodeType": "EmitStatement",
															"src": "8037:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "7700:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7874:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7894:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7886:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7908:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "7900:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7885:31:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7934:0:0"
									},
									"scope": 315,
									"src": "7865:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 316,
							"src": "1806:6295:0",
							"usedErrors": []
						}
					],
					"src": "108:7994:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							388
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 318,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 327,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 336,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 345,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 388,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 388,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 388,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 388,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 388,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "209:2710:1",
							"usedErrors": []
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							410
						]
					},
					"id": 411,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 391,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 410,
							"linearizedBaseContracts": [
								410
							],
							"name": "Context",
							"nameLocation": "626:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "702:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 396,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 395,
												"id": 398,
												"nodeType": "Return",
												"src": "712:17:2"
											}
										]
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "693:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:2"
									},
									"scope": 410,
									"src": "640:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "809:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 405,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 404,
												"id": 407,
												"nodeType": "Return",
												"src": "819:15:2"
											}
										]
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "793:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 402,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:2"
									},
									"scope": 410,
									"src": "742:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 411,
							"src": "608:235:2",
							"usedErrors": []
						}
					],
					"src": "86:758:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1486
						],
						"Strings": [
							585
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 413,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 1487,
							"src": "126:25:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 414,
								"nodeType": "StructuredDocumentation",
								"src": "153:34:3",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585
							],
							"name": "Strings",
							"nameLocation": "196:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 417,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "235:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "210:54:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 415,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "210:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 416,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "246:18:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 420,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "293:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "270:43:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 418,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "270:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 419,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "486:625:3",
										"statements": [
											{
												"id": 466,
												"nodeType": "UncheckedBlock",
												"src": "496:609:3",
												"statements": [
													{
														"assignments": [
															429
														],
														"declarations": [
															{
																"constant": false,
																"id": 429,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "528:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 466,
																"src": "520:14:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 428,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "520:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 436,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 432,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "548:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 430,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1486,
																		"src": "537:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1486_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "542:5:3",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1323,
																	"src": "537:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "537:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "557:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "537:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "520:38:3"
													},
													{
														"assignments": [
															438
														],
														"declarations": [
															{
																"constant": false,
																"id": 438,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "586:6:3",
																"nodeType": "VariableDeclaration",
																"scope": 466,
																"src": "572:20:3",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 437,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "572:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 443,
														"initialValue": {
															"arguments": [
																{
																	"id": 441,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "606:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "595:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 439,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "599:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "595:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "572:41:3"
													},
													{
														"assignments": [
															445
														],
														"declarations": [
															{
																"constant": false,
																"id": 445,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "635:3:3",
																"nodeType": "VariableDeclaration",
																"scope": 466,
																"src": "627:11:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 444,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "627:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 446,
														"nodeType": "VariableDeclarationStatement",
														"src": "627:11:3"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "708:67:3",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "726:35:3",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "749:2:3",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "753:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "745:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "745:15:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "733:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:28:3"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "726:3:3"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 438,
																"isOffset": false,
																"isSlot": false,
																"src": "737:6:3",
																"valueSize": 1
															},
															{
																"declaration": 429,
																"isOffset": false,
																"isSlot": false,
																"src": "753:6:3",
																"valueSize": 1
															},
															{
																"declaration": 445,
																"isOffset": false,
																"isSlot": false,
																"src": "726:3:3",
																"valueSize": 1
															}
														],
														"id": 447,
														"nodeType": "InlineAssembly",
														"src": "699:76:3"
													},
													{
														"body": {
															"id": 462,
															"nodeType": "Block",
															"src": "801:267:3",
															"statements": [
																{
																	"expression": {
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "819:5:3",
																		"subExpression": {
																			"id": 449,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 445,
																			"src": "819:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 451,
																	"nodeType": "ExpressionStatement",
																	"src": "819:5:3"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "902:84:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "932:3:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "946:5:3"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "953:2:3",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "942:3:3"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "942:14:3"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "958:8:3"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "937:4:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "937:30:3"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "924:7:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "924:44:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "924:44:3"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 417,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "958:8:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 445,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "932:3:3",
																			"valueSize": 1
																		},
																		{
																			"declaration": 423,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "946:5:3",
																			"valueSize": 1
																		}
																	],
																	"id": 452,
																	"nodeType": "InlineAssembly",
																	"src": "893:93:3"
																},
																{
																	"expression": {
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 453,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "1003:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1012:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1003:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 456,
																	"nodeType": "ExpressionStatement",
																	"src": "1003:11:3"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 457,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "1036:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1045:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1036:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 461,
																	"nodeType": "IfStatement",
																	"src": "1032:21:3",
																	"trueBody": {
																		"id": 460,
																		"nodeType": "Break",
																		"src": "1048:5:3"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "795:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 463,
														"nodeType": "WhileStatement",
														"src": "788:280:3"
													},
													{
														"expression": {
															"id": 464,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "1088:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 427,
														"id": 465,
														"nodeType": "Return",
														"src": "1081:13:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "320:90:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "424:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "441:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "433:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:15:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "471:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "471:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:15:3"
									},
									"scope": 585,
									"src": "415:696:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "1290:100:3",
										"statements": [
											{
												"id": 486,
												"nodeType": "UncheckedBlock",
												"src": "1300:84:3",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 477,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "1343:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 480,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 471,
																				"src": "1362:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 478,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1486,
																				"src": "1350:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1486_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1355:6:3",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1446,
																			"src": "1350:11:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1350:18:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 482,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1371:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1350:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 476,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	488,
																	564,
																	584
																],
																"referencedDeclaration": 564,
																"src": "1331:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1331:42:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 475,
														"id": 485,
														"nodeType": "Return",
														"src": "1324:49:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1117:94:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1225:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1245:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1237:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:15:3"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "1275:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 473,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1275:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1274:15:3"
									},
									"scope": 585,
									"src": "1216:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "1603:347:3",
										"statements": [
											{
												"assignments": [
													499
												],
												"declarations": [
													{
														"constant": false,
														"id": 499,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1626:6:3",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "1613:19:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 498,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1613:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 508,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1645:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 503,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "1649:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1645:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1658:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1645:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1635:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 500,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1639:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1635:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1613:47:3"
											},
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 509,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1670:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 511,
														"indexExpression": {
															"hexValue": "30",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1677:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1670:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1682:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1670:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "1670:15:3"
											},
											{
												"expression": {
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 515,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1695:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 517,
														"indexExpression": {
															"hexValue": "31",
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1702:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1695:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1707:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "1695:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "1695:15:3"
											},
											{
												"body": {
													"id": 549,
													"nodeType": "Block",
													"src": "1765:83:3",
													"statements": [
														{
															"expression": {
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 535,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "1779:6:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 537,
																	"indexExpression": {
																		"id": 536,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "1786:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1779:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 538,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "1791:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 542,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 539,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 491,
																			"src": "1800:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1808:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "1800:11:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1791:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "1779:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 544,
															"nodeType": "ExpressionStatement",
															"src": "1779:33:3"
														},
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "1826:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1836:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "1826:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "1826:11:3"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 529,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "1753:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1757:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1753:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 550,
												"initializationExpression": {
													"assignments": [
														522
													],
													"declarations": [
														{
															"constant": false,
															"id": 522,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1733:1:3",
															"nodeType": "VariableDeclaration",
															"scope": 550,
															"src": "1725:9:3",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 521,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1725:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 528,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1737:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 524,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "1741:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1737:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1737:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1725:26:3"
												},
												"loopExpression": {
													"expression": {
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "1760:3:3",
														"subExpression": {
															"id": 532,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "1762:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 534,
													"nodeType": "ExpressionStatement",
													"src": "1760:3:3"
												},
												"nodeType": "ForStatement",
												"src": "1720:128:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 552,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "1865:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1865:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 551,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1857:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1857:55:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "1857:55:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 560,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1936:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1929:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 558,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1929:6:3",
															"typeDescriptions": {}
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:14:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 497,
												"id": 562,
												"nodeType": "Return",
												"src": "1922:21:3"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "1396:112:3",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1522:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1542:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1534:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1534:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1557:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1549:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1533:31:3"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1588:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 495,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:15:3"
									},
									"scope": 585,
									"src": "1513:437:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "2175:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 577,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 567,
																			"src": "2220:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 576,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2212:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 575,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2212:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2212:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2204:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 573,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2204:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2204:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 580,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "2228:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 572,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															488,
															564,
															584
														],
														"referencedDeclaration": 564,
														"src": "2192:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 571,
												"id": 582,
												"nodeType": "Return",
												"src": "2185:59:3"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "1956:141:3",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2111:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2131:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "2123:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2123:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2122:14:3"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "2160:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2160:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2159:15:3"
									},
									"scope": 585,
									"src": "2102:149:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "188:2065:3",
							"usedErrors": []
						}
					],
					"src": "101:2153:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							609
						],
						"IERC165": [
							621
						]
					},
					"id": 610,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 588,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 610,
							"sourceUnit": 622,
							"src": "124:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 590,
										"name": "IERC165",
										"nameLocations": [
											"754:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 621,
										"src": "754:7:4"
									},
									"id": 591,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:4"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 589,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 609,
							"linearizedBaseContracts": [
								609,
								621
							],
							"name": "ERC165",
							"nameLocation": "744:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										620
									],
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "920:64:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "937:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 602,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "957:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$621_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$621_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 601,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$621",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:4",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 599,
												"id": 606,
												"nodeType": "Return",
												"src": "930:47:4"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 596,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:4"
									},
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "856:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 593,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:4"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "914:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:4"
									},
									"scope": 609,
									"src": "829:155:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 610,
							"src": "726:260:4",
							"usedErrors": []
						}
					],
					"src": "99:888:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							621
						]
					},
					"id": 622,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 611,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 612,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 621,
							"linearizedBaseContracts": [
								621
							],
							"name": "IERC165",
							"nameLocation": "415:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "801:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 614,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:5"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "844:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:5"
									},
									"scope": 621,
									"src": "774:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 622,
							"src": "405:447:5",
							"usedErrors": []
						}
					],
					"src": "100:753:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1486
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 623,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 624,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:6",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486
							],
							"name": "Math",
							"nameLocation": "210:4:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 628,
									"members": [
										{
											"id": 625,
											"name": "Down",
											"nameLocation": "245:4:6",
											"nodeType": "EnumValue",
											"src": "245:4:6"
										},
										{
											"id": 626,
											"name": "Up",
											"nameLocation": "287:2:6",
											"nodeType": "EnumValue",
											"src": "287:2:6"
										},
										{
											"id": 627,
											"name": "Zero",
											"nameLocation": "318:4:6",
											"nodeType": "EnumValue",
											"src": "318:4:6"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:6",
									"nodeType": "EnumDefinition",
									"src": "221:122:6"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "480:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 638,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 631,
															"src": "497:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 639,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "501:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 642,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 633,
														"src": "509:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:6",
													"trueExpression": {
														"id": 641,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "505:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 637,
												"id": 644,
												"nodeType": "Return",
												"src": "490:20:6"
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:6",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "426:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "437:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:6"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "471:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:6"
									},
									"scope": 1486,
									"src": "413:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "655:37:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 656,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "672:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 657,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "676:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 660,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "684:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:6",
													"trueExpression": {
														"id": 659,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "680:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 655,
												"id": 662,
												"nodeType": "Return",
												"src": "665:20:6"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:6",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "601:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "612:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:6"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 664,
												"src": "646:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:6"
									},
									"scope": 1486,
									"src": "588:104:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 686,
										"nodeType": "Block",
										"src": "876:82:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 674,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 675,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 669,
																	"src": "935:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 677,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 678,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "941:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 679,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "945:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 681,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 673,
												"id": 685,
												"nodeType": "Return",
												"src": "923:28:6"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:6",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "822:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "833:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:6"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "867:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:6"
									},
									"scope": 1486,
									"src": "805:153:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 711,
										"nodeType": "Block",
										"src": "1228:123:6",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 697,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "1316:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 701,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "1330:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 704,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 705,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "1339:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:6",
													"trueExpression": {
														"hexValue": "30",
														"id": 700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 696,
												"id": 710,
												"nodeType": "Return",
												"src": "1309:35:6"
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:6",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1174:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1185:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:6"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1219:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:6"
									},
									"scope": 1486,
									"src": "1157:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "1795:3797:6",
										"statements": [
											{
												"id": 832,
												"nodeType": "UncheckedBlock",
												"src": "1805:3781:6",
												"statements": [
													{
														"assignments": [
															725
														],
														"declarations": [
															{
																"constant": false,
																"id": 725,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2134:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 832,
																"src": "2126:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 724,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2126:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 726,
														"nodeType": "VariableDeclarationStatement",
														"src": "2126:13:6"
													},
													{
														"assignments": [
															728
														],
														"declarations": [
															{
																"constant": false,
																"id": 728,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2206:5:6",
																"nodeType": "VariableDeclaration",
																"scope": 832,
																"src": "2198:13:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 727,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2198:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 729,
														"nodeType": "VariableDeclarationStatement",
														"src": "2198:13:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2278:157:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2296:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2313:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2316:1:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2319:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2319:6:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2306:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:20:6"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2300:2:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2343:18:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2356:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2359:1:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2352:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2352:9:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2343:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2378:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2395:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2391:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2391:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2410:2:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2414:5:6"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2407:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2407:13:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2387:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2387:34:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2378:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "2343:5:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "2399:5:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "2414:5:6",
																"valueSize": 1
															},
															{
																"declaration": 728,
																"isOffset": false,
																"isSlot": false,
																"src": "2378:5:6",
																"valueSize": 1
															},
															{
																"declaration": 715,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:1:6",
																"valueSize": 1
															},
															{
																"declaration": 715,
																"isOffset": false,
																"isSlot": false,
																"src": "2356:1:6",
																"valueSize": 1
															},
															{
																"declaration": 717,
																"isOffset": false,
																"isSlot": false,
																"src": "2316:1:6",
																"valueSize": 1
															},
															{
																"declaration": 717,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:1:6",
																"valueSize": 1
															}
														],
														"id": 730,
														"nodeType": "InlineAssembly",
														"src": "2269:166:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 731,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 728,
																"src": "2516:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2525:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2516:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 739,
														"nodeType": "IfStatement",
														"src": "2512:75:6",
														"trueBody": {
															"id": 738,
															"nodeType": "Block",
															"src": "2528:59:6",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 734,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 725,
																			"src": "2553:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 735,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "2561:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2553:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 723,
																	"id": 737,
																	"nodeType": "Return",
																	"src": "2546:26:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 741,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "2697:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 742,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 728,
																		"src": "2711:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2697:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 740,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2689:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																	"typeString": "function (bool) pure"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2689:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 745,
														"nodeType": "ExpressionStatement",
														"src": "2689:28:6"
													},
													{
														"assignments": [
															747
														],
														"declarations": [
															{
																"constant": false,
																"id": 747,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "2981:9:6",
																"nodeType": "VariableDeclaration",
																"scope": 832,
																"src": "2973:17:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 746,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2973:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 748,
														"nodeType": "VariableDeclarationStatement",
														"src": "2973:17:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3013:291:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3082:38:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3102:1:6"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3105:1:6"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3108:11:6"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3095:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3095:25:6"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3082:9:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3202:41:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3225:9:6"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3236:5:6"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3222:2:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:20:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3211:32:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3202:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3260:30:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3273:5:6"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3280:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3269:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3269:21:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 719,
																"isOffset": false,
																"isSlot": false,
																"src": "3108:11:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "3236:5:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "3260:5:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "3273:5:6",
																"valueSize": 1
															},
															{
																"declaration": 728,
																"isOffset": false,
																"isSlot": false,
																"src": "3202:5:6",
																"valueSize": 1
															},
															{
																"declaration": 728,
																"isOffset": false,
																"isSlot": false,
																"src": "3215:5:6",
																"valueSize": 1
															},
															{
																"declaration": 747,
																"isOffset": false,
																"isSlot": false,
																"src": "3082:9:6",
																"valueSize": 1
															},
															{
																"declaration": 747,
																"isOffset": false,
																"isSlot": false,
																"src": "3225:9:6",
																"valueSize": 1
															},
															{
																"declaration": 747,
																"isOffset": false,
																"isSlot": false,
																"src": "3280:9:6",
																"valueSize": 1
															},
															{
																"declaration": 715,
																"isOffset": false,
																"isSlot": false,
																"src": "3102:1:6",
																"valueSize": 1
															},
															{
																"declaration": 717,
																"isOffset": false,
																"isSlot": false,
																"src": "3105:1:6",
																"valueSize": 1
															}
														],
														"id": 749,
														"nodeType": "InlineAssembly",
														"src": "3004:300:6"
													},
													{
														"assignments": [
															751
														],
														"declarations": [
															{
																"constant": false,
																"id": 751,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3619:4:6",
																"nodeType": "VariableDeclaration",
																"scope": 832,
																"src": "3611:12:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 750,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3611:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 759,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 752,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "3626:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3641:12:6",
																			"subExpression": {
																				"id": 753,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 719,
																				"src": "3642:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3656:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3641:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 757,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3640:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3626:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3611:47:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3681:362:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3746:37:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3765:11:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3778:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3761:22:6"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "3746:11:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3850:25:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3863:5:6"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3870:4:6"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3859:16:6"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3850:5:6"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3990:39:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4010:1:6",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4013:4:6"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4006:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4006:12:6"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4020:4:6"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4002:23:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3998:31:6"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "3990:4:6"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 719,
																"isOffset": false,
																"isSlot": false,
																"src": "3746:11:6",
																"valueSize": 1
															},
															{
																"declaration": 719,
																"isOffset": false,
																"isSlot": false,
																"src": "3765:11:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "3850:5:6",
																"valueSize": 1
															},
															{
																"declaration": 725,
																"isOffset": false,
																"isSlot": false,
																"src": "3863:5:6",
																"valueSize": 1
															},
															{
																"declaration": 751,
																"isOffset": false,
																"isSlot": false,
																"src": "3778:4:6",
																"valueSize": 1
															},
															{
																"declaration": 751,
																"isOffset": false,
																"isSlot": false,
																"src": "3870:4:6",
																"valueSize": 1
															},
															{
																"declaration": 751,
																"isOffset": false,
																"isSlot": false,
																"src": "3990:4:6",
																"valueSize": 1
															},
															{
																"declaration": 751,
																"isOffset": false,
																"isSlot": false,
																"src": "4013:4:6",
																"valueSize": 1
															},
															{
																"declaration": 751,
																"isOffset": false,
																"isSlot": false,
																"src": "4020:4:6",
																"valueSize": 1
															}
														],
														"id": 760,
														"nodeType": "InlineAssembly",
														"src": "3672:371:6"
													},
													{
														"expression": {
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 761,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "4109:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 762,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "4118:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 763,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "4126:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4118:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4109:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 766,
														"nodeType": "ExpressionStatement",
														"src": "4109:21:6"
													},
													{
														"assignments": [
															768
														],
														"declarations": [
															{
																"constant": false,
																"id": 768,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4456:7:6",
																"nodeType": "VariableDeclaration",
																"scope": 832,
																"src": "4448:15:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 767,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4448:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 775,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 769,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4467:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 770,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "4471:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4467:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 772,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4466:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4486:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4466:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4448:39:6"
													},
													{
														"expression": {
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 776,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "4704:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4715:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 778,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "4719:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 779,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "4733:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4719:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4715:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4704:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 783,
														"nodeType": "ExpressionStatement",
														"src": "4704:36:6"
													},
													{
														"expression": {
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 784,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "4773:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4784:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 786,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "4788:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 787,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "4802:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4788:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4784:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4773:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 791,
														"nodeType": "ExpressionStatement",
														"src": "4773:36:6"
													},
													{
														"expression": {
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 792,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "4843:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4854:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 794,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "4858:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 795,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "4872:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4858:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4854:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4843:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 799,
														"nodeType": "ExpressionStatement",
														"src": "4843:36:6"
													},
													{
														"expression": {
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 800,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "4913:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4924:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 802,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "4928:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 803,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "4942:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4928:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4924:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4913:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 807,
														"nodeType": "ExpressionStatement",
														"src": "4913:36:6"
													},
													{
														"expression": {
															"id": 814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 808,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "4983:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4994:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 810,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "4998:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 811,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "5012:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4998:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4994:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4983:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 815,
														"nodeType": "ExpressionStatement",
														"src": "4983:36:6"
													},
													{
														"expression": {
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 816,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "5054:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5065:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 818,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 719,
																		"src": "5069:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 819,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "5083:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5069:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5065:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5054:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 823,
														"nodeType": "ExpressionStatement",
														"src": "5054:36:6"
													},
													{
														"expression": {
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 824,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 722,
																"src": "5524:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 825,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "5533:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 826,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "5541:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5533:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5524:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 829,
														"nodeType": "ExpressionStatement",
														"src": "5524:24:6"
													},
													{
														"expression": {
															"id": 830,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "5569:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 723,
														"id": 831,
														"nodeType": "Return",
														"src": "5562:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:6",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1700:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1692:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1692:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1719:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1711:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1738:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1730:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:73:6"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1787:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "1779:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1778:16:6"
									},
									"scope": 1486,
									"src": "1667:3925:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "5872:189:6",
										"statements": [
											{
												"assignments": [
													850
												],
												"declarations": [
													{
														"constant": false,
														"id": 850,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "5890:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 877,
														"src": "5882:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 849,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5882:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"arguments": [
														{
															"id": 852,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "5906:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 853,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "5909:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 854,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "5912:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 851,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															834,
															878
														],
														"referencedDeclaration": 834,
														"src": "5899:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5899:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5882:42:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$628",
															"typeString": "enum Math.Rounding"
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 857,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "5938:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$628",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 858,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "5950:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$628_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5959:2:6",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 626,
															"src": "5950:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$628",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "5938:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 862,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 837,
																	"src": "5972:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 863,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 839,
																	"src": "5975:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 864,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 841,
																	"src": "5978:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 861,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "5965:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5965:25:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5993:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5965:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5938:56:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 874,
												"nodeType": "IfStatement",
												"src": "5934:98:6",
												"trueBody": {
													"id": 873,
													"nodeType": "Block",
													"src": "5996:36:6",
													"statements": [
														{
															"expression": {
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 869,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "6010:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6020:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6010:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 872,
															"nodeType": "ExpressionStatement",
															"src": "6010:11:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 875,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 850,
													"src": "6048:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 848,
												"id": 876,
												"nodeType": "Return",
												"src": "6041:13:6"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "5598:121:6",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "5733:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "5757:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "5749:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5749:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "5776:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "5768:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "5795:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "5787:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "5825:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "5816:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$628",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 843,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 842,
														"name": "Rounding",
														"nameLocations": [
															"5816:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 628,
														"src": "5816:8:6"
													},
													"referencedDeclaration": 628,
													"src": "5816:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$628",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5739:100:6"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "5863:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5863:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:9:6"
									},
									"scope": 1486,
									"src": "5724:337:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "6337:1585:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "6351:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6356:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6351:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "6347:45:6",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "6359:33:6",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6380:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 885,
															"id": 890,
															"nodeType": "Return",
															"src": "6373:8:6"
														}
													]
												}
											},
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7079:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 989,
														"src": "7071:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 893,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7071:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7088:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 897,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "7099:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 896,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1158,
																			1194
																		],
																		"referencedDeclaration": 1158,
																		"src": "7094:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7094:7:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7105:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7094:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 901,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7093:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7088:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7071:36:6"
											},
											{
												"id": 988,
												"nodeType": "UncheckedBlock",
												"src": "7508:408:6",
												"statements": [
													{
														"expression": {
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 904,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7532:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 905,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7542:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 908,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 906,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7551:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 907,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7555:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7551:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7542:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 910,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7541:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7566:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7541:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7532:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 914,
														"nodeType": "ExpressionStatement",
														"src": "7532:35:6"
													},
													{
														"expression": {
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 915,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7581:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 916,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7591:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 917,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7600:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 918,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7604:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7600:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7591:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 921,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7590:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7615:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7590:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7581:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 925,
														"nodeType": "ExpressionStatement",
														"src": "7581:35:6"
													},
													{
														"expression": {
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 926,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7630:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 931,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 927,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7640:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 930,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 928,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7649:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 929,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7653:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7649:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7640:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 932,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7639:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7664:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7639:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7630:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 936,
														"nodeType": "ExpressionStatement",
														"src": "7630:35:6"
													},
													{
														"expression": {
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 937,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7679:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 938,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7689:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 939,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7698:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 940,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7702:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7698:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7689:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 943,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7688:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7713:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7688:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7679:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 947,
														"nodeType": "ExpressionStatement",
														"src": "7679:35:6"
													},
													{
														"expression": {
															"id": 957,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 948,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7728:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 949,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7738:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 952,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 950,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7747:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 951,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7751:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7747:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7738:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 954,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7737:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7762:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7737:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7728:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 958,
														"nodeType": "ExpressionStatement",
														"src": "7728:35:6"
													},
													{
														"expression": {
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 959,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7777:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 960,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7787:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 961,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7796:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 962,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7800:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7796:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7787:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 965,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7786:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7811:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7786:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7777:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 969,
														"nodeType": "ExpressionStatement",
														"src": "7777:35:6"
													},
													{
														"expression": {
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 970,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 894,
																"src": "7826:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 971,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7836:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 972,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "7845:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 973,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 894,
																					"src": "7849:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7845:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7836:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 976,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7835:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7860:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7835:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7826:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 980,
														"nodeType": "ExpressionStatement",
														"src": "7826:35:6"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 982,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "7886:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 983,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "7894:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 984,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "7898:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7894:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 981,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "7882:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7882:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 885,
														"id": 987,
														"nodeType": "Return",
														"src": "7875:30:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "6067:208:6",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6289:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6302:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6294:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6294:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:11:6"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "6328:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6327:9:6"
									},
									"scope": 1486,
									"src": "6280:1642:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "8098:161:6",
										"statements": [
											{
												"id": 1024,
												"nodeType": "UncheckedBlock",
												"src": "8108:145:6",
												"statements": [
													{
														"assignments": [
															1002
														],
														"declarations": [
															{
																"constant": false,
																"id": 1002,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8140:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1024,
																"src": "8132:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1001,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8132:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1006,
														"initialValue": {
															"arguments": [
																{
																	"id": 1004,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "8154:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1003,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	990,
																	1026
																],
																"referencedDeclaration": 990,
																"src": "8149:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8149:7:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8132:24:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1007,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "8177:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$628",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1011,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1008,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 996,
																					"src": "8187:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1009,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 628,
																						"src": "8199:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$628_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1010,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8208:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 626,
																					"src": "8199:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8187:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1016,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1014,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1012,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1002,
																						"src": "8214:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1013,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1002,
																						"src": "8223:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8214:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1015,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 993,
																					"src": "8232:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8214:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8187:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8240:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8187:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8236:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1021,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8186:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8177:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1000,
														"id": 1023,
														"nodeType": "Return",
														"src": "8170:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "7928:89:6",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8031:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8044:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "8036:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8036:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8056:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "8047:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$628",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 995,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 994,
														"name": "Rounding",
														"nameLocations": [
															"8047:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 628,
														"src": "8047:8:6"
													},
													"referencedDeclaration": 628,
													"src": "8047:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$628",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8035:30:6"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "8089:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8088:9:6"
									},
									"scope": 1486,
									"src": "8022:237:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "8444:922:6",
										"statements": [
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8462:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1157,
														"src": "8454:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1034,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1037,
												"initialValue": {
													"hexValue": "30",
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8471:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8454:18:6"
											},
											{
												"id": 1154,
												"nodeType": "UncheckedBlock",
												"src": "8482:855:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1038,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "8510:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8519:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8510:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8525:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8510:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1052,
														"nodeType": "IfStatement",
														"src": "8506:99:6",
														"trueBody": {
															"id": 1051,
															"nodeType": "Block",
															"src": "8528:77:6",
															"statements": [
																{
																	"expression": {
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1043,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "8546:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8556:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8546:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1046,
																	"nodeType": "ExpressionStatement",
																	"src": "8546:13:6"
																},
																{
																	"expression": {
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1047,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "8577:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8587:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8577:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1050,
																	"nodeType": "ExpressionStatement",
																	"src": "8577:13:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1053,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "8622:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8631:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8622:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8636:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8622:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1067,
														"nodeType": "IfStatement",
														"src": "8618:96:6",
														"trueBody": {
															"id": 1066,
															"nodeType": "Block",
															"src": "8639:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1058,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "8657:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8657:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1061,
																	"nodeType": "ExpressionStatement",
																	"src": "8657:12:6"
																},
																{
																	"expression": {
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1062,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "8687:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8697:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8687:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1065,
																	"nodeType": "ExpressionStatement",
																	"src": "8687:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1068,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "8731:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8740:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8731:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8745:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8731:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1082,
														"nodeType": "IfStatement",
														"src": "8727:96:6",
														"trueBody": {
															"id": 1081,
															"nodeType": "Block",
															"src": "8748:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1073,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "8766:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8776:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8766:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1076,
																	"nodeType": "ExpressionStatement",
																	"src": "8766:12:6"
																},
																{
																	"expression": {
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1077,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "8796:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1078,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "8796:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1080,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1083,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "8840:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8849:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "8840:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8854:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8840:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1097,
														"nodeType": "IfStatement",
														"src": "8836:96:6",
														"trueBody": {
															"id": 1096,
															"nodeType": "Block",
															"src": "8857:75:6",
															"statements": [
																{
																	"expression": {
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1088,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "8875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8885:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8875:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1091,
																	"nodeType": "ExpressionStatement",
																	"src": "8875:12:6"
																},
																{
																	"expression": {
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1092,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "8905:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8915:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "8905:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1095,
																	"nodeType": "ExpressionStatement",
																	"src": "8905:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1098,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "8949:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8958:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "8949:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8962:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8949:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1112,
														"nodeType": "IfStatement",
														"src": "8945:93:6",
														"trueBody": {
															"id": 1111,
															"nodeType": "Block",
															"src": "8965:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1103,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "8983:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8993:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "8983:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1106,
																	"nodeType": "ExpressionStatement",
																	"src": "8983:11:6"
																},
																{
																	"expression": {
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1107,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "9012:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9022:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9012:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1110,
																	"nodeType": "ExpressionStatement",
																	"src": "9012:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1113,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "9055:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9064:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9055:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9068:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9055:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1127,
														"nodeType": "IfStatement",
														"src": "9051:93:6",
														"trueBody": {
															"id": 1126,
															"nodeType": "Block",
															"src": "9071:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1118,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "9089:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9099:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9089:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1121,
																	"nodeType": "ExpressionStatement",
																	"src": "9089:11:6"
																},
																{
																	"expression": {
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1122,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "9118:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9128:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9118:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1125,
																	"nodeType": "ExpressionStatement",
																	"src": "9118:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1128,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "9161:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9170:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9161:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9174:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9161:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1142,
														"nodeType": "IfStatement",
														"src": "9157:93:6",
														"trueBody": {
															"id": 1141,
															"nodeType": "Block",
															"src": "9177:73:6",
															"statements": [
																{
																	"expression": {
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1133,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "9195:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9205:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9195:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1136,
																	"nodeType": "ExpressionStatement",
																	"src": "9195:11:6"
																},
																{
																	"expression": {
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1137,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "9224:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9234:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9224:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1140,
																	"nodeType": "ExpressionStatement",
																	"src": "9224:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1143,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "9267:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9276:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9267:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9280:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9267:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1153,
														"nodeType": "IfStatement",
														"src": "9263:64:6",
														"trueBody": {
															"id": 1152,
															"nodeType": "Block",
															"src": "9283:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1148,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "9301:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9311:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9301:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1151,
																	"nodeType": "ExpressionStatement",
																	"src": "9301:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1155,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1035,
													"src": "9353:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1156,
												"nodeType": "Return",
												"src": "9346:13:6"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "8265:113:6",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8392:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8405:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "8397:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8397:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:6"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "8435:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8435:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8434:9:6"
									},
									"scope": 1486,
									"src": "8383:983:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "9599:165:6",
										"statements": [
											{
												"id": 1192,
												"nodeType": "UncheckedBlock",
												"src": "9609:149:6",
												"statements": [
													{
														"assignments": [
															1170
														],
														"declarations": [
															{
																"constant": false,
																"id": 1170,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9641:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1192,
																"src": "9633:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1169,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9633:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1174,
														"initialValue": {
															"arguments": [
																{
																	"id": 1172,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "9655:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1171,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1158,
																	1194
																],
																"referencedDeclaration": 1158,
																"src": "9650:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9650:11:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9633:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1175,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "9682:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$628",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1179,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1176,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1164,
																					"src": "9692:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1177,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 628,
																						"src": "9704:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$628_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1178,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9713:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 626,
																					"src": "9704:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9692:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1182,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1180,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9719:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1181,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1170,
																						"src": "9724:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9719:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1183,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1161,
																					"src": "9733:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9719:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9692:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9745:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9692:54:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9741:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1189,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9691:56:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9682:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1168,
														"id": 1191,
														"nodeType": "Return",
														"src": "9675:72:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "9372:142:6",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9528:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9541:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "9533:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9533:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9557:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "9548:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$628",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1163,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1162,
														"name": "Rounding",
														"nameLocations": [
															"9548:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 628,
														"src": "9548:8:6"
													},
													"referencedDeclaration": 628,
													"src": "9548:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$628",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9532:34:6"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "9590:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9590:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9589:9:6"
									},
									"scope": 1486,
									"src": "9519:245:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "9951:828:6",
										"statements": [
											{
												"assignments": [
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9969:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1322,
														"src": "9961:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1202,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9961:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1205,
												"initialValue": {
													"hexValue": "30",
													"id": 1204,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9978:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9961:18:6"
											},
											{
												"id": 1319,
												"nodeType": "UncheckedBlock",
												"src": "9989:761:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1206,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10017:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10026:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10026:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10017:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1222,
														"nodeType": "IfStatement",
														"src": "10013:99:6",
														"trueBody": {
															"id": 1221,
															"nodeType": "Block",
															"src": "10034:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1211,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "10052:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10061:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1213,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10065:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10061:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10052:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1216,
																	"nodeType": "ExpressionStatement",
																	"src": "10052:15:6"
																},
																{
																	"expression": {
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1217,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10085:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10095:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10085:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1220,
																	"nodeType": "ExpressionStatement",
																	"src": "10085:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1223,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10129:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10138:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10138:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10129:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1239,
														"nodeType": "IfStatement",
														"src": "10125:99:6",
														"trueBody": {
															"id": 1238,
															"nodeType": "Block",
															"src": "10146:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1228,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "10164:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1231,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1229,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10173:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1230,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10177:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10173:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10164:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1233,
																	"nodeType": "ExpressionStatement",
																	"src": "10164:15:6"
																},
																{
																	"expression": {
																		"id": 1236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1234,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10197:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10207:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10197:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1237,
																	"nodeType": "ExpressionStatement",
																	"src": "10197:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1240,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10241:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10250:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10254:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10250:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10241:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1256,
														"nodeType": "IfStatement",
														"src": "10237:99:6",
														"trueBody": {
															"id": 1255,
															"nodeType": "Block",
															"src": "10258:78:6",
															"statements": [
																{
																	"expression": {
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1245,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "10276:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10285:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1247,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10289:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10285:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10276:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1250,
																	"nodeType": "ExpressionStatement",
																	"src": "10276:15:6"
																},
																{
																	"expression": {
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1251,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10309:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10319:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10309:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1254,
																	"nodeType": "ExpressionStatement",
																	"src": "10309:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1257,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10353:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10362:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10366:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10362:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10353:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1273,
														"nodeType": "IfStatement",
														"src": "10349:96:6",
														"trueBody": {
															"id": 1272,
															"nodeType": "Block",
															"src": "10369:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1262,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "10387:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1263,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10396:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1264,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10400:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10396:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10387:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1267,
																	"nodeType": "ExpressionStatement",
																	"src": "10387:14:6"
																},
																{
																	"expression": {
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1268,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10419:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10429:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10419:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1271,
																	"nodeType": "ExpressionStatement",
																	"src": "10419:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1274,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10462:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10471:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10475:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10471:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10462:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1290,
														"nodeType": "IfStatement",
														"src": "10458:96:6",
														"trueBody": {
															"id": 1289,
															"nodeType": "Block",
															"src": "10478:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1279,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "10496:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10505:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10509:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10505:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10496:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1284,
																	"nodeType": "ExpressionStatement",
																	"src": "10496:14:6"
																},
																{
																	"expression": {
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1285,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10528:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1286,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10528:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1288,
																	"nodeType": "ExpressionStatement",
																	"src": "10528:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1291,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10571:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10580:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10584:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10580:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10571:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1307,
														"nodeType": "IfStatement",
														"src": "10567:96:6",
														"trueBody": {
															"id": 1306,
															"nodeType": "Block",
															"src": "10587:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1296,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "10605:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10614:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10618:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10614:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10605:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1301,
																	"nodeType": "ExpressionStatement",
																	"src": "10605:14:6"
																},
																{
																	"expression": {
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1302,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10637:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10647:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10637:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1305,
																	"nodeType": "ExpressionStatement",
																	"src": "10637:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1308,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "10680:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1309,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10689:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10693:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10689:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10680:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1318,
														"nodeType": "IfStatement",
														"src": "10676:64:6",
														"trueBody": {
															"id": 1317,
															"nodeType": "Block",
															"src": "10696:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1313,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1203,
																			"src": "10714:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10724:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10714:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1316,
																	"nodeType": "ExpressionStatement",
																	"src": "10714:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1320,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1203,
													"src": "10766:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1201,
												"id": 1321,
												"nodeType": "Return",
												"src": "10759:13:6"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "9770:114:6",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "9898:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9912:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "9904:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:15:6"
									},
									"returnParameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "9942:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9942:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9941:9:6"
									},
									"scope": 1486,
									"src": "9889:890:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "11014:165:6",
										"statements": [
											{
												"id": 1357,
												"nodeType": "UncheckedBlock",
												"src": "11024:149:6",
												"statements": [
													{
														"assignments": [
															1335
														],
														"declarations": [
															{
																"constant": false,
																"id": 1335,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11056:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1357,
																"src": "11048:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1334,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11048:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1339,
														"initialValue": {
															"arguments": [
																{
																	"id": 1337,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1326,
																	"src": "11071:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1336,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1323,
																	1359
																],
																"referencedDeclaration": 1323,
																"src": "11065:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11065:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11048:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1340,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "11098:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$628",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1341,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1329,
																					"src": "11108:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1342,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 628,
																						"src": "11120:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$628_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11129:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 626,
																					"src": "11120:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11108:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1347,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1345,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11135:2:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1346,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1335,
																						"src": "11139:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11135:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1348,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1326,
																					"src": "11148:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11135:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11108:45:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11160:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11108:53:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11156:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1354,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11107:55:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11098:64:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1333,
														"id": 1356,
														"nodeType": "Return",
														"src": "11091:71:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "10785:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10942:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10956:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "10948:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10948:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10972:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "10963:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$628",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1328,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1327,
														"name": "Rounding",
														"nameLocations": [
															"10963:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 628,
														"src": "10963:8:6"
													},
													"referencedDeclaration": 628,
													"src": "10963:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$628",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10947:34:6"
									},
									"returnParameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "11005:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11005:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11004:9:6"
									},
									"scope": 1486,
									"src": "10933:246:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1445,
										"nodeType": "Block",
										"src": "11493:600:6",
										"statements": [
											{
												"assignments": [
													1368
												],
												"declarations": [
													{
														"constant": false,
														"id": 1368,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11511:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1445,
														"src": "11503:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11503:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1370,
												"initialValue": {
													"hexValue": "30",
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11520:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11503:18:6"
											},
											{
												"id": 1442,
												"nodeType": "UncheckedBlock",
												"src": "11531:533:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1371,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "11559:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11568:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11559:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11574:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11559:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1385,
														"nodeType": "IfStatement",
														"src": "11555:98:6",
														"trueBody": {
															"id": 1384,
															"nodeType": "Block",
															"src": "11577:76:6",
															"statements": [
																{
																	"expression": {
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1376,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "11595:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11605:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11595:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1379,
																	"nodeType": "ExpressionStatement",
																	"src": "11595:13:6"
																},
																{
																	"expression": {
																		"id": 1382,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1380,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "11626:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11636:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11626:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1383,
																	"nodeType": "ExpressionStatement",
																	"src": "11626:12:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1386,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "11670:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11679:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11670:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11684:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11670:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1400,
														"nodeType": "IfStatement",
														"src": "11666:95:6",
														"trueBody": {
															"id": 1399,
															"nodeType": "Block",
															"src": "11687:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1391,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "11705:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11715:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11705:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1394,
																	"nodeType": "ExpressionStatement",
																	"src": "11705:12:6"
																},
																{
																	"expression": {
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1395,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "11735:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11745:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11735:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1398,
																	"nodeType": "ExpressionStatement",
																	"src": "11735:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1401,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "11778:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11787:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11778:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11792:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11778:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1415,
														"nodeType": "IfStatement",
														"src": "11774:95:6",
														"trueBody": {
															"id": 1414,
															"nodeType": "Block",
															"src": "11795:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1406,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "11813:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11823:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11813:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1409,
																	"nodeType": "ExpressionStatement",
																	"src": "11813:12:6"
																},
																{
																	"expression": {
																		"id": 1412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1410,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "11843:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11843:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1413,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1416,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "11886:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11895:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11886:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11900:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11886:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1430,
														"nodeType": "IfStatement",
														"src": "11882:95:6",
														"trueBody": {
															"id": 1429,
															"nodeType": "Block",
															"src": "11903:74:6",
															"statements": [
																{
																	"expression": {
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1421,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1362,
																			"src": "11921:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11931:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11921:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1424,
																	"nodeType": "ExpressionStatement",
																	"src": "11921:12:6"
																},
																{
																	"expression": {
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1425,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "11951:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11961:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11951:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1428,
																	"nodeType": "ExpressionStatement",
																	"src": "11951:11:6"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1431,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1362,
																	"src": "11994:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12003:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11994:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12007:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11994:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1441,
														"nodeType": "IfStatement",
														"src": "11990:64:6",
														"trueBody": {
															"id": 1440,
															"nodeType": "Block",
															"src": "12010:44:6",
															"statements": [
																{
																	"expression": {
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1436,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "12028:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12038:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12028:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1439,
																	"nodeType": "ExpressionStatement",
																	"src": "12028:11:6"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1443,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1368,
													"src": "12080:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1366,
												"id": 1444,
												"nodeType": "Return",
												"src": "12073:13:6"
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "11185:240:6",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11439:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11454:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "11446:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11445:15:6"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1446,
												"src": "11484:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11484:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11483:9:6"
									},
									"scope": 1486,
									"src": "11430:663:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "12329:173:6",
										"statements": [
											{
												"id": 1483,
												"nodeType": "UncheckedBlock",
												"src": "12339:157:6",
												"statements": [
													{
														"assignments": [
															1458
														],
														"declarations": [
															{
																"constant": false,
																"id": 1458,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12371:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1483,
																"src": "12363:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1457,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12363:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1462,
														"initialValue": {
															"arguments": [
																{
																	"id": 1460,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "12387:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1459,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1446,
																	1485
																],
																"referencedDeclaration": 1446,
																"src": "12380:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12380:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12363:30:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1463,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1458,
																"src": "12414:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$628",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1464,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1452,
																					"src": "12424:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1465,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 628,
																						"src": "12436:8:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$628_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1466,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12445:2:6",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 626,
																					"src": "12436:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$628",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12424:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1473,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1468,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12451:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1471,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1469,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1458,
																									"src": "12457:6:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"hexValue": "38",
																									"id": 1470,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12466:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_8_by_1",
																										"typeString": "int_const 8"
																									},
																									"value": "8"
																								},
																								"src": "12457:10:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1472,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12456:12:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12451:17:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1474,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1449,
																					"src": "12471:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12451:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12424:52:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12424:60:6",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12479:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1480,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12423:62:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12414:71:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1456,
														"id": 1482,
														"nodeType": "Return",
														"src": "12407:78:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1447,
										"nodeType": "StructuredDocumentation",
										"src": "12099:143:6",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12256:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12271:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "12263:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12263:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12287:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "12278:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$628",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1450,
														"name": "Rounding",
														"nameLocations": [
															"12278:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 628,
														"src": "12278:8:6"
													},
													"referencedDeclaration": 628,
													"src": "12278:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$628",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12262:34:6"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "12320:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12320:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12319:9:6"
									},
									"scope": 1486,
									"src": "12247:255:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1487,
							"src": "202:12302:6",
							"usedErrors": []
						}
					],
					"src": "103:12402:6"
				},
				"id": 6
			},
			"contracts/Ownable.sol": {
				"ast": {
					"absolutePath": "contracts/Ownable.sol",
					"exportedSymbols": {
						"InvalidNewOwner": [
							1492
						],
						"OnlyOwner": [
							1490
						],
						"Ownable": [
							1595
						]
					},
					"id": 1596,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:7"
						},
						{
							"errorSelector": "5fc483c5",
							"id": 1490,
							"name": "OnlyOwner",
							"nameLocation": "64:9:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1489,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "73:2:7"
							},
							"src": "58:18:7"
						},
						{
							"errorSelector": "54a56786",
							"id": 1492,
							"name": "InvalidNewOwner",
							"nameLocation": "83:15:7",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1491,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "98:2:7"
							},
							"src": "77:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1595,
							"linearizedBaseContracts": [
								1595
							],
							"name": "Ownable",
							"nameLocation": "121:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1494,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "148:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1595,
									"src": "133:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1493,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "133:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d4ee1d90",
									"id": 1496,
									"mutability": "mutable",
									"name": "newOwner",
									"nameLocation": "172:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1595,
									"src": "157:23:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1495,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "157:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "fd575b90e08337dbc8a9891cc25e57d1279c8fc3ffcbebf3d3e26e87f2b1be6a",
									"id": 1502,
									"name": "OwnershipChangeInitiated",
									"nameLocation": "191:24:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "232:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "216:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "263:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "247:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "247:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "215:57:7"
									},
									"src": "185:88:7"
								},
								{
									"anonymous": false,
									"eventSelector": "f6e86b25c15de77a320568a6764173c59dde852fbd31499dfd340cda681eb041",
									"id": 1508,
									"name": "OwnershipChangeAccepted",
									"nameLocation": "282:23:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "322:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "306:29:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "306:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "353:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "337:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "305:57:7"
									},
									"src": "276:87:7"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "388:31:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1510,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1584,
														"src": "394:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "394:13:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "394:13:7"
											},
											{
												"id": 1513,
												"nodeType": "PlaceholderStatement",
												"src": "413:1:7"
											}
										]
									},
									"id": 1515,
									"name": "onlyOwner",
									"nameLocation": "376:9:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "385:2:7"
									},
									"src": "367:52:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1524,
										"nodeType": "Block",
										"src": "499:32:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1520,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "515:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "519:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "515:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1519,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "505:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "505:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "505:21:7"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "423:59:7",
										"text": "@notice The constructor sets the owner of the contract."
									},
									"id": 1525,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "496:2:7"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:0:7"
									},
									"scope": 1595,
									"src": "485:46:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1542,
										"nodeType": "Block",
										"src": "724:83:7",
										"statements": [
											{
												"expression": {
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1533,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "730:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1534,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "741:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "730:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "730:20:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1538,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1539,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "793:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1537,
														"name": "OwnershipChangeInitiated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "761:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "761:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1541,
												"nodeType": "EmitStatement",
												"src": "756:46:7"
											}
										]
									},
									"documentation": {
										"id": 1526,
										"nodeType": "StructuredDocumentation",
										"src": "535:121:7",
										"text": "@notice This function is used to transfer ownership of the contract.\n @param _newOwner Address of the new owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1543,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1531,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1530,
												"name": "onlyOwner",
												"nameLocations": [
													"714:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1515,
												"src": "714:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "714:9:7"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "668:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "694:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "686:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:19:7"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "724:0:7"
									},
									"scope": 1595,
									"src": "659:148:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "920:166:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1547,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "930:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "934:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "930:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1549,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "944:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "930:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1554,
												"nodeType": "IfStatement",
												"src": "926:52:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1551,
															"name": "InvalidNewOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1492,
															"src": "961:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1552,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "961:17:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1553,
													"nodeType": "RevertStatement",
													"src": "954:24:7"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1556,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "1013:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1557,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "1020:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1555,
														"name": "OwnershipChangeAccepted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "989:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "989:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1559,
												"nodeType": "EmitStatement",
												"src": "984:45:7"
											},
											{
												"expression": {
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1560,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1496,
														"src": "1035:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1054:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1046:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1561,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1046:7:7",
																"typeDescriptions": {}
															}
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1046:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1035:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "1035:21:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1568,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "1072:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1567,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1594,
														"src": "1062:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1062:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "1062:19:7"
											}
										]
									},
									"documentation": {
										"id": 1544,
										"nodeType": "StructuredDocumentation",
										"src": "811:70:7",
										"text": "@notice This function is used to accept ownership of the contract."
									},
									"functionSelector": "79ba5097",
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "893:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:7"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "920:0:7"
									},
									"scope": 1595,
									"src": "884:202:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1583,
										"nodeType": "Block",
										"src": "1127:54:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1575,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1137:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1141:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1137:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1577,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "1151:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1137:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1582,
												"nodeType": "IfStatement",
												"src": "1133:43:7",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1579,
															"name": "OnlyOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "1165:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$__$",
																"typeString": "function () pure"
															}
														},
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1165:11:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1581,
													"nodeType": "RevertStatement",
													"src": "1158:18:7"
												}
											}
										]
									},
									"id": 1584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1099:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1110:2:7"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:7"
									},
									"scope": 1595,
									"src": "1090:91:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1593,
										"nodeType": "Block",
										"src": "1232:28:7",
										"statements": [
											{
												"expression": {
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1589,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "1238:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1590,
														"name": "_newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "1246:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1238:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "1238:17:7"
											}
										]
									},
									"id": 1594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "1194:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "1212:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "1204:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:19:7"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1232:0:7"
									},
									"scope": 1595,
									"src": "1185:75:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1596,
							"src": "103:1159:7",
							"usedErrors": [
								1490,
								1492
							]
						}
					],
					"src": "33:1229:7"
				},
				"id": 7
			},
			"contracts/Registry.sol": {
				"ast": {
					"absolutePath": "contracts/Registry.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							410
						],
						"ERC165": [
							609
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							621
						],
						"IRegistry": [
							1862
						],
						"InvalidNewOwner": [
							1492
						],
						"Math": [
							1486
						],
						"MemberNotWhitelisted": [
							1816
						],
						"NotWhitelisted": [
							1818
						],
						"OnlyOwner": [
							1490
						],
						"Ownable": [
							1595
						],
						"Registry": [
							1810
						],
						"Strings": [
							585
						]
					},
					"id": 1811,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1597,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1598,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1811,
							"sourceUnit": 316,
							"src": "58:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IRegistry.sol",
							"file": "./interfaces/IRegistry.sol",
							"id": 1599,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1811,
							"sourceUnit": 1863,
							"src": "117:36:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 1600,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1811,
							"sourceUnit": 1596,
							"src": "154:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1602,
										"name": "IRegistry",
										"nameLocations": [
											"357:9:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1862,
										"src": "357:9:8"
									},
									"id": 1603,
									"nodeType": "InheritanceSpecifier",
									"src": "357:9:8"
								},
								{
									"baseName": {
										"id": 1604,
										"name": "AccessControl",
										"nameLocations": [
											"368:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "368:13:8"
									},
									"id": 1605,
									"nodeType": "InheritanceSpecifier",
									"src": "368:13:8"
								}
							],
							"canonicalName": "Registry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1601,
								"nodeType": "StructuredDocumentation",
								"src": "179:157:8",
								"text": "@title Registry\n @notice This contract is used to manage the whitelist of addresses that can be used across the Chibarihill program.\n @author thev"
							},
							"fullyImplemented": true,
							"id": 1810,
							"linearizedBaseContracts": [
								1810,
								315,
								609,
								621,
								388,
								410,
								1862
							],
							"name": "Registry",
							"nameLocation": "345:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9b19251a",
									"id": 1609,
									"mutability": "mutable",
									"name": "whitelist",
									"nameLocation": "418:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1810,
									"src": "386:41:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1608,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1606,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "394:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "386:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1607,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "405:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "aab7954e9d246b167ef88aeddad35209ca2489d95a8aeb59e288d9b19fae5a54",
									"id": 1613,
									"name": "Whitelisted",
									"nameLocation": "438:11:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"indexed": true,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "466:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "450:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:24:8"
									},
									"src": "432:42:8"
								},
								{
									"anonymous": false,
									"eventSelector": "066a905b79c0121afe61e3a44e0b14b6bc1ec16d854cdba09efdfc9b6aa9af81",
									"id": 1617,
									"name": "Removed",
									"nameLocation": "483:7:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"indexed": true,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "507:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "491:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "491:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "490:24:8"
									},
									"src": "477:38:8"
								},
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "533:53:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1621,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "550:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1622,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "570:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "574:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "570:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1620,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "539:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "539:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "539:42:8"
											}
										]
									},
									"id": 1627,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "530:2:8"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "533:0:8"
									},
									"scope": 1810,
									"src": "519:67:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1840
									],
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "833:92:8",
										"statements": [
											{
												"body": {
													"id": 1654,
													"nodeType": "Block",
													"src": "884:37:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1649,
																			"name": "members",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1631,
																			"src": "903:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1651,
																		"indexExpression": {
																			"id": 1650,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1638,
																			"src": "911:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "903:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1648,
																	"name": "_whitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "892:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "892:22:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1653,
															"nodeType": "ExpressionStatement",
															"src": "892:22:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1641,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "859:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1642,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1631,
															"src": "863:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "871:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "863:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "859:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1655,
												"initializationExpression": {
													"assignments": [
														1638
													],
													"declarations": [
														{
															"constant": false,
															"id": 1638,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "852:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1655,
															"src": "844:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1637,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "844:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1640,
													"initialValue": {
														"hexValue": "30",
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "856:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "844:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "879:3:8",
														"subExpression": {
															"id": 1645,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1638,
															"src": "879:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1647,
													"nodeType": "ExpressionStatement",
													"src": "879:3:8"
												},
												"nodeType": "ForStatement",
												"src": "839:82:8"
											}
										]
									},
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "590:146:8",
										"text": "@notice This function is used to bulk add addresses to the whitelist.\n @param members Array of addresses of the members of cohort to add."
									},
									"functionSelector": "6c79af10",
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1634,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "813:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1635,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1633,
												"name": "onlyRole",
												"nameLocations": [
													"804:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "804:8:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "804:28:8"
										}
									],
									"name": "bulkAddToWhitelist",
									"nameLocation": "748:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "members",
												"nameLocation": "786:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "767:26:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1629,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "767:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1630,
													"nodeType": "ArrayTypeName",
													"src": "767:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:28:8"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "833:0:8"
									},
									"scope": 1810,
									"src": "739:186:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1845
									],
									"body": {
										"id": 1670,
										"nodeType": "Block",
										"src": "1128:29:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1667,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1660,
															"src": "1145:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1666,
														"name": "_whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "1134:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1134:18:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "1134:18:8"
											}
										]
									},
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "929:118:8",
										"text": "@notice This function is used to add addresses to the whitelist.\n @param member Address of the member to add."
									},
									"functionSelector": "e43252d7",
									"id": 1671,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1663,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1108:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1664,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1662,
												"name": "onlyRole",
												"nameLocations": [
													"1099:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1099:8:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1099:28:8"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "1059:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1082:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "1074:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1074:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1073:16:8"
									},
									"returnParameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1128:0:8"
									},
									"scope": 1810,
									"src": "1050:107:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1686,
										"nodeType": "Block",
										"src": "1206:65:8",
										"statements": [
											{
												"expression": {
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1676,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "1212:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1678,
														"indexExpression": {
															"id": 1677,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "1222:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1212:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1232:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1212:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1681,
												"nodeType": "ExpressionStatement",
												"src": "1212:24:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1683,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "1259:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1682,
														"name": "Whitelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "1247:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1247:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1685,
												"nodeType": "EmitStatement",
												"src": "1242:24:8"
											}
										]
									},
									"id": 1687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_whitelist",
									"nameLocation": "1170:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1189:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1687,
												"src": "1181:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1181:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1180:16:8"
									},
									"returnParameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1206:0:8"
									},
									"scope": 1810,
									"src": "1161:110:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1851
									],
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "1539:98:8",
										"statements": [
											{
												"body": {
													"id": 1714,
													"nodeType": "Block",
													"src": "1590:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1709,
																			"name": "members",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1691,
																			"src": "1615:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1711,
																		"indexExpression": {
																			"id": 1710,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1698,
																			"src": "1623:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1615:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1708,
																	"name": "_removeWhitelist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "1598:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1598:28:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1713,
															"nodeType": "ExpressionStatement",
															"src": "1598:28:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1701,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1698,
														"src": "1565:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1702,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1691,
															"src": "1569:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1577:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1569:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1565:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1715,
												"initializationExpression": {
													"assignments": [
														1698
													],
													"declarations": [
														{
															"constant": false,
															"id": 1698,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1558:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1715,
															"src": "1550:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1697,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1550:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1700,
													"initialValue": {
														"hexValue": "30",
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1562:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1550:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1585:3:8",
														"subExpression": {
															"id": 1705,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1698,
															"src": "1585:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1707,
													"nodeType": "ExpressionStatement",
													"src": "1585:3:8"
												},
												"nodeType": "ForStatement",
												"src": "1545:88:8"
											}
										]
									},
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "1275:154:8",
										"text": "@notice This function is used to bulk remove addresses from the whitelist.\n @param members Array of addresses of the members of cohort to remove."
									},
									"functionSelector": "ab4bca64",
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1694,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1519:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1695,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1693,
												"name": "onlyRole",
												"nameLocations": [
													"1510:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1510:8:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1510:28:8"
										}
									],
									"name": "bulkRemoveFromWhitelist",
									"nameLocation": "1441:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "members",
												"nameLocation": "1489:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "1470:26:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1689,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1470:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1690,
													"nodeType": "ArrayTypeName",
													"src": "1470:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:36:8"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1539:0:8"
									},
									"scope": 1810,
									"src": "1432:205:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1856
									],
									"body": {
										"id": 1730,
										"nodeType": "Block",
										"src": "1853:35:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1727,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "1876:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1726,
														"name": "_removeWhitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1747,
														"src": "1859:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1859:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1729,
												"nodeType": "ExpressionStatement",
												"src": "1859:24:8"
											}
										]
									},
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "1641:126:8",
										"text": "@notice This function is used to remove addresses from the whitelist.\n @param member Address of the member to remove."
									},
									"functionSelector": "8ab1d681",
									"id": 1731,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1723,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1833:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1724,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1722,
												"name": "onlyRole",
												"nameLocations": [
													"1824:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1824:8:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1824:28:8"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "1779:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1807:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1731,
												"src": "1799:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:16:8"
									},
									"returnParameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1853:0:8"
									},
									"scope": 1810,
									"src": "1770:118:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1746,
										"nodeType": "Block",
										"src": "1943:62:8",
										"statements": [
											{
												"expression": {
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1736,
															"name": "whitelist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "1949:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1738,
														"indexExpression": {
															"id": 1737,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "1959:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1949:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1969:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1949:25:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1741,
												"nodeType": "ExpressionStatement",
												"src": "1949:25:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1743,
															"name": "member",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1733,
															"src": "1993:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1742,
														"name": "Removed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "1985:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1985:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1745,
												"nodeType": "EmitStatement",
												"src": "1980:20:8"
											}
										]
									},
									"id": 1747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeWhitelist",
									"nameLocation": "1901:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "1926:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "1918:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1918:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1917:16:8"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1943:0:8"
									},
									"scope": 1810,
									"src": "1892:113:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1826
									],
									"body": {
										"id": 1759,
										"nodeType": "Block",
										"src": "2344:35:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1755,
														"name": "whitelist",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "2357:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1757,
													"indexExpression": {
														"id": 1756,
														"name": "member",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1750,
														"src": "2367:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2357:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1754,
												"id": 1758,
												"nodeType": "Return",
												"src": "2350:24:8"
											}
										]
									},
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "2009:266:8",
										"text": "@notice This function is used to check if an address is whitelisted.\n @dev this call assumes that you are interested in the current cohort\n @param member Address of the member to check.\n @return True if the address is whitelisted, false otherwise."
									},
									"functionSelector": "3af32abf",
									"id": 1760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelisted",
									"nameLocation": "2287:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "2309:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "2301:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2300:16:8"
									},
									"returnParameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1760,
												"src": "2338:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1752,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2338:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2337:6:8"
									},
									"scope": 1810,
									"src": "2278:101:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1834
									],
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "2686:131:8",
										"statements": [
											{
												"body": {
													"id": 1789,
													"nodeType": "Block",
													"src": "2737:59:8",
													"statements": [
														{
															"condition": {
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "2749:26:8",
																"subExpression": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 1781,
																				"name": "members",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1764,
																				"src": "2764:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																					"typeString": "address[] calldata"
																				}
																			},
																			"id": 1783,
																			"indexExpression": {
																				"id": 1782,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1770,
																				"src": "2772:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2764:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1780,
																		"name": "isWhitelisted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "2750:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address) view returns (bool)"
																		}
																	},
																	"id": 1784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2750:25:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1788,
															"nodeType": "IfStatement",
															"src": "2745:44:8",
															"trueBody": {
																"expression": {
																	"hexValue": "66616c7365",
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2784:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"functionReturnParameters": 1768,
																"id": 1787,
																"nodeType": "Return",
																"src": "2777:12:8"
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1773,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1770,
														"src": "2712:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1774,
															"name": "members",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "2716:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1775,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2724:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2716:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2712:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1790,
												"initializationExpression": {
													"assignments": [
														1770
													],
													"declarations": [
														{
															"constant": false,
															"id": 1770,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2705:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1790,
															"src": "2697:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1769,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2697:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1772,
													"initialValue": {
														"hexValue": "30",
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2709:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2697:13:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2732:3:8",
														"subExpression": {
															"id": 1777,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1770,
															"src": "2734:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1779,
													"nodeType": "ExpressionStatement",
													"src": "2732:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2692:104:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2808:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1768,
												"id": 1792,
												"nodeType": "Return",
												"src": "2801:11:8"
											}
										]
									},
									"documentation": {
										"id": 1761,
										"nodeType": "StructuredDocumentation",
										"src": "2383:219:8",
										"text": "@notice This function is used to check if an array of addresses are whitelisted.\n @param members Array of addresses of the members to check.\n @return True if all addresses are whitelisted, false otherwise."
									},
									"functionSelector": "1c84bfc2",
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "areWhitelisted",
									"nameLocation": "2614:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "members",
												"nameLocation": "2648:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "2629:26:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1762,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2629:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1763,
													"nodeType": "ArrayTypeName",
													"src": "2629:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2628:28:8"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "2680:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2680:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2679:6:8"
									},
									"scope": 1810,
									"src": "2605:212:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1861
									],
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "3054:50:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1804,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3071:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1805,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "3091:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1803,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "3060:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3060:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1807,
												"nodeType": "ExpressionStatement",
												"src": "3060:39:8"
											}
										]
									},
									"documentation": {
										"id": 1795,
										"nodeType": "StructuredDocumentation",
										"src": "2821:151:8",
										"text": "@notice This function is used to grant Default admin role\n @dev Add the address of the relayer contract when relaying and operating a registry"
									},
									"functionSelector": "0a84246d",
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1800,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3034:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1801,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1799,
												"name": "onlyRole",
												"nameLocations": [
													"3025:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "3025:8:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "3025:28:8"
										}
									],
									"name": "grantRoleAdmin",
									"nameLocation": "2984:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3007:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "2999:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2999:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2998:17:8"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3054:0:8"
									},
									"scope": 1810,
									"src": "2975:129:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1811,
							"src": "336:2770:8",
							"usedErrors": []
						}
					],
					"src": "33:3073:8"
				},
				"id": 8
			},
			"contracts/interfaces/IRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IRegistry.sol",
					"exportedSymbols": {
						"IRegistry": [
							1862
						],
						"MemberNotWhitelisted": [
							1816
						],
						"NotWhitelisted": [
							1818
						]
					},
					"id": 1863,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1812,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"errorSelector": "face60cd",
							"id": 1816,
							"name": "MemberNotWhitelisted",
							"nameLocation": "64:20:9",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1815,
								"nodeType": "ParameterList",
								"parameters": [
									{
										"constant": false,
										"id": 1814,
										"mutability": "mutable",
										"name": "member",
										"nameLocation": "93:6:9",
										"nodeType": "VariableDeclaration",
										"scope": 1816,
										"src": "85:14:9",
										"stateVariable": false,
										"storageLocation": "default",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"typeName": {
											"id": 1813,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "85:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"visibility": "internal"
									}
								],
								"src": "84:16:9"
							},
							"src": "58:43:9"
						},
						{
							"errorSelector": "584a7938",
							"id": 1818,
							"name": "NotWhitelisted",
							"nameLocation": "108:14:9",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1817,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "122:2:9"
							},
							"src": "102:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1819,
								"nodeType": "StructuredDocumentation",
								"src": "127:96:9",
								"text": "@title IRegistry\n @notice This is the interface for a registry contract\n @author thev"
							},
							"fullyImplemented": false,
							"id": 1862,
							"linearizedBaseContracts": [
								1862
							],
							"name": "IRegistry",
							"nameLocation": "233:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3af32abf",
									"id": 1826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isWhitelisted",
									"nameLocation": "256:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "278:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "270:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "269:16:9"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "309:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1823,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "309:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:6:9"
									},
									"scope": 1862,
									"src": "247:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1c84bfc2",
									"id": 1834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "areWhitelisted",
									"nameLocation": "328:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "362:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "343:25:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1827,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "343:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1828,
													"nodeType": "ArrayTypeName",
													"src": "343:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:27:9"
									},
									"returnParameters": {
										"id": 1833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "393:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1831,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "393:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:6:9"
									},
									"scope": 1862,
									"src": "319:80:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6c79af10",
									"id": 1840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bulkAddToWhitelist",
									"nameLocation": "412:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "members",
												"nameLocation": "450:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "431:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1835,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "431:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1836,
													"nodeType": "ArrayTypeName",
													"src": "431:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "430:28:9"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "467:0:9"
									},
									"scope": 1862,
									"src": "403:65:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e43252d7",
									"id": 1845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addToWhitelist",
									"nameLocation": "481:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "504:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "496:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:16:9"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "520:0:9"
									},
									"scope": 1862,
									"src": "472:49:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ab4bca64",
									"id": 1851,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bulkRemoveFromWhitelist",
									"nameLocation": "534:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "members",
												"nameLocation": "577:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1851,
												"src": "558:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1846,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "558:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1847,
													"nodeType": "ArrayTypeName",
													"src": "558:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:28:9"
									},
									"returnParameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:0:9"
									},
									"scope": 1862,
									"src": "525:70:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8ab1d681",
									"id": 1856,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeFromWhitelist",
									"nameLocation": "608:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "member",
												"nameLocation": "636:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "628:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "627:16:9"
									},
									"returnParameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "652:0:9"
									},
									"scope": 1862,
									"src": "599:54:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0a84246d",
									"id": 1861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRoleAdmin",
									"nameLocation": "666:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "689:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "681:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "681:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "680:17:9"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:0:9"
									},
									"scope": 1862,
									"src": "657:50:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1863,
							"src": "223:486:9",
							"usedErrors": []
						}
					],
					"src": "33:676:9"
				},
				"id": 9
			}
		}
	}
}